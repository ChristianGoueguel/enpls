[{"path":"https://nanx.me/enpls/CONDUCT.html","id":null,"dir":"","previous_headings":"","what":"Contributor Code of Conduct","title":"Contributor Code of Conduct","text":"contributors maintainers project, pledge respect people contribute reporting issues, posting feature requests, updating documentation, submitting pull requests patches, activities. committed making participation project harassment-free experience everyone, regardless level experience, gender, gender identity expression, sexual orientation, disability, personal appearance, body size, race, ethnicity, age, religion. Examples unacceptable behavior participants include use sexual language imagery, derogatory comments personal attacks, trolling, public private harassment, insults, unprofessional conduct. Project maintainers right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct. Project maintainers follow Code Conduct may removed project team. Instances abusive, harassing, otherwise unacceptable behavior may reported opening issue contacting one project maintainers. Code Conduct adapted Contributor Covenant (https://contributor-covenant.org), version 1.0.0, available https://contributor-covenant.org/version/1/0/0/.","code":""},{"path":"https://nanx.me/enpls/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to enpls","title":"Contributing to enpls","text":"üëçüéâ First , thanks taking time contribute! üéâüëç contribute project : Filing bug report feature request issue. Suggesting change via pull request.","code":""},{"path":"https://nanx.me/enpls/CONTRIBUTING.html","id":"issues","dir":"","previous_headings":"","what":"Issues","title":"Contributing to enpls","text":"file issue possible bug, please try include: Relevant package versions Necessary code data reproduce issue","code":""},{"path":"https://nanx.me/enpls/CONTRIBUTING.html","id":"pull-requests","dir":"","previous_headings":"","what":"Pull Requests","title":"Contributing to enpls","text":"suggest change via pull requests, please: Fork repository GitHub account. Clone forked repository local machine, make changes. Commit push changes GitHub. Create pull request.","code":""},{"path":"https://nanx.me/enpls/articles/enpls.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"A Brief Introduction to enpls","text":"enpls package offers algorithmic framework measuring feature importance, detecting outliers, ensemble modeling based (sparse) partial least squares regression. key functions included package listed table . Next, use data (Wang et al. 2015) demonstrate general workflow enpls. dataset contains 1,000 compounds, characterized 80 molecular descriptors. response octanol/water partition coefficient pH 7.4 (logD7.4). Let‚Äôs load data take look :","code":"library(\"enpls\") library(\"ggplot2\")  data(\"logd1k\") x <- logd1k$x y <- logd1k$y head(x)[, 1:5] #>   BalabanJ  BertzCT   Chi0  Chi0n  Chi0v #> 1    1.949  882.760 16.845 13.088 13.088 #> 2    1.970  781.936 15.905 13.204 14.021 #> 3    2.968  343.203  9.845  7.526  7.526 #> 4    2.050 1133.679 19.836 15.406 15.406 #> 5    2.719  437.346 12.129  9.487  9.487 #> 6    2.031  983.304 19.292 15.289 15.289 head(y) #> [1] -0.96 -0.92 -0.90 -0.83 -0.82 -0.79"},{"path":"https://nanx.me/enpls/articles/enpls.html","id":"model-fitting","dir":"Articles","previous_headings":"","what":"Model fitting","title":"A Brief Introduction to enpls","text":"fit ensemble sparse partial least squares data, model complexity usually reduced vanilla partial least squares build model.  used fitted model predict training data plotted predicted values true values. parameter ratio decides sampling ratio Monte-Carlo run; maxcomp controls maximum number components included within model; reptimes sets times Monte-Carlo resampling, recommend setting large number (500 default). One common parameter functions enpls parallel, controls number CPU cores use want train models parallel.","code":"set.seed(42) fit <- enspls.fit(x, y, ratio = 0.7, reptimes = 20, maxcomp = 3) y.pred <- predict(fit, newx = x)  df <- data.frame(y, y.pred) ggplot(df, aes_string(x = \"y\", y = \"y.pred\")) +   geom_abline(slope = 1, intercept = 0, colour = \"darkgrey\") +   geom_point(size = 3, shape = 1, alpha = 0.8) +   coord_fixed(ratio = 1) +   xlab(\"Observed Response\") +   ylab(\"Predicted Response\")"},{"path":"https://nanx.me/enpls/articles/enpls.html","id":"cross-validation","dir":"Articles","previous_headings":"","what":"Cross validation","title":"A Brief Introduction to enpls","text":"K-fold cross validation traditional way measure empirical predictive performance model. can use function cv.enpls() cv.enspls() perform \\(k\\)-fold cross validation ensemble (sparse) partial least squares model. Since parameters (number components level sparsity) automatically tuned model enpls, cross validation used see certain combinations parameters (specified ratio, maxcomp, alpha, etc.) can produce ensemble models better performance.  returned object gives three model performance evaluation metrics ensemble model: RMSE, MAE, \\(R^2\\). also plotted predicted values test fold true response.","code":"cv.fit <- cv.enspls(x, y,   nfolds = 5, ratio = 0.7,   reptimes = 10, maxcomp = 3, verbose = FALSE ) cv.fit #> Cross Validation Result for Ensemble Sparse Partial Least Squares #> --- #> RMSE = 1.1410 #> MAE = 0.913153 #> Rsquare = 0.587959 plot(cv.fit)"},{"path":"https://nanx.me/enpls/articles/enpls.html","id":"feature-importance","dir":"Articles","previous_headings":"","what":"Feature importance","title":"A Brief Introduction to enpls","text":"measure feature importance, simply use enpls.fs() enspls.fs():   top 10 important features ranked . boxplot gives additional information coefficient stability feature. can see feature TPSA (Topological Polar Surface Area) different pattern compared others: large effect size, effect sizes also large variance. indicates TPSA important predicting logD7.4. However, importance may vary different subsets samples.","code":"fs <- enspls.fs(x, y, ratio = 0.7, reptimes = 20, maxcomp = 3) print(fs, nvar = 10) #> Variable Importance by Ensemble Sparse Partial Least Squares #> --- #>                     Importance #> Chi1n                 29.48614 #> NumValenceElectrons   26.78683 #> HeavyAtomCount        23.28745 #> Chi1                  21.39361 #> LabuteASA             21.27471 #> SlogP_VSA2            20.93239 #> Chi0n                 20.54714 #> SlogP_VSA5            19.89059 #> MolMR                 19.82387 #> SMR_VSA5              19.19199 plot(fs, nvar = 10) plot(fs, type = \"boxplot\", nvar = 10)"},{"path":"https://nanx.me/enpls/articles/enpls.html","id":"outlier-detection","dir":"Articles","previous_headings":"","what":"Outlier detection","title":"A Brief Introduction to enpls","text":"using information prediction error distribution sample produced many models, can measure responses particular samples harder predict others. measurements can help identifying outliers dataset. Thus, can removed get us ‚Äúclean‚Äù dataset actual modeling. done enpls.od(), enspls.od() easily:   two plots showed several samples dataset might outlier candidates, based two different criterions. samples area plots represent different types outliers.","code":"od <- enspls.od(x, y, ratio = 0.8, reptimes = 20, maxcomp = 3) plot(od, prob = 0.05) plot(od, criterion = \"sd\", sdtimes = 2)"},{"path":"https://nanx.me/enpls/articles/enpls.html","id":"applicability-domain-evaluation","dir":"Articles","previous_headings":"","what":"Applicability domain evaluation","title":"A Brief Introduction to enpls","text":"Model applicability domain measures well predictive model (PLS/Sparse PLS model) built training set performs external test sets. certain type perturbation (bootstrapping, jackknifing) applied samples variables training set, get many different predictions samples test sets (course, including training set) using sub-model built perturbated training set. general evaluation strategy design comparisons analyzed Kaneko Funatsu (2014). functions enpls.ad() enspls.ad() help us evaluate model applicability domain. constructed two ‚Äúpseudo‚Äù test sets original logd1k dataset demonstration:  Additionally, using get interactive plot, help us better explore model applicability domain supporting zooming-/ inspecting sample point represents interactively. interactive plot based plotly, requires HTML viewer correctly rendered.","code":"# remove low variance variables x <- x[, -c(17, 52, 59)]  # make training set x.tr <- x[1:500, ] y.tr <- y[1:500]  # make two test sets x.te <- list(   \"test.1\" = x[501:700, ],   \"test.2\" = x[701:800, ] ) y.te <- list(   \"test.1\" = y[501:700],   \"test.2\" = y[701:800] )  ad <- enspls.ad(x.tr, y.tr, x.te, y.te,   maxcomp = 3, space = \"variable\", method = \"mc\",   ratio = 0.8, reptimes = 50 ) plot(ad) plot(ad, type = \"interactive\")"},{"path":"https://nanx.me/enpls/articles/enpls.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"A Brief Introduction to enpls","text":"Ensemble learning approaches powerful improving base learner‚Äôs predictive performance also capable accomplishing model diagnostic tasks, measuring importance features. interesting see ideas applied relevant topics facilitate predictive modeling tasks.","code":""},{"path":[]},{"path":"https://nanx.me/enpls/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Nan Xiao. Author, maintainer. Dong-Sheng Cao. Author. Miao-Zhu Li. Author. Qing-Song Xu. Author.","code":""},{"path":"https://nanx.me/enpls/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Xiao N, Cao D, Li M, Xu Q (2021). enpls: Ensemble Partial Least Squares Regression. https://nanx./enpls/, https://github.com/nanxstats/enpls.","code":"@Manual{,   title = {enpls: Ensemble Partial Least Squares Regression},   author = {Nan Xiao and Dong-Sheng Cao and Miao-Zhu Li and Qing-Song Xu},   year = {2021},   note = {https://nanx.me/enpls/, https://github.com/nanxstats/enpls}, }"},{"path":"https://nanx.me/enpls/index.html","id":"enpls-","dir":"","previous_headings":"","what":"Ensemble Partial Least Squares Regression","title":"Ensemble Partial Least Squares Regression","text":"enpls offers algorithmic framework measuring feature importance, outlier detection, model applicability domain evaluation, ensemble predictive modeling (sparse) partial least squares regressions.","code":""},{"path":"https://nanx.me/enpls/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Ensemble Partial Least Squares Regression","text":"can install enpls CRAN: try development version GitHub: See vignette(\"enpls\") quick-start guide.","code":"install.packages(\"enpls\") remotes::install_github(\"nanxstats/enpls\")"},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://nanx.me/enpls/index.html","id":"contribute","dir":"","previous_headings":"","what":"Contribute","title":"Ensemble Partial Least Squares Regression","text":"contribute project, please take look Contributing Guidelines first. Please note project released Contributor Code Conduct. participating project agree abide terms.","code":""},{"path":"https://nanx.me/enpls/reference/alkanes.html","id":null,"dir":"Reference","previous_headings":"","what":"Methylalkanes Retention Index Dataset ‚Äî alkanes","title":"Methylalkanes Retention Index Dataset ‚Äî alkanes","text":"Methylalkanes retention index dataset Liang et, al.","code":""},{"path":"https://nanx.me/enpls/reference/alkanes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Methylalkanes Retention Index Dataset ‚Äî alkanes","text":"","code":"data(\"alkanes\")"},{"path":"https://nanx.me/enpls/reference/alkanes.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Methylalkanes Retention Index Dataset ‚Äî alkanes","text":"list 2 components: x - data frame 207 rows (samples) 21 columns (predictors) y - numeric vector length 207 (response)","code":""},{"path":"https://nanx.me/enpls/reference/alkanes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Methylalkanes Retention Index Dataset ‚Äî alkanes","text":"dataset contains 207 methylalkanes' chromatographic retention index (y) modeled 21 molecular descriptors (x). Molecular descriptor types: Chi path, cluster path/cluster indices Kappa shape indices E-state indices Molecular electricity distance vector index","code":""},{"path":"https://nanx.me/enpls/reference/alkanes.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Methylalkanes Retention Index Dataset ‚Äî alkanes","text":"Yi-Zeng Liang, Da-Lin Yuan, Qing-Song Xu, Olav Martin Kvalheim. \"Modeling based subspace orthogonal projections QSAR QSPR research.\" Journal Chemometrics 22, . 1 (2008): 23--35.","code":""},{"path":"https://nanx.me/enpls/reference/alkanes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Methylalkanes Retention Index Dataset ‚Äî alkanes","text":"","code":"data(\"alkanes\") str(alkanes) #> List of 2 #>  $ x:'data.frame':\t207 obs. of  21 variables: #>   ..$ Chi.P.0 : num [1:207] -15.9 -15.9 -14.5 -14.5 -13.1 ... #>   ..$ Chi.P.1 : num [1:207] -11.03 -10.99 -10.03 -9.99 -9.03 ... #>   ..$ Chi.P.2 : num [1:207] -8 -8.23 -7.29 -7.52 -6.58 ... #>   ..$ Chi.P.3 : num [1:207] -5.95 -5.58 -5.45 -5.08 -4.95 ... #>   ..$ Chi.P.4 : num [1:207] 0.01439 -0.02343 0.00314 -0.03138 -0.0056 ... #>   ..$ Chi.P.5 : num [1:207] -4.1 -4.13 -3.74 -3.78 -3.39 ... #>   ..$ Chi.C.3 : num [1:207] -2.81 -2.84 -2.56 -2.59 -2.31 ... #>   ..$ Chi.PC.4: num [1:207] -0.605 -0.401 -0.605 -0.401 -0.605 ... #>   ..$ Kappa.1 : num [1:207] -3.16 -3.14 -3.13 -3.1 -3.11 ... #>   ..$ Kappa.2 : num [1:207] -29.4 -29.5 -26.4 -26.5 -23.5 ... #>   ..$ Kappa.3 : num [1:207] -1.17 -1.12 -1.18 -1.12 -1.18 ... #>   ..$ Kappa.4 : num [1:207] -22.2 -22.2 -20.2 -20.2 -18.2 ... #>   ..$ Estate.1: num [1:207] -20.1 -20.1 -18.1 -18.1 -16.1 ... #>   ..$ Estate.2: num [1:207] -18.2 -20.4 -16.2 -18.4 -14.3 ... #>   ..$ Estate.3: num [1:207] -2.51 -2.51 -2.4 -2.4 -2.26 ... #>   ..$ MEDV.11 : num [1:207] 1.263 0.1115 1.1942 0.0126 1.1586 ... #>   ..$ MEDV.12 : num [1:207] -11.61 -9.01 -11.1 -8.4 -10.77 ... #>   ..$ MEDV.13 : num [1:207] -2.109 -0.291 -2.115 -0.292 -2.122 ... #>   ..$ MEDV.22 : num [1:207] -61.9 -64 -55.5 -57.6 -48.8 ... #>   ..$ MEDV.23 : num [1:207] -1.478 -0.71 -1.499 -0.703 -1.512 ... #>   ..$ MEDV.33 : num [1:207] -0.000609 -0.000609 -0.000609 -0.000609 -0.000609 ... #>  $ y: num [1:207] -2125 -2118 -1925 -1919 -1725 ..."},{"path":"https://nanx.me/enpls/reference/cv.enpls.html","id":null,"dir":"Reference","previous_headings":"","what":"Cross Validation for Ensemble Partial Least Squares Regression ‚Äî cv.enpls","title":"Cross Validation for Ensemble Partial Least Squares Regression ‚Äî cv.enpls","text":"K-fold cross validation ensemble partial least squares regression.","code":""},{"path":"https://nanx.me/enpls/reference/cv.enpls.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cross Validation for Ensemble Partial Least Squares Regression ‚Äî cv.enpls","text":"","code":"cv.enpls(x, y, nfolds = 5L, verbose = TRUE, ...)"},{"path":"https://nanx.me/enpls/reference/cv.enpls.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cross Validation for Ensemble Partial Least Squares Regression ‚Äî cv.enpls","text":"x Predictor matrix. y Response vector. nfolds Number cross-validation folds, default 5. Note CV folds ensemble PLS model, individual PLS models. control CV folds single PLS models, please use argument cvfolds. verbose Shall print progress cross-validation? ... Arguments passed enpls.fit.","code":""},{"path":"https://nanx.me/enpls/reference/cv.enpls.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cross Validation for Ensemble Partial Least Squares Regression ‚Äî cv.enpls","text":"list containing: ypred - matrix containing two columns: real y predicted y residual - cross validation result (y.pred - y.real) RMSE - RMSE MAE - MAE Rsquare - Rsquare","code":""},{"path":"https://nanx.me/enpls/reference/cv.enpls.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Cross Validation for Ensemble Partial Least Squares Regression ‚Äî cv.enpls","text":"maximize probablity observation can selected test set (thus prediction uncertainty can measured), please try setting large reptimes.","code":""},{"path":[]},{"path":"https://nanx.me/enpls/reference/cv.enpls.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Cross Validation for Ensemble Partial Least Squares Regression ‚Äî cv.enpls","text":"Nan Xiao <https://nanx.>","code":""},{"path":"https://nanx.me/enpls/reference/cv.enpls.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cross Validation for Ensemble Partial Least Squares Regression ‚Äî cv.enpls","text":"","code":"data(\"alkanes\") x <- alkanes$x y <- alkanes$y  set.seed(42) cvfit <- cv.enpls(x, y, reptimes = 10) #> Beginning fold 1  #> Beginning fold 2  #> Beginning fold 3  #> Beginning fold 4  #> Beginning fold 5  print(cvfit) #> Cross Validation Result for Ensemble Partial Least Squares #> --- #> RMSE = 3.6481 #> MAE = 2.515792 #> Rsquare = 0.999961 plot(cvfit)"},{"path":"https://nanx.me/enpls/reference/cv.enspls.html","id":null,"dir":"Reference","previous_headings":"","what":"Cross Validation for Ensemble Sparse Partial Least Squares Regression ‚Äî cv.enspls","title":"Cross Validation for Ensemble Sparse Partial Least Squares Regression ‚Äî cv.enspls","text":"K-fold cross validation ensemble sparse partial least squares regression.","code":""},{"path":"https://nanx.me/enpls/reference/cv.enspls.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cross Validation for Ensemble Sparse Partial Least Squares Regression ‚Äî cv.enspls","text":"","code":"cv.enspls(x, y, nfolds = 5L, verbose = TRUE, ...)"},{"path":"https://nanx.me/enpls/reference/cv.enspls.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cross Validation for Ensemble Sparse Partial Least Squares Regression ‚Äî cv.enspls","text":"x Predictor matrix. y Response vector. nfolds Number cross-validation folds, default 5. Note CV folds ensemble sparse PLS model, individual sparse PLS models. control CV folds single sparse PLS models, please use argument cvfolds. verbose Shall print progress cross-validation? ... Arguments passed enspls.fit.","code":""},{"path":"https://nanx.me/enpls/reference/cv.enspls.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cross Validation for Ensemble Sparse Partial Least Squares Regression ‚Äî cv.enspls","text":"list containing: ypred - matrix containing two columns: real y predicted y residual - cross validation result (y.pred - y.real) RMSE - RMSE MAE - MAE Rsquare - Rsquare","code":""},{"path":"https://nanx.me/enpls/reference/cv.enspls.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Cross Validation for Ensemble Sparse Partial Least Squares Regression ‚Äî cv.enspls","text":"maximize probablity observation can selected test set (thus prediction uncertainty can measured), please try setting large reptimes.","code":""},{"path":[]},{"path":"https://nanx.me/enpls/reference/cv.enspls.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Cross Validation for Ensemble Sparse Partial Least Squares Regression ‚Äî cv.enspls","text":"Nan Xiao <https://nanx.>","code":""},{"path":"https://nanx.me/enpls/reference/cv.enspls.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cross Validation for Ensemble Sparse Partial Least Squares Regression ‚Äî cv.enspls","text":"","code":"# This example takes one minute to run if (FALSE) { data(\"logd1k\") x <- logd1k$x y <- logd1k$y  set.seed(42) cvfit <- cv.enspls(x, y, reptimes = 10) print(cvfit) plot(cvfit) }"},{"path":"https://nanx.me/enpls/reference/enpls-package.html","id":null,"dir":"Reference","previous_headings":"","what":"enpls: Ensemble Partial Least Squares Regression ‚Äî enpls-package","title":"enpls: Ensemble Partial Least Squares Regression ‚Äî enpls-package","text":"algorithmic framework measuring feature importance, outlier detection, model applicability domain evaluation, ensemble predictive modeling (sparse) partial least squares regressions.","code":""},{"path":[]},{"path":"https://nanx.me/enpls/reference/enpls-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"enpls: Ensemble Partial Least Squares Regression ‚Äî enpls-package","text":"Maintainer: Nan Xiao @nanx.(ORCID) Authors: Dong-Sheng Cao Miao-Zhu Li miaozhu.li@duke.edu Qing-Song Xu qsxu@csu.edu.cn","code":""},{"path":"https://nanx.me/enpls/reference/enpls.ad.core.fit.html","id":null,"dir":"Reference","previous_headings":"","what":"core fitting function for enpls.ad ‚Äî enpls.ad.core.fit","title":"core fitting function for enpls.ad ‚Äî enpls.ad.core.fit","text":"select best ncomp cross-validation use fit complete training set. scale = TRUE","code":""},{"path":"https://nanx.me/enpls/reference/enpls.ad.core.fit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"core fitting function for enpls.ad ‚Äî enpls.ad.core.fit","text":"","code":"enpls.ad.core.fit(trainingset, maxcomp, cvfolds)"},{"path":"https://nanx.me/enpls/reference/enpls.ad.core.fit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"core fitting function for enpls.ad ‚Äî enpls.ad.core.fit","text":"fitted plsr object","code":""},{"path":"https://nanx.me/enpls/reference/enpls.ad.core.pred.html","id":null,"dir":"Reference","previous_headings":"","what":"core prediction function for enpls.ad ‚Äî enpls.ad.core.pred","title":"core prediction function for enpls.ad ‚Äî enpls.ad.core.pred","text":"core prediction function enpls.ad","code":""},{"path":"https://nanx.me/enpls/reference/enpls.ad.core.pred.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"core prediction function for enpls.ad ‚Äî enpls.ad.core.pred","text":"","code":"enpls.ad.core.pred(model, testset)"},{"path":"https://nanx.me/enpls/reference/enpls.ad.core.pred.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"core prediction function for enpls.ad ‚Äî enpls.ad.core.pred","text":"error vector predicted real response","code":""},{"path":"https://nanx.me/enpls/reference/enpls.ad.html","id":null,"dir":"Reference","previous_headings":"","what":"Ensemble Partial Least Squares for Model Applicability Domain Evaluation ‚Äî enpls.ad","title":"Ensemble Partial Least Squares for Model Applicability Domain Evaluation ‚Äî enpls.ad","text":"Model applicability domain evaluation ensemble partial least squares.","code":""},{"path":"https://nanx.me/enpls/reference/enpls.ad.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ensemble Partial Least Squares for Model Applicability Domain Evaluation ‚Äî enpls.ad","text":"","code":"enpls.ad(   x,   y,   xtest,   ytest,   maxcomp = NULL,   cvfolds = 5L,   space = c(\"sample\", \"variable\"),   method = c(\"mc\", \"boot\"),   reptimes = 500L,   ratio = 0.8,   parallel = 1L )"},{"path":"https://nanx.me/enpls/reference/enpls.ad.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ensemble Partial Least Squares for Model Applicability Domain Evaluation ‚Äî enpls.ad","text":"x Predictor matrix training set. y Response vector training set. xtest List, -th component -th test set's predictor matrix (see example code ). ytest List, -th component -th test set's response vector (see example code ). maxcomp Maximum number components included within model. specified, use maximum number possible (considering cross-validation special cases n smaller p). cvfolds Number cross-validation folds used model automatic parameter selection, default 5. space Space apply resampling method. Can sample space (\"sample\") variable space (\"variable\"). method Resampling method. \"mc\" (Monte-Carlo resampling) \"boot\" (bootstrapping). Default \"mc\". reptimes Number models build Monte-Carlo resampling bootstrapping. ratio Sampling ratio used method = \"mc\". parallel Integer. Number CPU cores use. Default 1 (parallelized).","code":""},{"path":"https://nanx.me/enpls/reference/enpls.ad.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ensemble Partial Least Squares for Model Applicability Domain Evaluation ‚Äî enpls.ad","text":"list containing: tr.error.mean - absolute mean prediction error training set tr.error.median - absolute median prediction error training set tr.error.sd - prediction error sd training set tr.error.matrix - raw prediction error matrix training set te.error.mean - list absolute mean prediction error test set(s) te.error.median - list absolute median prediction error test set(s) te.error.sd - list prediction error sd test set(s) te.error.matrix - list raw prediction error matrix test set(s)","code":""},{"path":"https://nanx.me/enpls/reference/enpls.ad.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Ensemble Partial Least Squares for Model Applicability Domain Evaluation ‚Äî enpls.ad","text":"Note space = \"variable\", method \"mc\", since bootstrapping variable space create duplicated variables, cause problems.","code":""},{"path":"https://nanx.me/enpls/reference/enpls.ad.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Ensemble Partial Least Squares for Model Applicability Domain Evaluation ‚Äî enpls.ad","text":"Nan Xiao <https://nanx.>","code":""},{"path":"https://nanx.me/enpls/reference/enpls.ad.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Ensemble Partial Least Squares for Model Applicability Domain Evaluation ‚Äî enpls.ad","text":"","code":"data(\"alkanes\") x <- alkanes$x y <- alkanes$y  # training set x.tr <- x[1:100, ] y.tr <- y[1:100]  # two test sets x.te <- list(   \"test.1\" = x[101:150, ],   \"test.2\" = x[151:207, ] ) y.te <- list(   \"test.1\" = y[101:150],   \"test.2\" = y[151:207] )  set.seed(42) ad <- enpls.ad(   x.tr, y.tr, x.te, y.te,   space = \"variable\", method = \"mc\",   ratio = 0.9, reptimes = 50 ) print(ad) #> Model Applicability Domain Evaluation by ENPLS #> --- #> Absolute mean prediction error for each training set sample: #>   [1]  1.143535290  0.266577478  0.075668338  1.131416799  0.103337151 #>   [6]  1.062594738  0.023209713  0.700521215  0.468235064  0.673075458 #>  [11]  0.089540802  0.401803647  3.489442389  0.627893821  0.222504312 #>  [16]  3.221940312  0.894591039  0.096840929  0.792751494  1.236641601 #>  [21]  0.001584416  0.339331094  0.609968357  0.286792550  0.471706657 #>  [26]  0.691666512  0.219584091  0.687592096  0.737439448  0.692377554 #>  [31]  1.577144836  0.747749279  1.237863334  0.791600110  0.830273570 #>  [36]  1.187375782  0.416252943  1.386693400  1.209712475  1.110794824 #>  [41]  2.140243438  2.399984105  1.428537318  1.055821644  1.517716920 #>  [46]  1.590342977  0.706991956  0.914251843  1.973206057  1.939137967 #>  [51]  1.671019536  0.091573195  3.972970145  0.955507259  0.415111831 #>  [56]  0.931788087  2.508476277  2.759110197  1.600821991  0.404102398 #>  [61]  0.963920649  3.568594663 14.075284215  5.965384961  0.849943296 #>  [66]  1.141524697  2.287166025  1.359689933  1.504079464  2.344010556 #>  [71]  0.629486701  1.049468037  1.268353928  2.135248556  1.616434750 #>  [76]  2.119979067  0.269447046  1.830802524  1.784506205  0.637978496 #>  [81]  1.039257790  0.413567656  5.704702300  0.307698959  2.670416866 #>  [86]  0.691503674  2.185178349  2.001917127  1.529464596  0.374889846 #>  [91]  1.283773190  3.774151143  2.857702789  4.220121496  6.504020855 #>  [96]  1.762052847  3.572747930  1.679601429  1.776315457  1.140765375 #> --- #> Prediction error SD for each training set sample: #>   [1] 0.6632510 1.0747613 0.6228398 0.3909717 0.6276894 0.2926764 0.4835952 #>   [8] 0.2839815 0.3790893 0.2795853 0.2936881 0.2066487 0.7131719 0.3041280 #>  [15] 0.1152717 0.5529949 0.2850841 0.1779433 0.4157889 0.3811892 0.2819642 #>  [22] 0.2720929 0.4005652 0.3226532 0.2209190 0.4454591 0.3876323 0.2040831 #>  [29] 0.4670555 0.4136547 0.3290377 0.1708938 0.4155863 0.1579950 0.1666879 #>  [36] 0.2073140 0.5295909 0.4394888 0.3281213 0.2408321 0.4505811 0.1982922 #>  [43] 0.2434650 0.6775080 0.5017698 0.4212760 0.5761228 0.3315790 0.2303946 #>  [50] 0.2397685 0.3025108 0.1862496 0.3459049 0.3907732 0.2002375 0.3334323 #>  [57] 0.2800619 0.2489747 0.4342413 0.3122039 0.3108747 0.1818030 0.3497313 #>  [64] 0.1975296 0.2514031 0.5769985 0.2638713 0.2774563 0.3553371 0.3684134 #>  [71] 0.2015989 0.2458771 0.2710750 0.2248169 0.3510436 0.4010946 0.5246710 #>  [78] 0.5445661 0.2722141 0.3716945 0.3971595 0.1601688 0.2975253 0.2694639 #>  [85] 0.1819710 0.3799211 0.1644366 0.4944335 0.1960038 0.3795414 0.3421108 #>  [92] 0.3548105 0.6303994 0.5065287 0.2099194 0.1725128 0.2470902 0.4008990 #>  [99] 0.1955731 0.4749818 #> --- #> Absolute mean prediction error for each test set sample: #> [[1]] #>  [1]  1.65850329  0.38377988  1.67378051  0.05017774  4.39395510  0.10970090 #>  [7]  0.80312305  2.00112429  3.30352901  2.39702103  2.49110746  2.57201965 #> [13]  3.40522658  1.66881500  0.18343101  2.68753476  3.38755741  0.45423958 #> [19]  2.05966181 11.37567054 12.46448491 10.29298124 13.73648078  7.69634489 #> [25]  9.60840997 61.52340940 12.87208410 11.51112678 11.74810709  6.98371976 #> [31]  3.21827472 12.00306032 12.10550647 12.84024755  4.05105088 12.90499545 #> [37] 11.90523171  4.25191528  2.50046794 12.77903509  6.03664168 11.53383212 #> [43]  4.61455483  2.44420160 12.70236566  7.43903336  3.71605764  2.86329295 #> [49]  7.64329131  7.18551395 #>  #> [[2]] #>  [1]  3.4543176  2.4871241 11.3411211 10.5407448  0.6383966  2.5794987 #>  [7]  1.3770894  7.8395977  1.2465770  0.4117513 36.6052600 31.2661905 #> [13] 35.1483035 31.4823204 35.0510448 29.4380334 40.1687529 34.5458973 #> [19] 23.2587832 77.0500127 28.5465786 23.0528668 25.4344415 34.8137632 #> [25] 30.6215780 22.2266004 19.7494606  0.2107381  0.8672154  3.3958982 #> [31]  2.7987705  2.3278965  1.7741967  0.7847005  6.0851973  1.5202727 #> [37]  5.0502711 46.4425419  0.7740034  1.3427991  3.9044839  1.0792567 #> [43]  4.9727341  0.7154980  3.8805581 15.7410126  3.2326191 14.0260989 #> [49]  2.5844449  6.2848282 12.2295047 10.8379296 11.2892066 12.5826622 #> [55]  7.0478476 12.8170478 11.4202239 #>  #> --- #> Prediction error SD for each test set sample: #> [[1]] #>  [1]   0.3435652   0.4202025   0.2808564   0.4494669   0.5071351   0.6865988 #>  [7]   0.2336136   0.4024350   0.4419844   0.6074236   0.4874105   0.6118569 #> [13]   0.5662671   0.7046519   0.5319585   0.6922911   0.6478133   0.7873733 #> [19]   0.9220921   9.1907515   8.9865306   8.7179049   8.6820109   7.3214560 #> [25]   6.3265450 100.7454688   8.0020688   8.0038258   7.6711559   8.0594401 #> [31]   7.9284787   7.0233280   7.5094411   7.8319137   7.8441271   7.8257605 #> [37]   7.4775638   7.7852585   7.7400842   6.8966159   7.6805341   7.6719323 #> [43]   7.7588242   7.7021805   7.6900458   7.6252742   7.6487169   7.5851825 #> [49]   7.6648408   7.4873894 #>  #> [[2]] #>  [1]   7.6684654   7.5798389   7.6259424   7.2935751   7.9845870   7.5090642 #>  [7]   7.5267845   6.6601347   7.4769873   7.5602014  23.1031563  19.9672830 #> [13]  20.0716499  21.5910269  20.7678312  21.0867461  21.3929124  21.3106238 #> [19]  21.2005159  88.4988937  21.1606533  21.1062933  20.6057930  20.9342275 #> [25]  20.9589177  20.7578514  20.7028630   0.2224852   0.6708101   0.5494225 #> [31]   0.3928201   0.5017335   0.3570617   0.3469072   0.5381546   0.1064181 #> [37]   0.3604482 105.9905919   0.2603238   0.3310628   0.2514998   0.1795206 #> [43]   0.3312007   0.3384145   0.7288403   8.9270759   7.4587752   8.2109699 #> [49]   7.9356333   7.9803569   7.9508740   6.9278026   7.8746692   7.7807236 #> [55]   7.9334114   7.9810786   7.7136865 #>  plot(ad)  # the interactive plot requires a HTML viewer if (FALSE) { plot(ad, type = \"interactive\") }"},{"path":"https://nanx.me/enpls/reference/enpls.fit.core.html","id":null,"dir":"Reference","previous_headings":"","what":"core function for enpls.fit ‚Äî enpls.fit.core","title":"core function for enpls.fit ‚Äî enpls.fit.core","text":"select best ncomp cross-validation use fit complete training set. scale = TRUE","code":""},{"path":"https://nanx.me/enpls/reference/enpls.fit.core.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"core function for enpls.fit ‚Äî enpls.fit.core","text":"","code":"enpls.fit.core(plsdf, maxcomp, cvfolds)"},{"path":"https://nanx.me/enpls/reference/enpls.fit.core.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"core function for enpls.fit ‚Äî enpls.fit.core","text":"coefficients","code":""},{"path":"https://nanx.me/enpls/reference/enpls.fit.html","id":null,"dir":"Reference","previous_headings":"","what":"Ensemble Partial Least Squares Regression ‚Äî enpls.fit","title":"Ensemble Partial Least Squares Regression ‚Äî enpls.fit","text":"Ensemble partial least squares regression.","code":""},{"path":"https://nanx.me/enpls/reference/enpls.fit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ensemble Partial Least Squares Regression ‚Äî enpls.fit","text":"","code":"enpls.fit(   x,   y,   maxcomp = NULL,   cvfolds = 5L,   reptimes = 500L,   method = c(\"mc\", \"boot\"),   ratio = 0.8,   parallel = 1L )"},{"path":"https://nanx.me/enpls/reference/enpls.fit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ensemble Partial Least Squares Regression ‚Äî enpls.fit","text":"x Predictor matrix. y Response vector. maxcomp Maximum number components included within model. specified, use maximum number possible (considering cross-validation special cases n smaller p). cvfolds Number cross-validation folds used model automatic parameter selection, default 5. reptimes Number models build Monte-Carlo resampling bootstrapping. method Resampling method. \"mc\" (Monte-Carlo resampling) \"boot\" (bootstrapping). Default \"mc\". ratio Sampling ratio used method = \"mc\". parallel Integer. Number CPU cores use. Default 1 (parallelized).","code":""},{"path":"https://nanx.me/enpls/reference/enpls.fit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ensemble Partial Least Squares Regression ‚Äî enpls.fit","text":"list containing partial least squares model objects.","code":""},{"path":[]},{"path":"https://nanx.me/enpls/reference/enpls.fit.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Ensemble Partial Least Squares Regression ‚Äî enpls.fit","text":"Nan Xiao <https://nanx.>","code":""},{"path":"https://nanx.me/enpls/reference/enpls.fit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Ensemble Partial Least Squares Regression ‚Äî enpls.fit","text":"","code":"data(\"alkanes\") x <- alkanes$x y <- alkanes$y  set.seed(42) fit <- enpls.fit(x, y, reptimes = 50) print(fit) #> Coefficients of the Models by Ensemble Partial Least Squares #> --- #>                      [,1]          [,2]          [,3]        [,4]         [,5] #> (Intercept)  1.901653e-02 -7.461177e-02     0.1320574    0.105323    0.1189126 #> Chi.P.0     -5.302831e+02 -3.709869e+02  -852.3098957   68.358062  115.5502167 #> Chi.P.1     -9.877642e+02 -9.960761e+02 -1391.6437775   68.890118  124.8610935 #> Chi.P.2      3.344548e+03  3.392111e+03  4469.4736167   64.969199   84.1563591 #> Chi.P.3      2.250893e+03  1.993993e+03  2335.5658948  120.729705  399.2724789 #> Chi.P.4     -3.033318e+00 -3.401355e+00    -4.4700237  -11.705109   -6.1356472 #> Chi.P.5      4.320044e+02  3.237402e+02   425.8828099   52.259068  156.8700697 #> Chi.C.3      5.289307e+01  2.757648e+01    48.1259790   14.367189   34.1522027 #> Chi.PC.4    -2.427201e+02 -2.760505e+02  -256.4640646   -2.679697    6.0979538 #> Kappa.1      4.021214e+03  3.223933e+03  3323.0228511   18.537083 -120.2020096 #> Kappa.2     -1.007953e+03 -1.193883e+03 -1383.2809608   67.772246  170.0821127 #> Kappa.3     -3.481420e+03 -2.950207e+03 -3225.3498579   86.710334   54.4025624 #> Kappa.4     -5.171513e+02 -5.381593e+02  -809.0088168   69.178124  119.3115652 #> Estate.1    -8.626383e+00 -2.293245e+00   -56.1669690 -108.767493 -137.3001764 #> Estate.2    -6.626015e+01 -4.053109e+01   -18.9511325   86.858681  103.4123814 #> Estate.3     1.982168e+01  1.226001e+01    11.2770661  -14.105775    4.1117473 #> MEDV.11     -5.954853e+02 -4.625003e+02  -507.8391153  -26.291676  -32.0770690 #> MEDV.12     -1.913626e+03 -1.627944e+03 -1658.9580775 -107.150598 -229.1887505 #> MEDV.13      1.633341e+01  6.451224e+01    78.6593595   29.799666   -2.5664118 #> MEDV.22     -1.430168e+03 -1.059318e+03 -1136.3537020   83.880364 -414.7353433 #> MEDV.23     -4.781812e+01 -7.608106e+01   -59.3065681  -22.365890  -13.6481712 #> MEDV.33     -9.670372e+00 -1.087472e+01   -11.5639541   -3.741788   -2.2431504 #>                      [,6]         [,7]          [,8]         [,9]        [,10] #> (Intercept)    0.03354563    0.2194680     0.1318238   -0.1238766    0.1189771 #> Chi.P.0      152.51594055   76.2935918  -271.6383930  135.8188842  142.4976552 #> Chi.P.1      157.89242030   74.1248488  -352.9291993  153.0419860  151.8363758 #> Chi.P.2      164.76123871   89.9017062  1888.5211733  102.7181907  134.7081058 #> Chi.P.3      311.43613429   98.4000481  1115.1708338  400.8698614  293.3837575 #> Chi.P.4       -7.43031099   -9.8787666    -1.5474236   -1.0265474   -2.6639509 #> Chi.P.5       51.24075372   33.5967080   212.3279392  187.4589817  110.5862322 #> Chi.C.3        5.22832172    6.8638503    24.5017035   45.5075439   24.1973044 #> Chi.PC.4     -62.58063876  -18.9893023  -117.5357430   38.1971340    0.4366064 #> Kappa.1      -93.20302840   35.5258531  1826.3209926 -161.6731757 -122.6809025 #> Kappa.2      190.78503248   68.0676573  -391.9388244  209.8760516  197.2229879 #> Kappa.3      161.84747905  130.0452396 -1576.3636661   21.7825866   85.6109132 #> Kappa.4      154.31480015   75.9118023  -164.2766380  143.4737835  147.6716998 #> Estate.1    -102.96442325   28.6773102    14.4900076 -170.1389760 -136.3029164 #> Estate.2      98.90967769   -0.1341941   -35.1055226   84.6676107   68.1925770 #> Estate.3       6.06652442  -11.6677688    11.9044063    6.7164854    4.3325010 #> MEDV.11      -54.85072713  -45.4088533  -304.3559067  -29.0869020  -44.7684618 #> MEDV.12     -263.09492589 -141.7695808 -1038.2345297 -228.8659600 -230.9087996 #> MEDV.13       43.32322414   26.8189406    38.1057912  -11.3640530   18.1967704 #> MEDV.22     -446.95596221   41.1833829  -887.7129591 -493.2372538 -413.3501953 #> MEDV.23      -74.10718236  -48.9844523   -75.0260196  -12.1986668  -52.5774055 #> MEDV.33       -6.43703011   -3.7809051    -7.9963561   -2.0160682   -4.5386650 #>                     [,11]       [,12]         [,13]         [,14]         [,15] #> (Intercept) -7.643432e-02    0.051518  3.350597e-02    0.08848524     0.1284325 #> Chi.P.0     -4.116212e+02  146.268744 -3.435449e+02  127.99970884  -273.1087948 #> Chi.P.1     -7.236031e+02  154.901447 -8.154771e+02  138.59639383  -365.2667592 #> Chi.P.2      2.559073e+03  136.716347  3.007264e+03  137.91990555  1767.3773483 #> Chi.P.3      1.815325e+03  418.811367  2.000751e+03  288.06490943  1185.6428269 #> Chi.P.4     -4.476818e+00   -5.707532 -5.156540e+00   -5.33395282    -5.2439365 #> Chi.P.5      3.346375e+02  117.885176  3.823241e+02  134.38242799   233.2057308 #> Chi.C.3      3.912270e+01   15.290931  4.422413e+01   34.01411064    28.5858865 #> Chi.PC.4    -2.316692e+02  -28.684281 -2.278714e+02   29.39462668  -130.0577150 #> Kappa.1      2.872082e+03 -132.545491  3.634255e+03 -106.35470361  1566.4078526 #> Kappa.2     -7.856546e+02  201.890965 -1.080569e+03  185.05933052  -431.7394652 #> Kappa.3     -2.502155e+03  112.519798 -3.229675e+03   35.34741667 -1404.4409239 #> Kappa.4     -3.819997e+02  151.758179 -4.157862e+02  135.09796545  -224.4190382 #> Estate.1    -1.125852e+02  -29.764570 -5.722572e+01 -136.30243634  -117.4255687 #> Estate.2     3.495805e+01   56.027402 -1.381231e+01   79.63222542    39.8148369 #> Estate.3     1.241461e+01   13.298480  1.662167e+01    2.08002504     5.2295627 #> MEDV.11     -4.212482e+02  -48.284192 -5.166947e+02  -32.38769467  -257.2639863 #> MEDV.12     -1.463649e+03 -298.164431 -1.803602e+03 -213.55100205  -890.4181531 #> MEDV.13      4.219523e+01    3.442811  3.084466e+01    5.79929885    38.6255150 #> MEDV.22     -1.035321e+03 -568.830489 -1.233976e+03 -375.33599265  -712.2986375 #> MEDV.23     -5.808340e+01  -39.179169 -5.407151e+01  -22.60769702   -48.7117242 #> MEDV.33     -9.993100e+00   -3.168597 -9.068230e+00   -2.64988026    -7.0416908 #>                     [,16]         [,17]         [,18]         [,19] #> (Intercept) -4.991854e-02  2.601247e-02   -0.09039869  4.367108e-02 #> Chi.P.0     -4.341654e+02 -4.924402e+02   81.14663970 -2.574161e+02 #> Chi.P.1     -6.409553e+02 -4.526843e+02   83.60884568 -3.277260e+02 #> Chi.P.2      2.553823e+03  2.304648e+03   78.54165601  1.756612e+03 #> Chi.P.3      1.535934e+03  1.333460e+03  112.03394421  1.175520e+03 #> Chi.P.4     -5.022880e+00 -2.101812e+00   -9.36263740 -5.780914e+00 #> Chi.P.5      3.141161e+02  2.858129e+02   76.07400063  2.558095e+02 #> Chi.C.3      4.157769e+01  4.104962e+01   23.01252477  3.401404e+01 #> Chi.PC.4    -1.446678e+02 -1.121322e+02   24.29016951 -1.129551e+02 #> Kappa.1      2.247764e+03  1.646679e+03   -6.40544447  1.628363e+03 #> Kappa.2     -6.607715e+02 -5.340953e+02   93.87317748 -4.235058e+02 #> Kappa.3     -2.084942e+03 -1.606209e+03   58.51259336 -1.504202e+03 #> Kappa.4     -3.988112e+02 -3.842319e+02   82.73599653 -2.312067e+02 #> Estate.1    -6.575873e+01 -7.824256e+01 -136.68853849 -6.527305e+01 #> Estate.2    -5.145622e+00  1.153668e+01   82.16763336  2.975808e+01 #> Estate.3     1.070157e+01  1.037679e+01  -16.42751402  1.085370e+01 #> MEDV.11     -3.477124e+02 -2.828228e+02  -22.02353229 -2.641750e+02 #> MEDV.12     -1.217516e+03 -9.745938e+02 -106.22160136 -9.670463e+02 #> MEDV.13      3.597387e+01  3.976063e+01   24.73714010  2.644995e+01 #> MEDV.22     -9.124290e+02 -8.499219e+02   55.18230973 -7.856158e+02 #> MEDV.23     -4.586373e+01 -5.049032e+01  -19.48410665 -4.568809e+01 #> MEDV.33     -7.693331e+00 -7.341857e+00   -3.44978160 -6.629773e+00 #>                     [,20]         [,21]        [,22]         [,23]        [,24] #> (Intercept)    0.07608963     0.1268432    0.2193043    0.03993086    0.1151202 #> Chi.P.0      136.08033371  -236.4872021   67.7959782  134.28750485   91.8060002 #> Chi.P.1      147.26849243  -362.1264647   68.2608239  140.64879459   94.7497266 #> Chi.P.2      149.39618041  1835.4143630   64.2853437  164.36365115   84.4482703 #> Chi.P.3      357.85502107  1271.8572746  107.7377268  260.46107677  146.8735044 #> Chi.P.4       -5.22634122    -6.2140466   -9.2262272   -3.87709224   -8.1861056 #> Chi.P.5      122.70761000   220.0952008   89.5731290   65.85116570   76.4464716 #> Chi.C.3       25.36761761    20.0352556   28.2279553   12.74770710   21.6824053 #> Chi.PC.4      -4.04971398  -179.2277456   29.2218421  -36.08435183    9.8269785 #> Kappa.1     -103.56169959  2729.8666625    6.5300863  -51.41224230  -13.1993236 #> Kappa.2      189.87780241  -614.0901053   71.2124482  166.71688018  106.4157248 #> Kappa.3       63.90513075 -2179.7361913   82.9243958  128.78420443   72.3294097 #> Kappa.4      144.62007947  -260.9007862   68.2855444  140.94835574   93.5582262 #> Estate.1    -127.12874248    30.3059763  -87.1064986 -102.34615252 -163.2721306 #> Estate.2      85.87107169   -57.7260112   96.1044043   94.40004540   86.6134875 #> Estate.3       5.51792525     1.6496075  -16.8461025    1.14322489  -15.1374987 #> MEDV.11      -41.87856637  -387.1453439  -34.4860228  -59.50219916  -27.1793205 #> MEDV.12     -252.40302893 -1311.9102489 -114.1362380 -245.94779139 -114.2633168 #> MEDV.13       11.74808487    29.4948141   28.0588315   43.55815423   26.6112658 #> MEDV.22     -448.28052723  -688.9737556   66.4605354 -343.25929022   26.0039382 #> MEDV.23      -35.19028342   -64.3410135  -37.2308140  -76.16638073  -27.6305916 #> MEDV.33       -3.54817693    -8.0855337   -4.5710165   -6.24786444   -3.7583425 #>                     [,25]        [,26]         [,27]         [,28]        [,29] #> (Intercept) -5.375315e-02   -0.0449627    0.03942239 -3.752796e-02   -0.1994116 #> Chi.P.0     -1.670833e+02  146.4793729  114.72226632 -1.510953e+02  109.1627414 #> Chi.P.1     -4.532437e+02  158.4834983  123.50743419 -4.245698e+02  128.2261813 #> Chi.P.2      1.765803e+03  147.9203541  181.14999798  1.915456e+03   25.0600470 #> Chi.P.3      1.261962e+03  267.4913755  175.94274501  1.403486e+03  457.4328256 #> Chi.P.4     -6.106306e+00   -4.1527290  -11.35336397 -5.518653e+00   -4.9862781 #> Chi.P.5      2.375836e+02  118.8424075   68.75680634  2.556781e+02  211.2439748 #> Chi.C.3      2.425268e+01   32.9457368   13.65619640  2.614799e+01   46.7980473 #> Chi.PC.4    -1.542709e+02   25.1757332    7.51171960 -1.677435e+02   36.7668483 #> Kappa.1      1.910899e+03 -124.5072389  -19.41858108  2.533743e+03 -178.5083100 #> Kappa.2     -3.532323e+02  207.9404612  156.18365152 -5.249337e+02  175.7125712 #> Kappa.3     -1.648593e+03   57.6153248   48.78095331 -2.140056e+03   39.4844740 #> Kappa.4     -2.476681e+02  153.5139575  125.04458212 -1.317291e+02  116.0038207 #> Estate.1    -8.604113e+01 -135.2635859  -84.11353063 -7.889801e+01 -165.8274860 #> Estate.2     2.528057e+01   88.6586402   61.45326006  2.109762e+01  111.6618201 #> Estate.3     1.124319e+01    3.6644330   -0.20583020  1.384411e+01    4.9389289 #> MEDV.11     -3.013461e+02  -33.0503402  -40.71795309 -3.610983e+02  -17.9079383 #> MEDV.12     -1.058776e+03 -220.7011203 -211.53211454 -1.319715e+03 -202.5547298 #> MEDV.13      3.087850e+01   14.3895179   23.09839503  2.819285e+01  -25.6019070 #> MEDV.22     -8.796965e+02 -411.6846267 -254.34900979 -1.024807e+03 -434.9342519 #> MEDV.23     -5.343412e+01  -32.3829464  -34.58652188 -5.115407e+01   10.9854911 #> MEDV.33     -7.410050e+00   -3.3189365   -3.66737381 -7.907692e+00   -0.7316730 #>                     [,30]         [,31]         [,32]         [,33] #> (Intercept)  1.205334e-02  5.206024e-02 -4.029998e-02  8.297816e-02 #> Chi.P.0     -4.634144e+02 -5.330901e+02 -4.342028e+01 -3.882936e+02 #> Chi.P.1     -4.415865e+02 -9.738780e+02 -5.584459e+02 -1.038380e+03 #> Chi.P.2      2.144998e+03  3.433004e+03  1.896952e+03  3.721466e+03 #> Chi.P.3      1.306892e+03  1.850000e+03  1.280027e+03  2.429310e+03 #> Chi.P.4     -4.962519e+00 -3.853361e+00 -7.970297e+00 -4.122906e+00 #> Chi.P.5      2.707146e+02  3.313908e+02  2.645127e+02  4.529964e+02 #> Chi.C.3      3.897312e+01  3.648324e+01  3.500741e+01  5.180833e+01 #> Chi.PC.4    -1.224644e+02 -2.096124e+02 -1.359228e+02 -2.956173e+02 #> Kappa.1      1.936515e+03  2.542835e+03  1.779198e+03  4.286819e+03 #> Kappa.2     -4.595479e+02 -1.042065e+03 -5.175126e+02 -1.454575e+03 #> Kappa.3     -1.747948e+03 -2.409877e+03 -1.661253e+03 -3.902540e+03 #> Kappa.4     -3.482131e+02 -6.203178e+02 -3.063651e+02 -5.243137e+02 #> Estate.1    -9.431619e+01  1.130831e+01 -8.732116e+01 -3.850858e-01 #> Estate.2     2.884014e+01 -3.253993e+01  3.766083e+01 -7.734652e+01 #> Estate.3     8.134488e+00  1.051679e+01  1.389204e+01  2.340272e+01 #> MEDV.11     -3.091408e+02 -3.892365e+02 -3.039101e+02 -6.241240e+02 #> MEDV.12     -1.051120e+03 -1.363469e+03 -1.050406e+03 -2.101732e+03 #> MEDV.13      3.853810e+01  6.194110e+01  3.390729e+01  2.855113e+01 #> MEDV.22     -8.307962e+02 -1.007753e+03 -8.561366e+02 -1.448572e+03 #> MEDV.23     -4.587790e+01 -6.555470e+01 -5.249892e+01 -6.130511e+01 #> MEDV.33     -7.552957e+00 -1.001687e+01 -7.736238e+00 -1.041008e+01 #>                     [,34]         [,35]        [,36]         [,37] #> (Intercept)    0.02221307    -0.3743566    0.1868637     0.1816148 #> Chi.P.0      121.16337890  -168.1347140   98.2247544  -720.1937726 #> Chi.P.1      130.40375190  -204.5225018   97.6709673  -974.3077739 #> Chi.P.2      171.92842314  1510.6443630  109.7363999  3510.9894665 #> Chi.P.3      331.35543886  1115.0957904  111.4248478  2228.5777654 #> Chi.P.4       -6.74805243     3.8046037   -8.2033577    -7.6206994 #> Chi.P.5       77.70726546   208.1170949   22.3583753   412.7253829 #> Chi.C.3       14.39907636    24.0477014    4.9395397    44.2268910 #> Chi.PC.4     -46.49614954  -146.9644272  -26.6164129  -268.1127031 #> Kappa.1      -45.33624360  1735.0139499   11.0771130  4427.1500892 #> Kappa.2      153.99069737  -335.6724385  102.3780574 -1135.9936924 #> Kappa.3      100.08945981 -1491.8846153  111.7788657 -3817.0902260 #> Kappa.4      129.02591622  -219.1995442   98.8287649  -555.9617184 #> Estate.1    -111.88350870  -179.6770549 -152.9607189    27.3000461 #> Estate.2      94.03317072    96.3091709  100.7001979   -81.3413966 #> Estate.3       2.80217882     7.8257865  -13.9792355    13.3291088 #> MEDV.11      -53.24689114  -277.8874903  -35.6318866  -612.5467413 #> MEDV.12     -247.09542450  -975.9419476 -134.0221212 -2060.9465833 #> MEDV.13       32.06605113    53.3484174   50.8821432    27.0280334 #> MEDV.22     -386.38476179  -792.8119308   12.1947335 -1193.4903903 #> MEDV.23      -57.40787236   -74.0420858  -48.2582718   -48.3447863 #> MEDV.33       -5.01170623    -9.5648376   -5.7029333   -10.3127945 #>                     [,38]         [,39]         [,40]         [,41] #> (Intercept)  3.527491e-02 -9.760289e-02  7.941712e-02  4.096657e-02 #> Chi.P.0     -4.227759e+02 -3.978046e+02 -3.699562e+02 -3.074850e+02 #> Chi.P.1     -7.411680e+02 -5.925364e+02 -6.404063e+02 -5.835303e+02 #> Chi.P.2      2.648431e+03  2.376660e+03  2.701391e+03  2.163873e+03 #> Chi.P.3      1.667406e+03  1.424926e+03  1.851349e+03  1.420741e+03 #> Chi.P.4     -3.745816e+00 -5.903264e+00 -4.665849e+00 -6.401683e+00 #> Chi.P.5      3.241965e+02  2.690080e+02  3.650541e+02  2.994062e+02 #> Chi.C.3      3.922324e+01  2.994118e+01  4.572809e+01  3.840665e+01 #> Chi.PC.4    -1.819579e+02 -1.541339e+02 -1.934229e+02 -1.366766e+02 #> Kappa.1      2.746699e+03  2.000935e+03  3.461368e+03  1.845280e+03 #> Kappa.2     -7.207625e+02 -5.890575e+02 -8.406933e+02 -4.887910e+02 #> Kappa.3     -2.461550e+03 -1.835095e+03 -2.985926e+03 -1.684616e+03 #> Kappa.4     -3.841057e+02 -3.870069e+02 -4.248117e+02 -4.659561e+02 #> Estate.1    -9.878443e+01 -9.659795e+01 -6.338571e+01 -3.423596e+01 #> Estate.2     3.133129e+01  3.518980e+01 -1.041128e+01  3.336558e+00 #> Estate.3     1.206619e+01  8.475695e+00  1.516486e+01  1.016640e+01 #> MEDV.11     -4.092655e+02 -2.997993e+02 -4.948313e+02 -2.934326e+02 #> MEDV.12     -1.408074e+03 -1.087670e+03 -1.649829e+03 -1.036457e+03 #> MEDV.13      4.338935e+01  4.524277e+01  1.994096e+01  2.148198e+01 #> MEDV.22     -1.019764e+03 -8.419985e+02 -1.228476e+03 -8.738762e+02 #> MEDV.23     -5.230722e+01 -4.727508e+01 -4.633638e+01 -3.651183e+01 #> MEDV.33     -9.542370e+00 -8.082226e+00 -8.223452e+00 -6.552248e+00 #>                     [,42]        [,43]         [,44]        [,45]         [,46] #> (Intercept)     0.1216031    0.1317013   -0.03903687   -0.2069613   -0.04212005 #> Chi.P.0      -554.0727982   83.5302097  132.25660174  142.9079058   97.51323356 #> Chi.P.1     -1241.8190187   85.6522088  144.41968017  159.9175489   99.76738189 #> Chi.P.2      3811.3298809   80.7597311  103.71176709   91.3980818   92.53738158 #> Chi.P.3      2435.1196003  119.4689328  441.18333554  417.9325318  155.35375943 #> Chi.P.4        -6.0030112   -9.4376675   -8.10261829   -4.9608351   -7.02285328 #> Chi.P.5       475.1913451   70.5039245  114.99666033  128.6302818   53.67556282 #> Chi.C.3        56.0185456   23.1213803   16.47948997   22.6782570   12.44743781 #> Chi.PC.4     -260.1232103   13.2975313  -57.62289244  -21.7414287  -16.84900405 #> Kappa.1      4120.2977843   -3.9165062 -112.36741599 -147.1000565   -5.03928700 #> Kappa.2     -1258.4294538   93.1247361  179.74741977  203.5065532  108.43190729 #> Kappa.3     -3700.6441225   74.7131076  132.73316701  101.7659487   94.33536614 #> Kappa.4      -680.1030934   85.0561485  138.85943539  149.6674688   99.01366891 #> Estate.1       60.0984941 -166.5700152 -134.22408269 -155.4289264 -216.48099919 #> Estate.2      -67.5647734  112.7460363  119.06546398  131.3166826  155.21405035 #> Estate.3       19.9436698  -16.4353437    7.59081245    7.1592941  -13.97428918 #> MEDV.11      -575.8218639  -28.9239577  -46.69862600  -29.6025572  -29.57000136 #> MEDV.12     -2021.9304587 -113.2813889 -268.15892749 -224.9202971 -124.18715546 #> MEDV.13        20.4292162   34.7142759   24.44193465   12.4432428   53.18429378 #> MEDV.22     -1404.1473508   41.5492946 -482.28858016 -485.6606308    1.41904679 #> MEDV.23       -42.6534448  -32.1349590  -53.97834632  -26.1504743  -47.62323967 #> MEDV.33        -9.6933299   -4.3007451   -4.92915602   -3.4507635   -5.95598909 #>                   [,47]        [,48]         [,49]        [,50] #> (Intercept)    0.117542    0.2551899   -0.04864663    0.1748471 #> Chi.P.0       74.953564   60.0169813  122.49471068  149.1347606 #> Chi.P.1       74.798386   60.5046895  133.50509818  161.6015884 #> Chi.P.2       74.630060   60.0919291   96.32767441  155.4413408 #> Chi.P.3      106.962955   66.3098471  368.05040339  264.2659001 #> Chi.P.4      -12.217467   -8.0551736  -10.32921455   -4.5268018 #> Chi.P.5       45.973672  101.8648266  152.41618787   80.6692679 #> Chi.C.3       13.648245   31.3234341   35.67606030   15.1490422 #> Chi.PC.4      -6.070574   59.4203671   19.68266305  -10.5927961 #> Kappa.1       22.717928    1.3029197 -118.48230022  -98.1162282 #> Kappa.2       74.651180   65.5196268  176.30429739  201.9939400 #> Kappa.3       96.928180   57.1304842   44.81877690   83.1975941 #> Kappa.4       75.133121   60.6115372  128.79186017  157.6030483 #> Estate.1     -96.265517  -11.7552481 -157.38589996 -131.4041603 #> Estate.2      69.390787   29.4843640  109.41577468   88.3252735 #> Estate.3     -14.139688  -17.7399959    4.41274924    2.8043367 #> MEDV.11      -28.137706  -30.6633977  -28.25917074  -35.1421234 #> MEDV.12     -111.338575 -102.2684501 -222.79338286 -218.2584888 #> MEDV.13       31.515504    7.3295627   -3.17075462   24.7310368 #> MEDV.22       91.200513   92.4487648 -400.71699241 -398.5926321 #> MEDV.23      -27.640650  -22.0163460   -8.33051684  -40.4245643 #> MEDV.33       -3.902694   -2.3021959   -1.94837121   -4.9165147 predict(fit, newx = x) #>   [1] -2126.5311149 -2113.0093937 -1927.1295697 -1916.2804337 -1727.1257914 #>   [6] -1717.2861309 -1526.7736460 -1517.4430975 -1326.3146437 -1317.1910812 #>  [11] -1126.0258379 -1117.0438757 -1152.3975759  -925.8548082  -916.9989473 #>  [16]  -954.1374578  -725.7659218  -716.9434414  -755.6424904  -525.7590496 #>  [21]  -517.1505849  -556.8416774  -326.0251851  -317.2390446  -358.0961928 #>  [26]  -126.3457723  -117.6196787  -159.3368486    73.2671789    81.9582476 #>  [31]    68.2290319    58.7176607    52.4873494    48.9405839    40.1698496 #>  [36]    39.5149932   272.8277268   281.5151093   267.8361441   258.2372266 #>  [41]   251.9653404   239.4227669   238.3654502   472.3130087   481.0699828 #>  [46]   437.1884684  -682.5094818  -608.1175625  -484.6798508  -484.3143131 #>  [51]  -508.3176221  -505.3749894  -520.2682549  -385.5998415  -397.4439854 #>  [56]  -408.4523457  -416.1592035  -420.4766160  -281.4831352  -286.1063903 #>  [61]  -309.2137607  -308.3213818  -301.3503366  -320.1517588  -185.9565051 #>  [66]  -195.1106277  -198.7931094  -209.8496502  -219.9637066   -81.9124664 #>  [71]   -87.2036280  -110.5932894  -108.9750042  -119.9249612    13.6476094 #>  [76]     4.3117217     2.5946491    18.1035220     0.5851557   -17.6388530 #>  [81]   117.6039740   111.9434372   111.4492271    88.5420984    88.2353049 #>  [86]    77.1328057    73.1799456   207.1877133   201.0384884   181.6989939 #>  [91]   173.3376435   174.8722633   165.2800101   314.5310378   310.4992541 #>  [96]   287.0201457   287.3510251   277.2610142   272.4059470   403.2120572 #> [101]   396.4112736   381.0383589   372.5500114   369.5983754   364.1443016 #> [106]   516.5316903   509.6152424   488.2655674   486.0172123   476.1631999 #> [111]   471.7934591   600.6166529   585.7038417   567.3884202   708.7957250 #> [116]   687.7425623   685.0436497   667.1045429   784.7919483  -567.7315248 #> [121]  -479.6098697  -369.2487971  -253.1174236  -170.8220567   -54.8236146 #> [126]   -84.0919337     8.9308102   145.1456488   114.2970928   104.2542687 #> [131]    94.5219366   229.0643266   223.3487825   206.8911548   192.5342649 #> [136]   345.1790929   312.6753527   302.1940665   292.1412858   428.0533607 #> [141]   426.9877038   405.1950674   397.4111318   390.0165622   544.2987487 #> [146]   514.4917053   501.0570061   488.5117777   491.8639636   627.1276743 #> [151]   596.2499814   586.9544253   743.3819695   710.2080283   702.3023194 #> [156]   685.8241370   784.5182155   908.9330637   883.6716410   983.0990826 #> [161]   -28.4165088   169.0372926   152.5673765   368.6349914   351.6020516 #> [166]   567.6171550   525.1185800   518.3042363   517.9979174   632.6161648 #> [171]   620.4427871   615.5397536   766.5900204   723.4222502   716.2633675 #> [176]   714.9335090   813.3049698  -340.6341624  -150.8368988  -917.2043616 #> [181]  -683.6380166  -481.0675768  -508.8049655  -398.1200985  -414.9297846 #> [186]  -309.3802100  -321.2695870  -328.2182144  -197.9164950  -110.0036170 #> [191]    79.2609847    74.3714838   203.7678983   401.2795480   380.9431320 #> [196]  -251.5274498  -166.1719643  -100.6229019   116.3040612   103.4325476 #> [201]    97.1834530   320.0317613   302.5906622   295.4300953   406.5668699 #> [206]   406.0812741   392.4233534"},{"path":"https://nanx.me/enpls/reference/enpls.fs.core.html","id":null,"dir":"Reference","previous_headings":"","what":"core function for enpls.fs ‚Äî enpls.fs.core","title":"core function for enpls.fs ‚Äî enpls.fs.core","text":"select best ncomp cross-validation use fit complete training set. scale = FALSE","code":""},{"path":"https://nanx.me/enpls/reference/enpls.fs.core.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"core function for enpls.fs ‚Äî enpls.fs.core","text":"","code":"enpls.fs.core(plsdf, maxcomp, cvfolds)"},{"path":"https://nanx.me/enpls/reference/enpls.fs.core.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"core function for enpls.fs ‚Äî enpls.fs.core","text":"fitted coefficients","code":""},{"path":"https://nanx.me/enpls/reference/enpls.fs.html","id":null,"dir":"Reference","previous_headings":"","what":"Ensemble Partial Least Squares for Measuring Feature Importance ‚Äî enpls.fs","title":"Ensemble Partial Least Squares for Measuring Feature Importance ‚Äî enpls.fs","text":"Measuring feature importance ensemble partial least squares.","code":""},{"path":"https://nanx.me/enpls/reference/enpls.fs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ensemble Partial Least Squares for Measuring Feature Importance ‚Äî enpls.fs","text":"","code":"enpls.fs(   x,   y,   maxcomp = NULL,   cvfolds = 5L,   reptimes = 500L,   method = c(\"mc\", \"boot\"),   ratio = 0.8,   parallel = 1L )"},{"path":"https://nanx.me/enpls/reference/enpls.fs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ensemble Partial Least Squares for Measuring Feature Importance ‚Äî enpls.fs","text":"x Predictor matrix. y Response vector. maxcomp Maximum number components included within model. specified, use maximum number possible (considering cross-validation special cases n smaller p). cvfolds Number cross-validation folds used model automatic parameter selection, default 5. reptimes Number models build Monte-Carlo resampling bootstrapping. method Resampling method. \"mc\" (Monte-Carlo resampling) \"boot\" (bootstrapping). Default \"mc\". ratio Sampling ratio used method = \"mc\". parallel Integer. Number CPU cores use. Default 1 (parallelized).","code":""},{"path":"https://nanx.me/enpls/reference/enpls.fs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ensemble Partial Least Squares for Measuring Feature Importance ‚Äî enpls.fs","text":"list containing two components: variable.importance - vector variable importance coefficient.matrix - original coefficient matrix","code":""},{"path":[]},{"path":"https://nanx.me/enpls/reference/enpls.fs.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Ensemble Partial Least Squares for Measuring Feature Importance ‚Äî enpls.fs","text":"Nan Xiao <https://nanx.>","code":""},{"path":"https://nanx.me/enpls/reference/enpls.fs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Ensemble Partial Least Squares for Measuring Feature Importance ‚Äî enpls.fs","text":"","code":"data(\"alkanes\") x <- alkanes$x y <- alkanes$y  set.seed(42) fs <- enpls.fs(x, y, reptimes = 50) print(fs) #> Variable Importance by Ensemble Partial Least Squares #> --- #>          Importance #> MEDV.23   2.3438355 #> MEDV.33   2.1624571 #> Chi.P.4   2.1475160 #> Chi.C.3   2.0521822 #> Chi.P.5   1.4142498 #> Estate.1  1.2850053 #> MEDV.22   1.2822210 #> Chi.P.3   1.0533900 #> MEDV.12   1.0532281 #> MEDV.11   0.9379795 #> MEDV.13   0.8904436 #> Chi.PC.4  0.7798934 #> Estate.2  0.7473758 #> Chi.P.2   0.7221879 #> Kappa.3   0.7076264 #> Kappa.1   0.7043556 #> Kappa.2   0.4590357 #> Chi.P.1   0.4193437 #> Estate.3  0.3400528 #> Chi.P.0   0.2904166 #> Kappa.4   0.2455370 plot(fs)"},{"path":"https://nanx.me/enpls/reference/enpls.mae.html","id":null,"dir":"Reference","previous_headings":"","what":"Mean Absolute Error (MAE) ‚Äî enpls.mae","title":"Mean Absolute Error (MAE) ‚Äî enpls.mae","text":"Mean Absolute Error (MAE)","code":""},{"path":"https://nanx.me/enpls/reference/enpls.mae.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mean Absolute Error (MAE) ‚Äî enpls.mae","text":"","code":"enpls.mae(yreal, ypred)"},{"path":"https://nanx.me/enpls/reference/enpls.mae.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mean Absolute Error (MAE) ‚Äî enpls.mae","text":"yreal true response vector ypred predicted response vector","code":""},{"path":"https://nanx.me/enpls/reference/enpls.mae.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mean Absolute Error (MAE) ‚Äî enpls.mae","text":"MAE","code":""},{"path":"https://nanx.me/enpls/reference/enpls.mae.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Mean Absolute Error (MAE) ‚Äî enpls.mae","text":"Nan Xiao <https://nanx.>","code":""},{"path":"https://nanx.me/enpls/reference/enpls.od.core.html","id":null,"dir":"Reference","previous_headings":"","what":"core function for enpls.od ‚Äî enpls.od.core","title":"core function for enpls.od ‚Äî enpls.od.core","text":"select best ncomp cross-validation use fit complete training set, predict test set. scale = TRUE","code":""},{"path":"https://nanx.me/enpls/reference/enpls.od.core.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"core function for enpls.od ‚Äî enpls.od.core","text":"","code":"enpls.od.core(plsdf.sample, plsdf.remain, maxcomp, cvfolds)"},{"path":"https://nanx.me/enpls/reference/enpls.od.core.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"core function for enpls.od ‚Äî enpls.od.core","text":"error vector predicted y real y","code":""},{"path":"https://nanx.me/enpls/reference/enpls.od.html","id":null,"dir":"Reference","previous_headings":"","what":"Ensemble Partial Least Squares for Outlier Detection ‚Äî enpls.od","title":"Ensemble Partial Least Squares for Outlier Detection ‚Äî enpls.od","text":"Outlier detection ensemble partial least squares.","code":""},{"path":"https://nanx.me/enpls/reference/enpls.od.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ensemble Partial Least Squares for Outlier Detection ‚Äî enpls.od","text":"","code":"enpls.od(   x,   y,   maxcomp = NULL,   cvfolds = 5L,   reptimes = 500L,   method = c(\"mc\", \"boot\"),   ratio = 0.8,   parallel = 1L )"},{"path":"https://nanx.me/enpls/reference/enpls.od.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ensemble Partial Least Squares for Outlier Detection ‚Äî enpls.od","text":"x Predictor matrix. y Response vector. maxcomp Maximum number components included within model. specified, use maximum number possible (considering cross-validation special cases n smaller p). cvfolds Number cross-validation folds used model automatic parameter selection, default 5. reptimes Number models build Monte-Carlo resampling bootstrapping. method Resampling method. \"mc\" (Monte-Carlo resampling) \"boot\" (bootstrapping). Default \"mc\". ratio Sampling ratio used method = \"mc\". parallel Integer. Number CPU cores use. Default 1 (parallelized).","code":""},{"path":"https://nanx.me/enpls/reference/enpls.od.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ensemble Partial Least Squares for Outlier Detection ‚Äî enpls.od","text":"list containing four components: error.mean - error mean samples (absolute value) error.median - error median samples error.sd - error sd samples predict.error.matrix - original prediction error matrix","code":""},{"path":"https://nanx.me/enpls/reference/enpls.od.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Ensemble Partial Least Squares for Outlier Detection ‚Äî enpls.od","text":"maximize probablity observation can selected test set (thus prediction uncertainty can measured), please try setting large reptimes.","code":""},{"path":[]},{"path":"https://nanx.me/enpls/reference/enpls.od.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Ensemble Partial Least Squares for Outlier Detection ‚Äî enpls.od","text":"Nan Xiao <https://nanx.>","code":""},{"path":"https://nanx.me/enpls/reference/enpls.od.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Ensemble Partial Least Squares for Outlier Detection ‚Äî enpls.od","text":"","code":"data(\"alkanes\") x <- alkanes$x y <- alkanes$y  set.seed(42) od <- enpls.od(x, y, reptimes = 50) print(od) #> Outlier Detection by Ensemble Partial Least Squares #> --- #> Mean residual for each sample: #>   [1]  2.75921773 11.36519417  2.86997847  3.72358683  2.58864423  0.69950317 #>   [7]  2.47046080  0.04090356  0.72374081  0.67761648  0.60657038  0.05203462 #>  [13]  4.81214619  0.48047678  0.31426341  4.45439789  1.81680825  0.00486926 #>  [19]  1.40762012  2.76733128  0.25816473  0.11014460  2.76375525  0.24664065 #>  [25]  0.18795164  2.89461883  0.60293011  0.54016143  3.69778413  0.84421368 #>  [31]  2.40482744  0.08033139  0.65464173  0.28846939  0.96347563  1.16604993 #>  [37]  2.42467651  1.80624634  2.08209599  0.64821359  0.06219722  2.36510870 #>  [43]  1.08902416  2.09141868  2.06910689  1.38871463  1.16310209  2.07153015 #>  [49]  2.41222206  1.99819780  1.02797377  1.09358743  6.44005724  2.66972544 #>  [55]  1.18031132  0.96520499  2.91887428  3.88938152  0.93689004  0.04277856 #>  [61]  0.09383582  3.13664578 17.11229300  6.53632442  0.44617481  2.72369291 #>  [67]  2.83683060  0.41927300  1.57410904  1.62112809  0.11859181  1.41609908 #>  [73]  0.66340508  1.53271330  0.20100807  3.47461828  1.36388771  1.47275628 #>  [79]  2.03870349  1.42598923  0.21947290  0.25046323  6.82282300  0.91802223 #>  [85]  2.63298282  1.68299675  1.67646979  1.56930079  0.77600240  0.57822702 #>  [91]  1.03364347  4.42455671  1.06359453  3.14333266  7.53801734  1.87522128 #>  [97]  3.14718740  1.28679073  1.55473026  0.81210377  1.62480053  1.55781168 #> [103]  1.07627481  0.48852462  0.52741604  1.70822777  0.11695013  0.32088398 #> [109]  3.10218596  2.17914452  2.19815151  3.41522772  3.09238815  2.52872181 #> [115]  0.69580966  0.01307271  3.61323553  0.50675263  2.09524681  4.06314768 #> [121]  1.50053126  3.56251067  0.02603732  2.52175184  0.46881633  1.17158669 #> [127]  0.35500780  0.14109849  0.02583630  4.39330939  5.83211202  3.93926189 #> [133]  1.70661275  0.73174502  3.67211046  0.15568680  1.01687679  4.73752709 #> [139]  4.75850118  6.28985938  3.00910912  0.55664806  2.53554817  3.77837005 #> [145]  0.81599912  1.00770488  4.21709646  3.29187061  0.02806380  3.95040415 #> [151]  2.81500647  2.24470051  0.16533690  1.69112925 11.12871713  2.64622693 #> [157]  2.36619343  0.80239235  3.13253142  3.73983802  1.05180495  0.75120889 #> [163]  5.55274842  0.93965402  5.44634050  0.91052763 12.86047051  8.16501444 #> [169]  5.28568842  1.94774611  1.42523305  3.51056559  3.55810920  9.05314678 #> [175]  5.73253024  3.79497529  5.01317052  0.64924425  0.77081874  2.24917960 #> [181]  2.97614143  1.73162082  4.05394871  0.78070127  4.54159467  1.20684823 #> [187]  3.03099951  2.65903955  1.45986082  0.83727406  4.74072104  0.75646839 #> [193]  4.69534977  1.36865729  3.20102779  0.18763266 10.61033130  4.46728417 #> [199]  8.16220823  3.61534939  4.17841145  2.49200986  1.05991605  5.30421423 #> [205]  2.08243043  2.47518723  5.36082689 #> --- #> Residual SD for each sample: #>   [1] 2.77082522 3.18518150 0.74165858 2.23594825 1.23169974 0.42687633 #>   [7] 1.50625099 0.79975392 1.41280667 0.46584217 1.17084856 0.93096232 #>  [13] 0.88984994 0.75917079 0.57559100 0.64465715 0.47396718 0.56017441 #>  [19] 0.68267751 0.65140968 0.41747884 0.56358621 0.67966904 0.43427716 #>  [25] 0.37536436 0.64008708 0.44791500 0.59112318 0.88170164 0.41258090 #>  [31] 0.63087919 0.43212128 0.50448177 0.26486222 0.71583384 0.42491843 #>  [37] 2.11640004 0.40073941 0.88944036 0.32170138 0.48828519 0.41031319 #>  [43] 0.50217099 1.59534185 0.33617303 0.50260003 0.94105157 0.63972291 #>  [49] 0.50587685 0.37551763 0.41497134 0.42771863 0.46207727 1.40571227 #>  [55] 0.51642660 0.42393378 0.43527285 0.08752688 0.45192162 0.51780544 #>  [61] 0.61052739 0.43776137 0.31398455 0.32995059 2.00011552 0.87425403 #>  [67] 0.31162653 0.63105402 0.24649488 0.31711494 0.49936385 0.59978816 #>  [73] 0.59653589 0.50852740 2.53110721 0.41851982 1.10184218 0.21710200 #>  [79] 0.43937877 0.35242335 0.33627934 0.34095574 0.33341472 0.69920856 #>  [85] 0.48311083 0.23781167 0.32765431 0.70053129 0.40945258 0.08585720 #>  [91] 0.24244975 0.36514882 0.79025058 0.44402145 0.46959851 0.47803736 #>  [97] 0.66037588 0.69332640 0.29156760 0.42604792 0.47781693 0.32571532 #> [103] 0.31530154 0.43322187 0.64879644 0.67484355 0.40328109 0.51379190 #> [109] 0.25584801 0.78167536 0.46379337 1.02646245 0.48038341 0.42723380 #> [115] 0.71363249 0.69063925 0.59453418 0.65063662 0.86515782 1.17342811 #> [121] 0.78617936 0.47367019 0.24439560 0.70316651 0.73449508 1.79527777 #> [127] 0.44260783 0.33808668 0.81899089 0.32662542 0.73804730 2.75960043 #> [133] 0.64233354 0.47841244 0.75136350 0.32979985 0.94649800 0.24178213 #> [139] 1.11533236 2.49301466 0.35001294 0.80453705 0.35011625 0.83446145 #> [145] 0.58759196 0.40320473 0.29256353 0.77961214 0.39795562 1.01770854 #> [151] 0.45468083 0.62303222 0.40692023 0.44973569 1.25950083 0.53901537 #> [157] 0.34171577 1.08900598 0.71282202 1.29978898 0.82451430 0.44599800 #> [163] 0.77330806 0.51100098 0.51146626 0.53756880 1.01862539 0.84995332 #> [169] 1.18180361 3.93102487 1.04156903 1.13106025 0.52150688 1.24405827 #> [175] 0.67447926 1.17640208 0.64074369 0.28467185 0.33626125 1.94356528 #> [181] 0.62001275 0.44932588 0.16634723 0.40215221 0.40529902 0.45155131 #> [187] 0.23942115 1.16054612 0.39605799 0.47297038 0.33345301 0.27533596 #> [193] 0.36658302 0.80698643 0.73877079 0.55089330 1.40387322 0.73798595 #> [199] 0.38540824 0.26297673 0.58085243 0.64409232 0.52326994 0.87634496 #> [205] 0.53404341 0.62252334 0.45961173 plot(od)  plot(od, criterion = \"sd\")"},{"path":"https://nanx.me/enpls/reference/enpls.rmse.html","id":null,"dir":"Reference","previous_headings":"","what":"Root Mean Squared Error (RMSE) ‚Äî enpls.rmse","title":"Root Mean Squared Error (RMSE) ‚Äî enpls.rmse","text":"Compute Root Mean Squared Error (RMSE).","code":""},{"path":"https://nanx.me/enpls/reference/enpls.rmse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Root Mean Squared Error (RMSE) ‚Äî enpls.rmse","text":"","code":"enpls.rmse(yreal, ypred)"},{"path":"https://nanx.me/enpls/reference/enpls.rmse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Root Mean Squared Error (RMSE) ‚Äî enpls.rmse","text":"yreal true response vector ypred predicted response vector","code":""},{"path":"https://nanx.me/enpls/reference/enpls.rmse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Root Mean Squared Error (RMSE) ‚Äî enpls.rmse","text":"RMSE","code":""},{"path":"https://nanx.me/enpls/reference/enpls.rmse.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Root Mean Squared Error (RMSE) ‚Äî enpls.rmse","text":"Nan Xiao <https://nanx.>","code":""},{"path":"https://nanx.me/enpls/reference/enpls.rmsle.html","id":null,"dir":"Reference","previous_headings":"","what":"Root Mean Squared Logarithmic Error (RMSLE) ‚Äî enpls.rmsle","title":"Root Mean Squared Logarithmic Error (RMSLE) ‚Äî enpls.rmsle","text":"Root Mean Squared Logarithmic Error (RMSLE)","code":""},{"path":"https://nanx.me/enpls/reference/enpls.rmsle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Root Mean Squared Logarithmic Error (RMSLE) ‚Äî enpls.rmsle","text":"","code":"enpls.rmsle(yreal, ypred)"},{"path":"https://nanx.me/enpls/reference/enpls.rmsle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Root Mean Squared Logarithmic Error (RMSLE) ‚Äî enpls.rmsle","text":"yreal true response vector ypred predicted response vector","code":""},{"path":"https://nanx.me/enpls/reference/enpls.rmsle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Root Mean Squared Logarithmic Error (RMSLE) ‚Äî enpls.rmsle","text":"RMSLE","code":""},{"path":"https://nanx.me/enpls/reference/enpls.rmsle.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Root Mean Squared Logarithmic Error (RMSLE) ‚Äî enpls.rmsle","text":"Nan Xiao <https://nanx.>","code":""},{"path":"https://nanx.me/enpls/reference/enspls.ad.core.fit.html","id":null,"dir":"Reference","previous_headings":"","what":"core fitting function for enspls.ad ‚Äî enspls.ad.core.fit","title":"core fitting function for enspls.ad ‚Äî enspls.ad.core.fit","text":"select best ncomp alpha cross-validation, use fit complete training set. scale = TRUE","code":""},{"path":"https://nanx.me/enpls/reference/enspls.ad.core.fit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"core fitting function for enspls.ad ‚Äî enspls.ad.core.fit","text":"","code":"enspls.ad.core.fit(x.tr, y.tr, maxcomp, cvfolds, alpha)"},{"path":"https://nanx.me/enpls/reference/enspls.ad.core.fit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"core fitting function for enspls.ad ‚Äî enspls.ad.core.fit","text":"fitted spls object","code":""},{"path":"https://nanx.me/enpls/reference/enspls.ad.core.pred.html","id":null,"dir":"Reference","previous_headings":"","what":"core prediction function for enspls.ad ‚Äî enspls.ad.core.pred","title":"core prediction function for enspls.ad ‚Äî enspls.ad.core.pred","text":"core prediction function enspls.ad","code":""},{"path":"https://nanx.me/enpls/reference/enspls.ad.core.pred.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"core prediction function for enspls.ad ‚Äî enspls.ad.core.pred","text":"","code":"enspls.ad.core.pred(model, x.te, y.te)"},{"path":"https://nanx.me/enpls/reference/enspls.ad.core.pred.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"core prediction function for enspls.ad ‚Äî enspls.ad.core.pred","text":"error vector predicted real response","code":""},{"path":"https://nanx.me/enpls/reference/enspls.ad.html","id":null,"dir":"Reference","previous_headings":"","what":"Ensemble Sparse Partial Least Squares for\nModel Applicability Domain Evaluation ‚Äî enspls.ad","title":"Ensemble Sparse Partial Least Squares for\nModel Applicability Domain Evaluation ‚Äî enspls.ad","text":"Model applicability domain evaluation ensemble sparse partial least squares.","code":""},{"path":"https://nanx.me/enpls/reference/enspls.ad.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ensemble Sparse Partial Least Squares for\nModel Applicability Domain Evaluation ‚Äî enspls.ad","text":"","code":"enspls.ad(   x,   y,   xtest,   ytest,   maxcomp = 5L,   cvfolds = 5L,   alpha = seq(0.2, 0.8, 0.2),   space = c(\"sample\", \"variable\"),   method = c(\"mc\", \"boot\"),   reptimes = 500L,   ratio = 0.8,   parallel = 1L )"},{"path":"https://nanx.me/enpls/reference/enspls.ad.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ensemble Sparse Partial Least Squares for\nModel Applicability Domain Evaluation ‚Äî enspls.ad","text":"x Predictor matrix training set. y Response vector training set. xtest List, -th component -th test set's predictor matrix (see example code ). ytest List, -th component -th test set's response vector (see example code ). maxcomp Maximum number components included within model. specified, use 5 default. cvfolds Number cross-validation folds used model automatic parameter selection, default 5. alpha Parameter (grid) controlling sparsity model. specified, default seq(0.2, 0.8, 0.2). space Space apply resampling method. Can sample space (\"sample\") variable space (\"variable\"). method Resampling method. \"mc\" (Monte-Carlo resampling) \"boot\" (bootstrapping). Default \"mc\". reptimes Number models build Monte-Carlo resampling bootstrapping. ratio Sampling ratio used method = \"mc\". parallel Integer. Number CPU cores use. Default 1 (parallelized).","code":""},{"path":"https://nanx.me/enpls/reference/enspls.ad.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ensemble Sparse Partial Least Squares for\nModel Applicability Domain Evaluation ‚Äî enspls.ad","text":"list containing: tr.error.mean - absolute mean prediction error training set tr.error.median - absolute median prediction error training set tr.error.sd - prediction error sd training set tr.error.matrix - raw prediction error matrix training set te.error.mean - list absolute mean prediction error test set(s) te.error.median - list absolute median prediction error test set(s) te.error.sd - list prediction error sd test set(s) te.error.matrix - list raw prediction error matrix test set(s)","code":""},{"path":"https://nanx.me/enpls/reference/enspls.ad.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Ensemble Sparse Partial Least Squares for\nModel Applicability Domain Evaluation ‚Äî enspls.ad","text":"Note space = \"variable\", method \"mc\", since bootstrapping variable space create duplicated variables, cause problems.","code":""},{"path":"https://nanx.me/enpls/reference/enspls.ad.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Ensemble Sparse Partial Least Squares for\nModel Applicability Domain Evaluation ‚Äî enspls.ad","text":"Nan Xiao <https://nanx.>","code":""},{"path":"https://nanx.me/enpls/reference/enspls.ad.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Ensemble Sparse Partial Least Squares for\nModel Applicability Domain Evaluation ‚Äî enspls.ad","text":"","code":"data(\"logd1k\") # remove low variance variables x <- logd1k$x[, -c(17, 52, 59)] y <- logd1k$y  # training set x.tr <- x[1:300, ] y.tr <- y[1:300]  # two test sets x.te <- list(   \"test.1\" = x[301:400, ],   \"test.2\" = x[401:500, ] ) y.te <- list(   \"test.1\" = y[301:400],   \"test.2\" = y[401:500] )  set.seed(42) ad <- enspls.ad(   x.tr, y.tr, x.te, y.te,   maxcomp = 3, alpha = c(0.3, 0.6, 0.9),   space = \"variable\", method = \"mc\",   ratio = 0.8, reptimes = 10 ) print(ad) #> Model Applicability Domain Evaluation by ENSPLS #> --- #> Absolute mean prediction error for each training set sample: #>   [1] 0.422632298 0.815523615 0.648213606 0.870831328 0.257203074 0.490832846 #>   [7] 0.701719681 0.429048791 0.749324907 0.638404365 0.843665524 0.687892385 #>  [13] 1.017169872 0.763573955 0.759053761 0.871500956 0.236640925 0.088100279 #>  [19] 0.472965624 0.634421708 0.735632351 0.091059839 1.594026249 1.189337666 #>  [25] 0.340769966 0.604866100 1.303871973 0.961142660 0.092884283 0.100520976 #>  [31] 0.059779983 0.412777313 0.135195202 2.478026712 0.397403818 0.005011676 #>  [37] 0.877181685 0.145017597 0.023745363 0.280530155 0.058398364 0.568238661 #>  [43] 0.251556521 0.494641002 0.163135341 0.263345408 0.331201449 0.257333694 #>  [49] 0.210855050 0.221268755 0.057240160 0.384076723 1.179395348 0.390537444 #>  [55] 0.726689121 0.528659319 0.212638767 0.161500350 0.362637352 0.256825754 #>  [61] 0.732640202 2.477624629 0.191345044 0.378929068 1.560290268 1.490810969 #>  [67] 0.296412512 1.550013282 0.055909397 0.480447843 0.022057600 0.205219974 #>  [73] 0.533021269 0.061863659 0.325187195 0.792693950 0.171503502 1.268409310 #>  [79] 0.095289006 0.145745742 0.258202295 0.186118843 0.072360285 0.001806612 #>  [85] 0.053576611 0.542751777 0.122393517 0.701052137 0.336353318 0.176058594 #>  [91] 0.684119003 1.427365586 0.699280144 0.406684185 0.611234923 0.156924933 #>  [97] 0.562503385 1.119304806 0.471931939 0.291409291 1.002496298 0.915919886 #> [103] 1.371940567 0.159471334 0.458710686 0.352588032 0.662182370 0.092416830 #> [109] 0.381089817 0.777267167 0.723549214 0.086011861 0.504880794 0.442446365 #> [115] 2.068971171 0.677454033 0.275265965 0.146845629 0.145894573 0.380305366 #> [121] 0.175955943 0.495523895 0.095822143 0.108049721 0.421334995 0.406392115 #> [127] 0.427064993 0.475260473 0.390757565 0.386203722 0.389891939 0.638576864 #> [133] 0.514533894 0.702536133 1.016492859 0.036428252 0.068006633 0.158541714 #> [139] 0.358508958 0.126570666 0.383104094 0.316770984 0.315860883 0.367288327 #> [145] 0.005705279 0.511450671 0.776060683 0.717761225 1.248239275 0.315547146 #> [151] 0.678562080 0.436041833 0.302940412 0.333968661 0.335712517 0.490020503 #> [157] 0.027968631 0.131459236 1.330434909 0.534146052 0.054247912 0.470021073 #> [163] 0.230859468 1.113192328 0.934546316 0.167146638 1.009885792 0.124310929 #> [169] 1.056397529 1.023604883 0.225133982 0.442940412 0.583332596 0.126985869 #> [175] 0.069347790 0.653485515 0.970596830 0.195304683 0.801994753 1.199706935 #> [181] 0.864077011 0.954600519 0.260503102 1.575187384 0.241392038 0.640383510 #> [187] 0.281017068 0.421082178 0.252594496 0.580144400 0.215357014 0.462556069 #> [193] 0.224788390 0.029300831 0.277304150 0.320589756 0.214429238 0.237467730 #> [199] 0.235394840 0.414850699 0.719519720 0.354494279 0.072602051 0.007889332 #> [205] 0.390031470 0.789599200 0.266620727 0.428384211 1.065651077 0.372088798 #> [211] 0.937549606 0.090203048 0.090203048 0.256837822 1.342746701 0.574286923 #> [217] 0.789007735 0.426308453 0.412019834 0.713326957 0.394331204 0.857297967 #> [223] 0.843878184 0.347792353 0.039652246 0.200532641 0.096114491 0.544931258 #> [229] 0.337727332 0.401999859 0.059209044 1.022239155 1.165625666 0.685192754 #> [235] 0.007973348 0.462237983 1.251230872 0.166910524 0.257766196 0.709494592 #> [241] 1.283898665 0.724810413 0.141464864 1.025924894 0.848892347 0.710976980 #> [247] 0.315861373 0.185796431 0.270266859 0.106863048 0.951448651 0.890710089 #> [253] 0.900610648 1.294977014 0.980769268 0.238059821 0.849570466 0.035763040 #> [259] 1.324239041 1.380289181 0.400634228 0.560836939 1.519693134 0.926202509 #> [265] 0.911714531 0.877294549 0.059123701 1.193649120 0.360798335 0.837650147 #> [271] 1.082083058 0.422692742 0.417876957 0.839002022 0.944522512 0.136016291 #> [277] 0.965552453 1.197557941 0.999223117 1.102941147 0.749923726 1.160063450 #> [283] 1.995596507 0.876923724 0.527334455 1.275112467 0.126439904 1.522104432 #> [289] 0.730701343 0.652148077 0.484660849 1.146757330 0.118813278 0.802484059 #> [295] 1.043295173 1.189620988 0.894921760 1.299672426 0.025476701 0.518866931 #> --- #> Prediction error SD for each training set sample: #>   [1] 0.17682492 0.13442655 0.10556516 0.11149364 0.14528873 0.12758414 #>   [7] 0.12065164 0.07926194 0.08193757 0.06919434 0.15949739 0.11983705 #>  [13] 0.11835357 0.20540697 0.10198030 0.11554543 0.13944593 0.15980624 #>  [19] 0.08477330 0.13461282 0.23612843 0.15600606 0.21791446 0.19736729 #>  [25] 0.15016986 0.09344745 0.21864433 0.21790961 0.25336042 0.15941805 #>  [31] 0.09284126 0.16197923 0.09572618 0.08856759 0.17542166 0.14772163 #>  [37] 0.19002387 0.09668287 0.14297462 0.11884520 0.18137131 0.09604546 #>  [43] 0.13793796 0.19055507 0.11347154 0.07725716 0.12906606 0.07764695 #>  [49] 0.08125217 0.07245476 0.06363757 0.11119898 0.16865215 0.10577447 #>  [55] 0.21110265 0.09781289 0.11084679 0.14933465 0.07757903 0.22813192 #>  [61] 0.09875702 0.10747134 0.13641438 0.16742019 0.27061775 0.23712666 #>  [67] 0.13959506 0.28623757 0.13528523 0.12462349 0.05603801 0.09715490 #>  [73] 0.10030104 0.08554512 0.16769181 0.10523460 0.09182054 0.25599278 #>  [79] 0.19716493 0.14627301 0.15356982 0.09900334 0.08128891 0.20611741 #>  [85] 0.17204179 0.25688856 0.12334344 0.09244068 0.20538923 0.10928922 #>  [91] 0.29713211 0.34794542 0.13578921 0.12893068 0.15385871 0.09169239 #>  [97] 0.13315023 0.21538582 0.18799248 0.13418807 0.19680767 0.19982114 #> [103] 0.26388690 0.19550901 0.20320043 0.06773431 0.17550233 0.21529091 #> [109] 0.13784328 0.20284702 0.19120467 0.15362606 0.16542940 0.18575542 #> [115] 0.23085802 0.15447198 0.11138301 0.09840187 0.25844855 0.17223314 #> [121] 0.15344701 0.13833191 0.14289706 0.13234967 0.11556001 0.11592906 #> [127] 0.10315136 0.08660667 0.09449550 0.16854420 0.18856090 0.15430410 #> [133] 0.09661260 0.28032529 0.21735301 0.12557330 0.20184812 0.09335452 #> [139] 0.18736053 0.19047223 0.20598213 0.14763848 0.13510977 0.12023468 #> [145] 0.20625454 0.18448368 0.14956688 0.16068554 0.10170993 0.18631713 #> [151] 0.15860217 0.09685768 0.31021140 0.07256171 0.18358676 0.11571334 #> [157] 0.11897874 0.28213843 0.17354708 0.54050221 0.21115082 0.16023562 #> [163] 0.21092455 0.15063153 0.16800965 0.25836353 0.20453967 0.20524870 #> [169] 0.18909853 0.15239066 0.19057706 0.31021140 0.17806749 0.18825405 #> [175] 0.23845054 0.16207528 0.14468703 0.22773153 0.09435823 0.20591807 #> [181] 0.09285024 0.14829706 0.18164147 0.11016136 0.12613775 0.13083017 #> [187] 0.15856212 0.14654668 0.11192022 0.09052024 0.18558041 0.14932045 #> [193] 0.19117145 0.16532975 0.23524530 0.17242759 0.16421283 0.15853904 #> [199] 0.18032470 0.27398573 0.21185651 0.08873293 0.17034044 0.20631894 #> [205] 0.17913107 0.27390014 0.14980278 0.10650226 0.12233789 0.15860333 #> [211] 0.07790451 0.17097513 0.17097513 0.16639106 0.13218349 0.19943419 #> [217] 0.14607979 0.09014777 0.16541099 0.21108869 0.21867079 0.13422304 #> [223] 0.15043220 0.27229967 0.14221377 0.22646860 0.12034653 0.12950380 #> [229] 0.12548953 0.45557358 0.11447949 0.12563839 0.22438920 0.25630906 #> [235] 0.09629856 0.13508804 0.16355792 0.18598939 0.36341332 0.18273404 #> [241] 0.12908144 0.11288943 0.19083150 0.16612828 0.11700099 0.13332849 #> [247] 0.12906516 0.24467925 0.17511908 0.19636436 0.13706344 0.09350376 #> [253] 0.11156260 0.07681448 0.10086700 0.18217069 0.08211883 0.18818291 #> [259] 0.12189647 0.12451514 0.28735398 0.14521698 0.23059541 0.04790616 #> [265] 0.06013623 0.22800985 0.18774418 0.27971046 0.13806851 0.03846176 #> [271] 0.14729532 0.24749122 0.21319807 0.18974506 0.20515873 0.22254970 #> [277] 0.13604209 0.22385117 0.09036809 0.08643619 0.17599821 0.11058212 #> [283] 0.22266788 0.90792902 0.25203713 0.09633983 0.21948222 0.14396076 #> [289] 0.26004314 0.21105243 0.25559727 0.18210567 0.13009828 0.38864150 #> [295] 0.16652945 0.11959406 0.36849624 0.19887907 0.24674728 0.18786913 #> --- #> Absolute mean prediction error for each test set sample: #> [[1]] #>   [1] 0.639812710 1.728652076 0.802728738 1.068664782 0.509884475 0.443834120 #>   [7] 1.778795719 1.707951484 0.581364417 1.779236657 0.486854157 0.376468936 #>  [13] 0.715406535 1.634078337 0.054522076 1.161650799 1.740578337 0.389893595 #>  [19] 1.538714709 0.031311347 0.865520787 1.488199902 0.731535368 0.111052248 #>  [25] 0.104213904 0.920199720 1.072970056 1.557923146 1.589685511 1.981304775 #>  [31] 1.790737280 1.535657507 2.257757940 0.805144341 1.425035142 1.489361200 #>  [37] 0.855622407 1.129081107 1.986525920 1.243347015 0.498346851 0.748741536 #>  [43] 0.880363834 1.199213789 0.218156034 1.496401694 2.301150689 0.904462346 #>  [49] 0.622586100 0.027112612 0.143570274 1.441423599 1.224283639 0.109178041 #>  [55] 1.073204962 0.088209298 1.315967949 2.806981476 1.963810759 1.595818003 #>  [61] 0.119306515 1.890562369 1.068519090 2.586166344 0.104238944 1.284283639 #>  [67] 2.502535164 0.714377910 0.361077210 0.004964891 1.190182265 0.269064444 #>  [73] 0.522665841 0.287735142 0.334417859 1.651955323 1.872898952 1.710504262 #>  [79] 0.860576242 0.312156724 2.056917661 1.268912438 1.552370417 1.492865920 #>  [85] 1.423811794 0.304902997 0.943973923 1.007302003 0.268239164 0.077852604 #>  [91] 0.397227200 1.574999201 2.439927322 1.469443326 0.268010248 0.082140833 #>  [97] 1.652266880 1.309732275 2.231149721 0.002849509 #>  #> [[2]] #>   [1] 0.3761254 1.0686362 0.9822736 0.1525924 0.8961379 2.2723739 2.0714944 #>   [8] 1.4591463 1.7583215 1.2206085 1.7216143 2.1029318 0.9041916 1.9164734 #>  [15] 1.6555303 1.5212896 0.1713064 1.6826830 0.4845723 1.0504444 0.5601090 #>  [22] 0.5565668 2.0394634 1.7641510 1.1248075 2.1042120 1.1213167 1.3636992 #>  [29] 0.3338557 1.8086985 1.3070499 1.9044063 0.1954925 2.1071527 0.2531252 #>  [36] 1.8888268 1.5903581 2.2373363 2.1912922 2.2373363 2.4847163 1.7504916 #>  [43] 0.8062721 0.9878200 1.8567469 1.6537348 1.8232545 1.8941021 2.0012004 #>  [50] 2.0299914 2.0463856 6.8750855 2.0265552 2.1496461 2.0326761 2.0341021 #>  [57] 2.2483376 2.2209414 1.4387582 2.1071983 2.2770486 2.3744691 1.9340489 #>  [64] 2.2387601 0.3949453 2.3930403 2.9662227 1.7043344 1.9380597 2.2208547 #>  [71] 1.8652574 2.0613709 2.6124837 2.2107478 2.7153936 1.8238502 2.3515942 #>  [78] 0.4086407 2.4985282 2.5847385 1.7424177 1.9049894 0.8165998 1.1007456 #>  [85] 3.2720013 2.5444853 2.7490399 1.9278361 2.6088437 1.0389593 2.3979256 #>  [92] 2.1731800 2.3825046 6.6641455 2.7777074 2.7732829 0.8122010 9.6228069 #>  [99] 1.0692105 2.0402506 #>  #> --- #> Prediction error SD for each test set sample: #> [[1]] #>   [1] 0.22083328 0.17054322 0.24153236 0.10511800 0.18976851 0.15932889 #>   [7] 0.23968000 0.11121425 0.16555398 0.24991955 0.21038877 0.36450188 #>  [13] 0.27819462 0.14341038 0.23339580 0.06099678 0.11001288 0.25935198 #>  [19] 0.27807784 0.12768484 0.39398892 0.13011395 0.25895425 0.41446740 #>  [25] 0.43185608 0.14108293 0.06591888 0.14312233 0.15275010 0.14042106 #>  [31] 0.13693109 0.25348023 0.12806220 0.17876048 0.17077105 1.34738600 #>  [37] 0.38800930 0.12158288 0.40278045 0.20050773 0.16542774 0.18043944 #>  [43] 0.19275518 0.10633509 0.13346924 0.25936149 0.13643158 0.21946839 #>  [49] 0.36433642 0.51283676 0.45020045 0.20389847 0.10552798 0.44284456 #>  [55] 0.22361746 0.28826144 0.31265941 0.28732216 0.21618896 0.22854181 #>  [61] 0.45194419 0.25694764 0.20225071 0.12415881 0.44521550 0.10552798 #>  [67] 0.30201059 0.21971458 0.43446870 0.30375351 0.38239730 0.53411721 #>  [73] 0.18460227 0.47744807 0.48077148 0.18288978 0.13848477 0.36567907 #>  [79] 0.28023087 0.46569848 0.15442597 0.42189035 0.18716995 0.26155751 #>  [85] 0.10627129 0.42819113 0.27761377 0.15701903 0.41389201 0.54313727 #>  [91] 0.22618794 0.33465260 0.12879614 1.58229002 0.25411121 0.20038697 #>  [97] 0.21076612 0.22063300 0.14627048 0.38272326 #>  #> [[2]] #>   [1] 0.49533369 0.21790280 0.21132863 0.50853899 0.12991737 0.21393065 #>   [7] 0.37625454 0.15044426 0.18557630 0.19134102 0.31622632 0.13592326 #>  [13] 0.31393839 0.18071248 0.16602440 0.12783851 0.41975925 0.24059637 #>  [19] 0.50266192 0.16308872 0.52542505 0.14443274 0.11613127 0.21903495 #>  [25] 0.22144174 0.10634338 0.23837872 0.87641235 0.26053470 0.16830009 #>  [31] 0.26533128 0.23475609 0.19978981 0.14754964 0.38769917 0.20811497 #>  [37] 0.19311046 0.21805196 0.11777125 0.21805196 0.20156731 0.22503077 #>  [43] 0.16719951 0.18271725 0.36899922 0.19970142 0.22984328 0.16888852 #>  [49] 0.15772463 0.14029879 0.38300912 6.37876528 0.19456094 0.05585043 #>  [55] 0.36750728 0.16888852 0.16055091 0.18454729 0.15758583 0.21966845 #>  [61] 0.19576505 0.36832384 0.29600309 0.15629316 0.11750815 0.14283549 #>  [67] 0.34619970 0.28154974 0.21481076 0.20259712 0.21311527 0.28408400 #>  [73] 0.31254966 0.15693373 0.14694409 0.21384984 0.14189051 0.15298061 #>  [79] 0.16228782 0.19340977 2.36340422 0.19607719 1.25635858 0.15177587 #>  [85] 0.32172107 0.11149303 0.07074771 0.21218978 0.21013675 0.14548796 #>  [91] 0.18829682 0.20021486 0.29721012 6.70765888 0.16740331 0.17198017 #>  [97] 0.25960303 7.99712131 0.16270696 0.10508260 #>  plot(ad)  # the interactive plot requires a HTML viewer if (FALSE) { plot(ad, type = \"interactive\") }"},{"path":"https://nanx.me/enpls/reference/enspls.fit.core.html","id":null,"dir":"Reference","previous_headings":"","what":"core function for enspls.fit ‚Äî enspls.fit.core","title":"core function for enspls.fit ‚Äî enspls.fit.core","text":"select best ncomp alpha, use fit complete training set. scale = TRUE","code":""},{"path":"https://nanx.me/enpls/reference/enspls.fit.core.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"core function for enspls.fit ‚Äî enspls.fit.core","text":"","code":"enspls.fit.core(xtmp, ytmp, maxcomp, cvfolds, alpha)"},{"path":"https://nanx.me/enpls/reference/enspls.fit.core.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"core function for enspls.fit ‚Äî enspls.fit.core","text":"coefficients","code":""},{"path":"https://nanx.me/enpls/reference/enspls.fit.html","id":null,"dir":"Reference","previous_headings":"","what":"Ensemble Sparse Partial Least Squares Regression ‚Äî enspls.fit","title":"Ensemble Sparse Partial Least Squares Regression ‚Äî enspls.fit","text":"Ensemble sparse partial least squares regression.","code":""},{"path":"https://nanx.me/enpls/reference/enspls.fit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ensemble Sparse Partial Least Squares Regression ‚Äî enspls.fit","text":"","code":"enspls.fit(   x,   y,   maxcomp = 5L,   cvfolds = 5L,   alpha = seq(0.2, 0.8, 0.2),   reptimes = 500L,   method = c(\"mc\", \"boot\"),   ratio = 0.8,   parallel = 1L )"},{"path":"https://nanx.me/enpls/reference/enspls.fit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ensemble Sparse Partial Least Squares Regression ‚Äî enspls.fit","text":"x Predictor matrix. y Response vector. maxcomp Maximum number components included within model. specified, use 5 default. cvfolds Number cross-validation folds used model automatic parameter selection, default 5. alpha Parameter (grid) controlling sparsity model. specified, default seq(0.2, 0.8, 0.2). reptimes Number models build Monte-Carlo resampling bootstrapping. method Resampling method. \"mc\" (Monte-Carlo resampling) \"boot\" (bootstrapping). Default \"mc\". ratio Sampling ratio used method = \"mc\". parallel Integer. Number CPU cores use. Default 1 (parallelized).","code":""},{"path":"https://nanx.me/enpls/reference/enspls.fit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ensemble Sparse Partial Least Squares Regression ‚Äî enspls.fit","text":"list containing sparse partial least squares model objects.","code":""},{"path":[]},{"path":"https://nanx.me/enpls/reference/enspls.fit.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Ensemble Sparse Partial Least Squares Regression ‚Äî enspls.fit","text":"Nan Xiao <https://nanx.>","code":""},{"path":"https://nanx.me/enpls/reference/enspls.fit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Ensemble Sparse Partial Least Squares Regression ‚Äî enspls.fit","text":"","code":"data(\"logd1k\") x <- logd1k$x y <- logd1k$y  set.seed(42) fit <- enspls.fit(   x, y,   reptimes = 5, maxcomp = 3,   alpha = c(0.3, 0.6, 0.9) ) print(fit) #> Coefficients of the Models by Ensemble Sparse Partial Least Squares #> --- #>                             [,1]         [,2]         [,3]          [,4] #> BalabanJ            -0.043615048 -0.070476160 -0.061234111 -0.0641194287 #> BertzCT             -0.010797407 -0.010380918 -0.014190111 -0.0198473677 #> Chi0                 0.034719388  0.031396910  0.031244743  0.0305194922 #> Chi0n                0.053961369  0.051389288  0.054495519  0.0524801055 #> Chi0v                0.053701577  0.051940514  0.053866466  0.0534589673 #> Chi1                 0.051776232  0.049156542  0.049348357  0.0492213616 #> Chi1n                0.070459184  0.069096237  0.072714905  0.0727060040 #> Chi1v                0.044723121  0.043485995  0.047373453  0.0501593866 #> Chi2n                0.044969369  0.049246878  0.053608909  0.0505554796 #> Chi2v               -0.007655968 -0.004618584 -0.001476135  0.0001540116 #> Chi3n                0.032584667  0.042587170  0.046107374  0.0415386369 #> Chi3v               -0.028277116 -0.022984653 -0.021257238 -0.0203092032 #> Chi4n                0.025069486  0.035056020  0.037250699  0.0377062265 #> Chi4v               -0.032725942 -0.028311655 -0.028345799 -0.0254204075 #> EState_VSA1         -0.145952322 -0.151990047 -0.160770607 -0.1525700022 #> EState_VSA10        -0.156900443 -0.168802906 -0.175239253 -0.1722320471 #> EState_VSA11        -0.127792171 -0.135963476 -0.143448807 -0.1529079518 #> EState_VSA2         -0.088764258 -0.081331379 -0.090132085 -0.0733057615 #> EState_VSA3          0.056790068  0.028421271  0.053648385  0.0386607294 #> EState_VSA4          0.063669587  0.074797750  0.074053361  0.0699041874 #> EState_VSA5          0.076840942  0.113331436  0.116703240  0.1013286787 #> EState_VSA6         -0.039520870 -0.054418432 -0.060441879 -0.0391363977 #> EState_VSA7          0.167588096  0.158416601  0.168272101  0.1618998057 #> EState_VSA8          0.009235939  0.004258386 -0.006701922 -0.0011150675 #> EState_VSA9          0.160639733  0.170068653  0.176254590  0.1714440988 #> ExactMolWt           0.050748220  0.048487236  0.047997890  0.0454753788 #> FractionCSP3        -0.002537413  0.016775756  0.014177552  0.0000000000 #> HallKierAlpha        0.019451372  0.000000000  0.000000000  0.0329693176 #> HeavyAtomCount       0.041665347  0.039779625  0.039215273  0.0389117918 #> HeavyAtomMolWt       0.049142955  0.047099309  0.045859934  0.0431088851 #> Ipc                  0.057240507  0.060688810  0.069024848  0.0694421064 #> Kappa1               0.038204987  0.032402483  0.032511070  0.0348008587 #> Kappa2               0.073454618  0.061351458  0.062538464  0.0699833246 #> Kappa3               0.068769152  0.053787212  0.048842217  0.0663792137 #> LabuteASA            0.050468473  0.048957140  0.047963605  0.0492392904 #> MaxAbsEStateIndex   -0.058201076 -0.046954270 -0.035764073 -0.0459235492 #> MaxEStateIndex      -0.058201076 -0.046954270 -0.035764073 -0.0459235492 #> MinAbsEStateIndex    0.050724276  0.044527421  0.044215313  0.0353840523 #> MinEStateIndex       0.080735399  0.074187812  0.072888633  0.0724654251 #> MolMR                0.064441013  0.060992387  0.061907090  0.0617893424 #> MolWt                0.050700489  0.048453503  0.047956295  0.0454522770 #> NumValenceElectrons  0.041901095  0.039028411  0.040413395  0.0398859275 #> PEOE_VSA1           -0.123885717 -0.111986458 -0.128388290 -0.1335502496 #> PEOE_VSA10           0.060135647  0.072095820  0.042111810  0.0611046246 #> PEOE_VSA11           0.027518533  0.000000000  0.054256529  0.0593889088 #> PEOE_VSA12          -0.070409371 -0.085305819 -0.078339953 -0.0775848326 #> PEOE_VSA13           0.071124088  0.073838570  0.087264498  0.0780882742 #> PEOE_VSA14          -0.059283402 -0.052884362 -0.059018175 -0.0639531460 #> PEOE_VSA2           -0.135631007 -0.136699485 -0.158100226 -0.1453559333 #> PEOE_VSA3           -0.015399543 -0.030536558 -0.023616048 -0.0258053476 #> PEOE_VSA4            0.089159585  0.082572159  0.101865179  0.1083556038 #> PEOE_VSA5            0.000000000  0.000000000  0.000000000  0.0000000000 #> PEOE_VSA6            0.252455157  0.257218113  0.264862957  0.3016795122 #> PEOE_VSA7            0.131757300  0.126559513  0.126970928  0.1081498903 #> PEOE_VSA8           -0.251591255 -0.244659553 -0.247195649 -0.2892456024 #> PEOE_VSA9            0.093581834  0.074355909  0.075437882  0.0803304497 #> SMR_VSA1            -0.045809417 -0.040299095 -0.050701107 -0.0532047159 #> SMR_VSA10            0.025671513  0.036747988  0.020329048  0.0236814814 #> SMR_VSA2             0.000000000  0.000000000  0.000000000  0.0000000000 #> SMR_VSA3            -0.196156845 -0.207343129 -0.205718468 -0.1978050051 #> SMR_VSA4             0.086514311  0.092000949  0.090979644  0.1135589734 #> SMR_VSA5             0.144746921  0.144103173  0.158124866  0.1643202372 #> SMR_VSA6            -0.086355302 -0.087439103 -0.084443620 -0.0980728660 #> SMR_VSA7             0.021803034  0.011365422 -0.006054515  0.0030932243 #> SMR_VSA9             0.164334759  0.153864976  0.180528755  0.1579959854 #> SlogP_VSA1          -0.045042683 -0.031673412 -0.087011109 -0.0688301411 #> SlogP_VSA10          0.119767503  0.115394919  0.103222595  0.0843745870 #> SlogP_VSA11          0.114675123  0.110717941  0.114633271  0.0846142758 #> SlogP_VSA12          0.103280911  0.095740332  0.101496317  0.1105220578 #> SlogP_VSA2          -0.207711269 -0.202806412 -0.200423733 -0.2013781453 #> SlogP_VSA3          -0.153164458 -0.151392486 -0.134059624 -0.1516867090 #> SlogP_VSA4           0.080989430  0.078481646  0.076140508  0.0736978562 #> SlogP_VSA5           0.174022630  0.173399624  0.191735830  0.2059561988 #> SlogP_VSA6           0.136169116  0.133023697  0.110695001  0.1313060684 #> SlogP_VSA7           0.077780951  0.068859412  0.083787537  0.0846865586 #> SlogP_VSA8           0.000000000  0.000000000  0.067225424  0.0563976493 #> TPSA                -0.220618737 -0.215277058 -0.233074352 -0.2170641606 #> VSA_EState10         0.093743521  0.084141143  0.095789368  0.1014189884 #> VSA_EState8          0.089001823  0.076620959  0.083263325  0.0777088146 #> VSA_EState9         -0.089786907 -0.081994686 -0.094262874 -0.0921319769 #>                             [,5] #> BalabanJ            -0.073894883 #> BertzCT             -0.007687107 #> Chi0                 0.032319300 #> Chi0n                0.052919408 #> Chi0v                0.056854869 #> Chi1                 0.048305879 #> Chi1n                0.069904194 #> Chi1v                0.051215760 #> Chi2n                0.048557618 #> Chi2v                0.005050211 #> Chi3n                0.038590608 #> Chi3v               -0.016430846 #> Chi4n                0.028264216 #> Chi4v               -0.022830716 #> EState_VSA1         -0.151918402 #> EState_VSA10        -0.163913222 #> EState_VSA11        -0.114487283 #> EState_VSA2         -0.074990673 #> EState_VSA3          0.027238867 #> EState_VSA4          0.081673528 #> EState_VSA5          0.119173308 #> EState_VSA6         -0.062270377 #> EState_VSA7          0.169929249 #> EState_VSA8         -0.008508467 #> EState_VSA9          0.169614152 #> ExactMolWt           0.053132588 #> FractionCSP3         0.000000000 #> HallKierAlpha        0.000000000 #> HeavyAtomCount       0.039291679 #> HeavyAtomMolWt       0.051773716 #> Ipc                  0.040666065 #> Kappa1               0.035993825 #> Kappa2               0.066238470 #> Kappa3               0.056805777 #> LabuteASA            0.050833015 #> MaxAbsEStateIndex   -0.039681288 #> MaxEStateIndex      -0.039681288 #> MinAbsEStateIndex    0.058219064 #> MinEStateIndex       0.090836706 #> MolMR                0.065637066 #> MolWt                0.053101413 #> NumValenceElectrons  0.038876330 #> PEOE_VSA1           -0.131939533 #> PEOE_VSA10           0.063132746 #> PEOE_VSA11           0.000000000 #> PEOE_VSA12          -0.064913191 #> PEOE_VSA13           0.062907184 #> PEOE_VSA14          -0.053503851 #> PEOE_VSA2           -0.123394883 #> PEOE_VSA3           -0.021138001 #> PEOE_VSA4            0.044285049 #> PEOE_VSA5            0.000000000 #> PEOE_VSA6            0.269371381 #> PEOE_VSA7            0.118261626 #> PEOE_VSA8           -0.241824460 #> PEOE_VSA9            0.084102621 #> SMR_VSA1            -0.042033373 #> SMR_VSA10            0.054396319 #> SMR_VSA2             0.000000000 #> SMR_VSA3            -0.223644660 #> SMR_VSA4             0.086073286 #> SMR_VSA5             0.152844318 #> SMR_VSA6            -0.100483543 #> SMR_VSA7             0.017135164 #> SMR_VSA9             0.142266776 #> SlogP_VSA1          -0.055774803 #> SlogP_VSA10          0.082997064 #> SlogP_VSA11          0.088648633 #> SlogP_VSA12          0.112241959 #> SlogP_VSA2          -0.204690587 #> SlogP_VSA3          -0.156349706 #> SlogP_VSA4           0.077452104 #> SlogP_VSA5           0.198178112 #> SlogP_VSA6           0.127587128 #> SlogP_VSA7           0.000000000 #> SlogP_VSA8           0.000000000 #> TPSA                -0.214509241 #> VSA_EState10         0.084382079 #> VSA_EState8          0.077845374 #> VSA_EState9         -0.085217775 predict(fit, newx = x) #>    [1] -0.21812478  0.12954374 -0.22836445  0.72266012 -0.65113402 -0.67093505 #>    [7]  0.61382930 -0.45282799  0.04079630 -0.06416978  0.79365384  0.12145376 #>   [13]  0.94735040 -0.31389461  0.71790961  0.86124578  0.11327756 -0.75816147 #>   [19] -0.14327956  0.50469871  1.13848250  0.13954518  1.82076630  1.01476461 #>   [25]  0.61597016  0.56588233  1.24949794  0.78184040  0.07023968 -0.32560716 #>   [31] -0.24545686  0.91085846  0.13738773 -0.53752609  0.63554844  0.51586274 #>   [37]  0.85954447 -0.34395002 -0.34058240  0.78555752 -0.37085733  0.90052950 #>   [43]  0.61609279 -0.07109915 -0.02722697  0.10367080  0.33241944  0.22370098 #>   [49] -0.18123400 -0.06948561 -0.04929142 -0.02625836  1.41948475  1.05831350 #>   [55]  0.06012419  0.29274788  0.08855050  1.19392450 -0.03963956 -0.03859852 #>   [61]  1.55698261 -0.48803906  1.02916294  1.73890966  1.87076311  1.37864665 #>   [67]  0.35687448  1.29920486  0.83581663  0.56929089  0.03734973 -0.08841345 #>   [73]  0.64824435  0.48630316  0.60329239  0.88549938  0.78232696  2.06775912 #>   [79]  0.16023107  0.21624428  0.65925599  0.28744740  0.35358473  0.02157764 #>   [85]  0.01210593  1.43460139  0.34611658  1.93062414  1.47011892  0.32332532 #>   [91] -2.75216196 -0.09239403  1.93228703  1.18745000  0.92896916  0.07936765 #>   [97]  0.57574740  3.06349960  1.57459052  0.69355876  2.03717644  2.32170182 #>  [103]  2.37872621  0.55675433  0.73749034  0.30514075  2.52839101  0.81552872 #>  [109]  1.86824783  2.05754038  1.89541525  0.95149315  2.16796051  1.50048941 #>  [115] -0.74991974  1.47102994  0.78846108  0.66757694  2.02478816  2.05613690 #>  [121]  2.15884081  0.96573182  1.45225310  2.03433230  0.69620378  0.67020676 #>  [127]  0.60352076  0.56561324  0.67297570  0.92097974  1.72925411  0.41515221 #>  [133]  0.69226657  1.00435210  3.18574778  1.65347736  2.00896410  0.88105080 #>  [139]  1.87852077  1.50276630  2.01475491  1.50202430  2.34787066  2.29547931 #>  [145]  1.73951951  1.87369573  0.10181703  1.60406984  2.63131115  1.67713625 #>  [151]  2.37758761  1.16420952  0.09014479  0.79038294  0.60273235  2.97783189 #>  [157]  1.55249758  1.27479322 -0.08177682  2.06224907  1.71203469  0.40430446 #>  [163]  1.03784594 -0.05585030  2.90963566  2.25324795  3.27452491  1.81465273 #>  [169]  0.06877732  3.14362520  0.96626930  0.09014479  2.25611724  1.53916617 #>  [175]  0.96493001  0.55419333  0.61360396  3.08944475  0.87403643  0.72478628 #>  [181]  1.04688102  1.16477997  2.57168201  0.42632452  2.01035298  0.76253155 #>  [187]  3.09110582  1.90929431  2.15958110  0.78591758  2.46880186  2.84296075 #>  [193]  1.28366233  2.85257488  2.68044169  3.39255631  2.26836661  2.24079808 #>  [199]  2.49018036  1.93415899  2.83879092  2.11303966  1.51774075  3.03877760 #>  [205]  2.59849402  0.65488715  2.72806244  1.17884939  0.17669859  2.15719871 #>  [211]  0.15514763  2.42822603  2.42822603  1.25667525  0.31329578  1.14045628 #>  [217]  0.95532579  1.63389965  2.17121808  1.29001363  1.76115996  1.25941899 #>  [223]  1.42414047  2.83953430  2.67740439  2.95166975  1.68227772  3.40071089 #>  [229]  1.62936448  0.85561182  3.01245972  0.92991875  0.77365439  1.96666960 #>  [235]  3.00024939  3.28503639  0.61310141  1.94201300  2.40353511  1.19232925 #>  [241] -0.09550114  1.23995297  2.63687470  1.19868790  1.04309578  1.62212216 #>  [247]  2.92205143  2.95577383  2.18272258  2.64482555  0.48114460  2.04582163 #>  [253]  1.87306332 -0.48062134  1.20106309  2.72936162  0.64610937  3.27270717 #>  [259]  0.28593226  1.39754699  0.18411421  2.40169555  0.81423011  1.58414644 #>  [265]  1.76375833  1.14836361  3.37076887  0.78232687  3.61412792  1.86824079 #>  [271]  0.86233170  2.10578513  1.97974267  1.79262966  1.33904094  3.48216209 #>  [277]  1.36733642  0.88696460  2.18699788  0.60802340  1.81861812 -0.33457214 #>  [283]  1.15571465  0.56439084  2.53973482  1.20095316  2.89299092  0.71214121 #>  [289]  1.78068714  2.27025387  2.06220738  1.08875116  3.34335307  1.80834886 #>  [295]  1.26597645  1.26006793  2.14407649  1.21207573 -2.75006981  3.17121785 #>  [301]  2.52956041  0.61595411  3.22833031  3.14958916  3.82252458  3.07133976 #>  [307]  1.13923521  1.03993387  3.44022105  1.73357169  3.91978792  2.90468063 #>  [313]  2.70803946  0.82956052  4.01176722  1.94481665  1.67873024  3.08522677 #>  [319]  2.73714144  3.38938308  1.78975322  1.85503315  2.68328479  1.50043339 #>  [325]  1.52681426  1.94564739  2.24680402  1.37832637  1.31035711  0.92777893 #>  [331]  1.34967920  2.23747659  1.66338801  2.54412817  1.93949832  3.84327323 #>  [337]  2.34041959  1.62665557  1.20543992  1.64058558  3.19045356  2.85175173 #>  [343]  3.27029989 -0.29061181  3.47756378  3.22449876  1.87360099  2.63433780 #>  [349]  2.34452145  1.95996065  1.92284893  0.51518892  2.13868280  1.86215339 #>  [355]  1.94798224  4.67569714  1.61282318  1.34482648  1.75862888  1.65518633 #>  [361]  1.91067522  2.04404224  3.39635454  1.87228118  1.90006205  2.13868280 #>  [367]  0.15782769  3.43364346  1.57178256  4.63798128  2.23237403  2.04628161 #>  [373]  3.46524125  2.02383227  1.80821689  2.07126869  1.63056250  2.54983769 #>  [379]  0.10987772  1.83567901  1.25431766  2.48009915  1.41915723  1.52965346 #>  [385]  2.15499145  3.70594696 -0.28194095  3.32677095  1.87966418  2.10558633 #>  [391]  3.99745324  1.55812086  1.99856187  3.89588884  3.77808186  3.42453266 #>  [397]  1.81677761  2.19658826  1.77536759  1.51930238  2.05827236  3.10030703 #>  [403]  2.92326945  2.10587800  2.29381554  0.91106401  1.79888417  2.67948613 #>  [409]  3.04804372  3.50287327  2.86365029  2.10789329  3.58978806  1.72754828 #>  [415]  1.96350768  1.82919623  3.86178071  1.35734911  1.98331961  3.55699494 #>  [421]  2.33318865  0.33378792  1.81271763  1.87268863  0.07939267  1.59116606 #>  [427]  4.67063598  5.25186747  5.80784312  2.14972593  2.28486539  2.09380743 #>  [433]  4.78504057  1.62716609  3.70046592  1.86838471  2.20729621  1.61991796 #>  [439]  1.77143505  1.61991796  2.38545261  2.21020362  3.74839551  3.40623513 #>  [445]  1.88220243  2.74557869  2.45981970  2.48980577  2.28032701  2.49807785 #>  [451]  4.23368979  2.52989391  2.59780943  2.45304004  3.75197506  2.48980577 #>  [457]  2.49824529  2.55615346  3.33953104  1.93195431  2.52501761  2.94709171 #>  [463]  3.38900481  2.74764906  2.33555991  1.96482182  4.66543938  2.92528097 #>  [469]  3.12002394  2.29980988  3.19779522  2.83128396  4.53536185  3.38698261 #>  [475]  1.76854000  3.11151338  2.79375543 -0.86677482  3.06584623  2.12109409 #>  [481]  4.20163913  3.57745841  4.83825320  4.28016048  2.17954723  2.25650264 #>  [487]  1.96389737  1.12702691  2.42451663  4.62654854  3.47534571  3.23082867 #>  [493]  2.25615596  2.35024310  1.95823140  2.43676940  0.32568673  4.12169719 #>  [499]  4.92582143  4.14635067  4.43675970  3.11677301  3.34475616  3.26580201 #>  [505]  2.98354412  5.06105114  1.46841915  5.38613437  3.75547063  4.25938458 #>  [511] -0.10976488  3.03492810  3.69930400  3.14044768  3.12086214  4.15293048 #>  [517]  2.98127075  3.99768217 -0.35398504  2.97702915  5.20639521  3.67008569 #>  [523]  4.35526891  4.34339153  4.60734460  1.02229384  4.23555332  3.49136278 #>  [529]  6.23164106 -0.73213442  6.65914329  3.98747765  5.24720195  3.52351064 #>  [535]  6.83949436  0.07215180 -1.06854684  0.16100615  0.44678247  0.43315286 #>  [541] -0.10079426  3.06433482  4.61374803  4.26642723  3.75676158  4.13011292 #>  [547]  4.05504812  5.23447514  0.54320694  0.26358850  0.47923280  1.20245467 #>  [553] -0.33440371  3.60480349  5.03799222  4.17442486  0.94032030 -0.84196436 #>  [559]  1.17200396  2.84595264  0.82206120  0.37274485  2.62865316  1.54254898 #>  [565]  0.34930257  3.35566735  2.61556407  0.72745670  3.65243665  2.46128995 #>  [571]  2.04239169  3.09122324  1.93178301  0.72266765  3.19908188  1.71153471 #>  [577]  3.23303968  2.44735657 -0.34046193  2.52795400  2.31663297  1.02046448 #>  [583]  0.30053738  0.03439801  1.44552645 -0.28297008 -0.05359628  1.38017913 #>  [589]  0.79243316  2.65741366  2.19443573  1.56331062  0.02061230  3.80736290 #>  [595]  1.43335855  1.16154812  4.33192061  0.57137921  0.87993187  4.60455368 #>  [601]  1.37004326  1.42974011  3.19568580  1.35103257  1.36075138  1.74941627 #>  [607]  0.04450224  1.68423209  1.39919257  2.87960962  1.83390217  1.66876834 #>  [613]  1.76391927  0.58754943  3.33107676  3.24056100  1.90729682  1.50235623 #>  [619]  3.37939931  1.48313360  1.52958825  2.13012720  2.03571818  2.37949339 #>  [625]  3.09800295  1.50962024  0.22642826  1.24724197  1.53492749  1.19980790 #>  [631]  1.99926854  1.88464256  2.39671056  2.92585700  1.79840483  2.68684025 #>  [637]  2.69582679  3.86711302  3.23477431  2.63882016  2.85708426  1.98060621 #>  [643]  1.82458996  2.55023124  2.81165120  3.48882850  1.61761933  3.95978480 #>  [649]  2.25949158  2.13363580  1.20988843  2.22934956  1.98518542  2.08235507 #>  [655]  2.22223289  2.57025667  1.28315518  2.57460140  3.23886008  2.08637661 #>  [661]  2.68321245  1.07853455  2.61303559  3.48569156  3.84252931  3.52689545 #>  [667]  2.62372010  2.47400812  2.55102202  2.28441657  1.78789095  3.00505167 #>  [673]  1.42512225  2.12897264  2.02097509  2.12943268  1.87190663  2.51703177 #>  [679]  1.84668372  1.62795235  2.61682582  2.07902538  1.49666236  1.78954124 #>  [685]  1.43065456  1.19936785  2.26893635  2.42806920  2.50375078  2.78842705 #>  [691]  1.67792977  2.38307478  2.11808710  2.39554277  2.97456240  2.24011090 #>  [697]  3.42408655  2.07366955  1.89735276  2.20297747  2.48659082  2.69900519 #>  [703]  2.06677043  2.21659692  2.84902153  3.58248775  3.57745650  3.58951649 #>  [709]  3.47544471  2.92680732  3.39805023  5.14890527  3.04034041  2.22302725 #>  [715]  4.38766610  5.03225521  5.29484031  1.02325019  2.69245784  2.49343203 #>  [721]  2.23769200  1.49479959  1.41587049  1.44922585  1.85351325  1.37985474 #>  [727]  1.49030317  0.83513612  3.36371068  4.23638545  4.00612353  4.21052304 #>  [733]  3.88632749  3.94353482  3.71756999  3.33760044  3.42221209  3.54601607 #>  [739]  4.22028005  4.18488502 -0.16212599  4.04014889  3.46776328  2.95417121 #>  [745]  3.76126857  3.46775817  0.51817085  2.89209189  2.80727717  3.62248373 #>  [751]  3.86104976 -0.18241765  0.93921904  3.70525847  1.63443089  2.43718262 #>  [757]  2.90832587  2.33495255  2.30508579  1.76630774  1.98572361  1.80773511 #>  [763]  0.60768891  1.24569432  2.61209995  3.52387960  2.64435353  2.06969196 #>  [769]  2.21997924  1.72627403  3.35042252  2.10889268  2.09549945  2.88778738 #>  [775]  2.88468560  3.59390191  2.45624807  3.37754538  2.62880307  2.61171299 #>  [781]  1.29638245  3.40204416  2.60158561  1.20316935  1.71267140  3.08726162 #>  [787]  3.25355282  2.28729865  1.03321808  1.13218134  2.38850702  1.18475727 #>  [793]  2.57776595  2.13003670  1.10652215  1.84150657  2.62334347  3.01581911 #>  [799]  2.90756502  1.25945797  2.70314847  2.11654158  1.83729565  2.19720590 #>  [805]  2.69223950  0.25382039  3.37072235  2.72318454  2.79339183  2.82372254 #>  [811]  3.28577166  3.25679310  3.57511360  2.54612189  3.60093209  2.25260092 #>  [817]  2.30215625  1.83709314  3.41978388  4.01353323  3.41660117  4.37468597 #>  [823]  0.29674498  3.57935835  3.70495425  3.98561637  3.45428191  3.66086337 #>  [829]  3.27497089  3.14702539  4.23455078  1.76968264  3.18460459  2.81532365 #>  [835]  3.90984128  3.90256934  4.00893968  3.04089864  3.46683945  3.50718720 #>  [841]  3.40930517  4.95646668  3.27164935  1.58848984  2.90261349  4.09175507 #>  [847]  3.81362927  3.88564651  2.81371095  4.53622110  3.78021124  4.15543848 #>  [853]  4.32904620  3.95981489  3.99602330  3.83388189  2.76998912  4.58693927 #>  [859]  4.42723853  3.97654608  4.21212374  4.68451308  1.81950652  4.10562453 #>  [865]  4.57932529  5.15001640  5.57831159  5.57807989  5.09739506  5.01455994 #>  [871]  0.10896540  0.12535700  0.06271390  0.36057485  0.43108839  0.93320995 #>  [877]  0.16181753 -1.01411812 -0.10253743  0.30790409 -0.49951206  1.59514054 #>  [883]  2.08502953  2.40905181  2.82254816  4.84046308  3.74823508  1.30450749 #>  [889]  1.01459294  1.50277127  1.62491853  1.71717767  0.36370044  2.26131572 #>  [895]  1.88923418  0.29393852  0.33754865  0.59342459  1.60689411  1.22826065 #>  [901]  1.60922010  1.66156897  1.88934216  1.51557287  2.25085324  1.27091542 #>  [907]  0.54446153  2.84840128  2.53119334  0.45189876  0.39820538  0.89873987 #>  [913]  0.61200794  0.67950270  0.81035050 -0.27761592 -0.18237907 -0.14164102 #>  [919]  0.03506333  0.30686449  0.56680784  0.91550647 -0.60697486 -0.40537849 #>  [925] -0.36208492 -0.31864564 -0.05437869  2.73532574  1.93536313  0.62171751 #>  [931]  0.98490465  3.80736290  0.53687998  1.69084326  4.65621160  4.28264442 #>  [937]  0.46110121 -0.34046193  1.50065578  2.04239169  1.72653109  2.44735657 #>  [943]  4.72436140  4.17442486  1.07618295  1.35734911  0.19316557  2.31663297 #>  [949]  0.80594103  2.14192424  1.93178301  2.78284665  1.03068374  1.01076709 #>  [955]  0.21041549  1.05094298  0.05928069  1.90677231  0.52526021  1.56331062 #>  [961]  1.12259152  1.32515959  1.17843465  2.06983829  2.14192424  0.93414463 #>  [967]  2.20041325  3.58129049  2.97850838  3.03047152  0.69043958  0.59915148 #>  [973]  3.27879775  0.80955659  0.18395801  2.54807064  2.73532574  1.15388766 #>  [979]  1.99028693  0.33342454  0.50063027  0.36747631  1.17422988  4.80446578 #>  [985]  0.82812425  0.14862912  0.26265082  0.21386016  2.53847394 -0.03859852 #>  [991]  4.17015248  2.85175173  0.34930257  2.71290613  2.21749003  1.15036197 #>  [997]  0.58697193  1.29162488  0.21005844  0.75058928"},{"path":"https://nanx.me/enpls/reference/enspls.fs.core.html","id":null,"dir":"Reference","previous_headings":"","what":"core function for enspls.fs ‚Äî enspls.fs.core","title":"core function for enspls.fs ‚Äî enspls.fs.core","text":"select best ncomp alpha cross-validation, use fit complete training set. scale = FALSE","code":""},{"path":"https://nanx.me/enpls/reference/enspls.fs.core.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"core function for enspls.fs ‚Äî enspls.fs.core","text":"","code":"enspls.fs.core(xtmp, ytmp, maxcomp, cvfolds, alpha)"},{"path":"https://nanx.me/enpls/reference/enspls.fs.core.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"core function for enspls.fs ‚Äî enspls.fs.core","text":"fitted coefficients","code":""},{"path":"https://nanx.me/enpls/reference/enspls.fs.html","id":null,"dir":"Reference","previous_headings":"","what":"Ensemble Sparse Partial Least Squares for Measuring Feature Importance ‚Äî enspls.fs","title":"Ensemble Sparse Partial Least Squares for Measuring Feature Importance ‚Äî enspls.fs","text":"Measuring feature importance ensemble sparse partial least squares.","code":""},{"path":"https://nanx.me/enpls/reference/enspls.fs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ensemble Sparse Partial Least Squares for Measuring Feature Importance ‚Äî enspls.fs","text":"","code":"enspls.fs(   x,   y,   maxcomp = 5L,   cvfolds = 5L,   alpha = seq(0.2, 0.8, 0.2),   reptimes = 500L,   method = c(\"mc\", \"boot\"),   ratio = 0.8,   parallel = 1L )"},{"path":"https://nanx.me/enpls/reference/enspls.fs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ensemble Sparse Partial Least Squares for Measuring Feature Importance ‚Äî enspls.fs","text":"x Predictor matrix. y Response vector. maxcomp Maximum number components included within model. specified, use 5 default. cvfolds Number cross-validation folds used model automatic parameter selection, default 5. alpha Parameter (grid) controlling sparsity model. specified, default seq(0.2, 0.8, 0.2). reptimes Number models build Monte-Carlo resampling bootstrapping. method Resampling method. \"mc\" (Monte-Carlo resampling) \"boot\" (bootstrapping). Default \"mc\". ratio Sampling ratio used method = \"mc\". parallel Integer. Number CPU cores use. Default 1 (parallelized).","code":""},{"path":"https://nanx.me/enpls/reference/enspls.fs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ensemble Sparse Partial Least Squares for Measuring Feature Importance ‚Äî enspls.fs","text":"list containing two components: variable.importance - vector variable importance coefficient.matrix - original coefficient matrix","code":""},{"path":[]},{"path":"https://nanx.me/enpls/reference/enspls.fs.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Ensemble Sparse Partial Least Squares for Measuring Feature Importance ‚Äî enspls.fs","text":"Nan Xiao <https://nanx.>","code":""},{"path":"https://nanx.me/enpls/reference/enspls.fs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Ensemble Sparse Partial Least Squares for Measuring Feature Importance ‚Äî enspls.fs","text":"","code":"data(\"logd1k\") x <- logd1k$x y <- logd1k$y  set.seed(42) fs <- enspls.fs(x, y, reptimes = 5, maxcomp = 2) print(fs, nvar = 10) #> Variable Importance by Ensemble Sparse Partial Least Squares #> --- #>                     Importance #> Chi1                 117.01631 #> HeavyAtomCount        79.79144 #> Chi1n                 67.20777 #> MolMR                 63.52919 #> EState_VSA10          61.04311 #> LabuteASA             57.09849 #> NumValenceElectrons   54.98234 #> EState_VSA8           53.69517 #> EState_VSA1           53.21826 #> Chi0v                 51.59224 plot(fs, nvar = 10)  plot(fs, type = \"boxplot\", limits = c(0.05, 0.95), nvar = 10) #> Warning: Removed 6 rows containing non-finite values (stat_boxplot)."},{"path":"https://nanx.me/enpls/reference/enspls.od.core.html","id":null,"dir":"Reference","previous_headings":"","what":"core function for enspls.od ‚Äî enspls.od.core","title":"core function for enspls.od ‚Äî enspls.od.core","text":"select best ncomp alpha cross-validation, use fit complete training set, predict test set. scale = TRUE","code":""},{"path":"https://nanx.me/enpls/reference/enspls.od.core.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"core function for enspls.od ‚Äî enspls.od.core","text":"","code":"enspls.od.core(x.sample, y.sample, x.remain, y.remain, maxcomp, cvfolds, alpha)"},{"path":"https://nanx.me/enpls/reference/enspls.od.core.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"core function for enspls.od ‚Äî enspls.od.core","text":"error vector predicted y real y","code":""},{"path":"https://nanx.me/enpls/reference/enspls.od.html","id":null,"dir":"Reference","previous_headings":"","what":"Ensemble Sparse Partial Least Squares for Outlier Detection ‚Äî enspls.od","title":"Ensemble Sparse Partial Least Squares for Outlier Detection ‚Äî enspls.od","text":"Outlier detection ensemble sparse partial least squares.","code":""},{"path":"https://nanx.me/enpls/reference/enspls.od.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ensemble Sparse Partial Least Squares for Outlier Detection ‚Äî enspls.od","text":"","code":"enspls.od(   x,   y,   maxcomp = 5L,   cvfolds = 5L,   alpha = seq(0.2, 0.8, 0.2),   reptimes = 500L,   method = c(\"mc\", \"boot\"),   ratio = 0.8,   parallel = 1L )"},{"path":"https://nanx.me/enpls/reference/enspls.od.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ensemble Sparse Partial Least Squares for Outlier Detection ‚Äî enspls.od","text":"x Predictor matrix. y Response vector. maxcomp Maximum number components included within model. specified, use 5 default. cvfolds Number cross-validation folds used model automatic parameter selection, default 5. alpha Parameter (grid) controlling sparsity model. specified, default seq(0.2, 0.8, 0.2). reptimes Number models build Monte-Carlo resampling bootstrapping. method Resampling method. \"mc\" (Monte-Carlo resampling) \"boot\" (bootstrapping). Default \"mc\". ratio Sampling ratio used method = \"mc\". parallel Integer. Number CPU cores use. Default 1 (parallelized).","code":""},{"path":"https://nanx.me/enpls/reference/enspls.od.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ensemble Sparse Partial Least Squares for Outlier Detection ‚Äî enspls.od","text":"list containing four components: error.mean - error mean samples (absolute value) error.median - error median samples error.sd - error sd samples predict.error.matrix - original prediction error matrix","code":""},{"path":"https://nanx.me/enpls/reference/enspls.od.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Ensemble Sparse Partial Least Squares for Outlier Detection ‚Äî enspls.od","text":"maximize probablity observation can selected test set (thus prediction uncertainty can measured), please try setting large reptimes.","code":""},{"path":[]},{"path":"https://nanx.me/enpls/reference/enspls.od.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Ensemble Sparse Partial Least Squares for Outlier Detection ‚Äî enspls.od","text":"Nan Xiao <https://nanx.>","code":""},{"path":"https://nanx.me/enpls/reference/enspls.od.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Ensemble Sparse Partial Least Squares for Outlier Detection ‚Äî enspls.od","text":"","code":"data(\"logd1k\") x <- logd1k$x y <- logd1k$y  set.seed(42) od <- enspls.od(   x, y,   reptimes = 5, maxcomp = 3,   alpha = c(0.3, 0.6, 0.9) ) plot(od, prob = 0.1)  plot(od, criterion = \"sd\", sdtimes = 1)"},{"path":"https://nanx.me/enpls/reference/logd1k.html","id":null,"dir":"Reference","previous_headings":"","what":"logD7.4 Data for 1,000 Compounds ‚Äî logd1k","title":"logD7.4 Data for 1,000 Compounds ‚Äî logd1k","text":"Distribution coefficients pH 7.4 (logD7.4) dataset Wang et, al.","code":""},{"path":"https://nanx.me/enpls/reference/logd1k.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"logD7.4 Data for 1,000 Compounds ‚Äî logd1k","text":"","code":"data(logd1k)"},{"path":"https://nanx.me/enpls/reference/logd1k.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"logD7.4 Data for 1,000 Compounds ‚Äî logd1k","text":"list 2 components: x - data frame 1,000 rows (samples) 80 columns (predictors) y - numeric vector length 1,000 (response) first 1000 compounds original dataset selected.","code":""},{"path":"https://nanx.me/enpls/reference/logd1k.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"logD7.4 Data for 1,000 Compounds ‚Äî logd1k","text":"dataset contains distribution coefficients pH 7.4 (logD7.4) 1,000 compounds, 80 molecular descriptors computed RDKit.","code":""},{"path":"https://nanx.me/enpls/reference/logd1k.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"logD7.4 Data for 1,000 Compounds ‚Äî logd1k","text":"Jian-Bing Wang, Dong-Sheng Cao, Min-Feng Zhu, Yong-Huan Yun, Nan Xiao, Yi-Zeng Liang. \"silico evaluation logD7.4 comparison prediction methods.\" Journal Chemometrics 29, . 7 (2015): 389--398.","code":""},{"path":"https://nanx.me/enpls/reference/logd1k.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"logD7.4 Data for 1,000 Compounds ‚Äî logd1k","text":"","code":"data(logd1k) str(logd1k) #> List of 2 #>  $ x:'data.frame':\t1000 obs. of  80 variables: #>   ..$ BalabanJ           : num [1:1000] 1.95 1.97 2.97 2.05 2.72 ... #>   ..$ BertzCT            : num [1:1000] 883 782 343 1134 437 ... #>   ..$ Chi0               : num [1:1000] 16.84 15.9 9.85 19.84 12.13 ... #>   ..$ Chi0n              : num [1:1000] 13.09 13.2 7.53 15.41 9.49 ... #>   ..$ Chi0v              : num [1:1000] 13.09 14.02 7.53 15.41 9.49 ... #>   ..$ Chi1               : num [1:1000] 11.56 10.39 6.16 13.47 7.56 ... #>   ..$ Chi1n              : num [1:1000] 8.13 7.38 4.16 9.11 5.22 ... #>   ..$ Chi1v              : num [1:1000] 8.13 8.78 4.16 9.11 5.22 ... #>   ..$ Chi2n              : num [1:1000] 6.37 6 2.88 6.89 3.51 ... #>   ..$ Chi2v              : num [1:1000] 6.37 7.96 2.88 6.89 3.51 ... #>   ..$ Chi3n              : num [1:1000] 4.61 4.16 1.97 5.13 2.37 ... #>   ..$ Chi3v              : num [1:1000] 4.61 6.08 1.97 5.13 2.37 ... #>   ..$ Chi4n              : num [1:1000] 3.31 2.77 1.15 3.67 1.41 ... #>   ..$ Chi4v              : num [1:1000] 3.31 4.11 1.15 3.67 1.41 ... #>   ..$ EState_VSA1        : num [1:1000] 17.21 10.21 0 17.21 5.43 ... #>   ..$ EState_VSA10       : num [1:1000] 19.09 8.42 9.9 19.09 14.7 ... #>   ..$ EState_VSA11       : num [1:1000] 0 0 0 0 0 4.39 0 0 0 0 ... #>   ..$ EState_VSA2        : num [1:1000] 17 0 17.8 10.9 11.7 ... #>   ..$ EState_VSA3        : num [1:1000] 24.3 13.1 18.7 24.3 25.2 ... #>   ..$ EState_VSA4        : num [1:1000] 25.9 29.6 0 30.4 0 ... #>   ..$ EState_VSA5        : num [1:1000] 12.26 14.17 6.07 6.2 6.07 ... #>   ..$ EState_VSA6        : num [1:1000] 6.07 7.05 17.69 10.63 17.69 ... #>   ..$ EState_VSA7        : num [1:1000] 9.47 38.49 0 36.09 6.92 ... #>   ..$ EState_VSA8        : num [1:1000] 5.32 9.88 0 5.32 5.32 ... #>   ..$ EState_VSA9        : num [1:1000] 0 0 5.11 0 0 ... #>   ..$ ExactMolWt         : num [1:1000] 331 322 183 381 224 ... #>   ..$ FractionCSP3       : num [1:1000] 0.412 0.467 0.444 0.238 0.455 0.474 0.529 0.4 0.5 0.286 ... #>   ..$ HallKierAlpha      : num [1:1000] -2.41 -1.57 -1.29 -3.19 -1.78 -2.61 -1.41 -1.78 -1.29 -1.25 ... #>   ..$ HeavyAtomCount     : int [1:1000] 24 22 13 28 16 27 24 15 14 10 ... #>   ..$ HeavyAtomMolWt     : num [1:1000] 313 300 170 361 208 ... #>   ..$ Ipc                : num [1:1000] 672747 115307 826 2613182 3288 ... #>   ..$ Kappa1             : num [1:1000] 15.14 15.33 9.79 18.19 12.29 ... #>   ..$ Kappa2             : num [1:1000] 5.59 5.57 4.09 7.09 5.34 ... #>   ..$ Kappa3             : num [1:1000] 2.45 2.6 2.09 3.03 2.85 ... #>   ..$ LabuteASA          : num [1:1000] 137 131 76.1 160.4 93.7 ... #>   ..$ MaxAbsEStateIndex  : num [1:1000] 14.6 12.3 11 14.9 11.2 ... #>   ..$ MaxEStateIndex     : num [1:1000] 14.6 12.3 11 14.9 11.2 ... #>   ..$ MinAbsEStateIndex  : num [1:1000] 0.137 0.502 0.104 0.055 0.042 0.045 0.385 0.208 0.253 0.162 ... #>   ..$ MinEStateIndex     : num [1:1000] -1.275 -3.361 -0.363 -1.333 -0.397 ... #>   ..$ MolMR              : num [1:1000] 88.5 89.5 48.8 106.3 60.4 ... #>   ..$ MolWt              : num [1:1000] 331 322 183 381 224 ... #>   ..$ NumValenceElectrons: int [1:1000] 126 120 72 144 88 144 132 82 78 54 ... #>   ..$ PEOE_VSA1          : num [1:1000] 19.89 9.88 14.78 19.89 14.99 ... #>   ..$ PEOE_VSA10         : num [1:1000] 11.4 0 0 11.4 0 ... #>   ..$ PEOE_VSA11         : num [1:1000] 0 0 5.75 0 5.75 ... #>   ..$ PEOE_VSA12         : num [1:1000] 5.43 0 5.43 5.43 11.34 ... #>   ..$ PEOE_VSA13         : num [1:1000] 0 0 0 0 0 ... #>   ..$ PEOE_VSA14         : num [1:1000] 5.97 10.21 0 5.97 0 ... #>   ..$ PEOE_VSA2          : num [1:1000] 4.79 4.3 4.79 4.79 9.59 ... #>   ..$ PEOE_VSA3          : num [1:1000] 9.19 0 0 9.19 0 ... #>   ..$ PEOE_VSA4          : num [1:1000] 0 12.7 0 0 0 ... #>   ..$ PEOE_VSA5          : num [1:1000] 0 0 0 0 0 0 0 0 0 0 ... #>   ..$ PEOE_VSA6          : num [1:1000] 0 0 0 18.2 0 ... #>   ..$ PEOE_VSA7          : num [1:1000] 25 44.3 13.3 30.7 13.8 ... #>   ..$ PEOE_VSA8          : num [1:1000] 43.8 43.8 25.4 43.4 31.8 ... #>   ..$ PEOE_VSA9          : num [1:1000] 11.2 5.69 5.69 11.2 5.69 ... #>   ..$ SMR_VSA1           : num [1:1000] 14.29 8.42 10.21 14.29 9.9 ... #>   ..$ SMR_VSA10          : num [1:1000] 22.56 26.8 0 22.56 5.91 ... #>   ..$ SMR_VSA2           : num [1:1000] 0 0 0 0 0 0 0 0 0 0 ... #>   ..$ SMR_VSA3           : num [1:1000] 9.88 14.19 4.57 9.88 9.88 ... #>   ..$ SMR_VSA4           : num [1:1000] 0 0 0 0 0 ... #>   ..$ SMR_VSA5           : num [1:1000] 18.88 6.42 19.89 6.92 26.81 ... #>   ..$ SMR_VSA6           : num [1:1000] 31.08 45.08 6.61 31.08 6.54 ... #>   ..$ SMR_VSA7           : num [1:1000] 39.9 30 28.2 69.8 28.2 ... #>   ..$ SMR_VSA9           : num [1:1000] 0 0 5.75 5.69 5.75 ... #>   ..$ SlogP_VSA1         : num [1:1000] 15.64 4.3 5.43 15.64 10.75 ... #>   ..$ SlogP_VSA10        : num [1:1000] 10.08 5.69 0 10.08 0 ... #>   ..$ SlogP_VSA11        : num [1:1000] 0 0 5.75 0 5.75 5.75 0 5.75 5.75 5.75 ... #>   ..$ SlogP_VSA12        : num [1:1000] 0 0 0 0 0 0 0 0 0 0 ... #>   ..$ SlogP_VSA2         : num [1:1000] 41.8 63.4 21.4 41.8 22.1 ... #>   ..$ SlogP_VSA3         : num [1:1000] 0 16.63 6.54 0 11.34 ... #>   ..$ SlogP_VSA4         : num [1:1000] 5.82 0 6.92 12.74 6.92 ... #>   ..$ SlogP_VSA5         : num [1:1000] 29.24 5.56 12.12 15.92 19.04 ... #>   ..$ SlogP_VSA6         : num [1:1000] 23.1 24.4 17.1 47.4 17.1 ... #>   ..$ SlogP_VSA7         : num [1:1000] 0 0 0 0 0 0 0 0 0 0 ... #>   ..$ SlogP_VSA8         : num [1:1000] 10.9 10.9 0 16.6 0 ... #>   ..$ TPSA               : num [1:1000] 74.6 59.6 62.5 74.6 71.3 ... #>   ..$ VSA_EState10       : num [1:1000] 0 -3.36 0 0 0 ... #>   ..$ VSA_EState8        : num [1:1000] 16.43 27.48 1.74 16.54 1.69 ... #>   ..$ VSA_EState9        : num [1:1000] 46.1 26 34.8 55 42 ... #>  $ y: num [1:1000] -0.96 -0.92 -0.9 -0.83 -0.82 -0.79 -0.78 -0.77 -0.77 -0.77 ..."},{"path":"https://nanx.me/enpls/reference/plot.cv.enpls.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot cv.enpls object ‚Äî plot.cv.enpls","title":"Plot cv.enpls object ‚Äî plot.cv.enpls","text":"Plot cv.enpls object","code":""},{"path":"https://nanx.me/enpls/reference/plot.cv.enpls.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot cv.enpls object ‚Äî plot.cv.enpls","text":"","code":"# S3 method for cv.enpls plot(x, xlim = NULL, ylim = NULL, alpha = 0.8, main = NULL, ...)"},{"path":"https://nanx.me/enpls/reference/plot.cv.enpls.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot cv.enpls object ‚Äî plot.cv.enpls","text":"x object class cv.enpls. xlim x Vector length 2 - x axis limits plot. ylim y Vector length 2 - y axis limits plot. alpha alpha transparency value points, real number (0, 1]. main Plot title, used currently. ... Additional graphical parameters, used currently.","code":""},{"path":[]},{"path":"https://nanx.me/enpls/reference/plot.cv.enpls.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot cv.enpls object ‚Äî plot.cv.enpls","text":"Nan Xiao <https://nanx.>","code":""},{"path":"https://nanx.me/enpls/reference/plot.cv.enpls.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot cv.enpls object ‚Äî plot.cv.enpls","text":"","code":"data(\"alkanes\") x <- alkanes$x y <- alkanes$y  set.seed(42) cvfit <- cv.enpls(x, y, reptimes = 10) #> Beginning fold 1  #> Beginning fold 2  #> Beginning fold 3  #> Beginning fold 4  #> Beginning fold 5  plot(cvfit)"},{"path":"https://nanx.me/enpls/reference/plot.cv.enspls.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot cv.enspls object ‚Äî plot.cv.enspls","title":"Plot cv.enspls object ‚Äî plot.cv.enspls","text":"Plot cv.enspls object","code":""},{"path":"https://nanx.me/enpls/reference/plot.cv.enspls.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot cv.enspls object ‚Äî plot.cv.enspls","text":"","code":"# S3 method for cv.enspls plot(x, xlim = NULL, ylim = NULL, alpha = 0.8, main = NULL, ...)"},{"path":"https://nanx.me/enpls/reference/plot.cv.enspls.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot cv.enspls object ‚Äî plot.cv.enspls","text":"x object class cv.enspls. xlim x Vector length 2 - x axis limits plot. ylim y Vector length 2 - y axis limits plot. alpha alpha transparency value points, real number (0, 1]. main Plot title, used currently. ... Additional graphical parameters, used currently.","code":""},{"path":[]},{"path":"https://nanx.me/enpls/reference/plot.cv.enspls.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot cv.enspls object ‚Äî plot.cv.enspls","text":"Nan Xiao <https://nanx.>","code":""},{"path":"https://nanx.me/enpls/reference/plot.cv.enspls.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot cv.enspls object ‚Äî plot.cv.enspls","text":"","code":"# This example takes one minute to run if (FALSE) { data(\"logd1k\") x <- logd1k$x y <- logd1k$y  set.seed(42) cvfit <- cv.enspls(x, y, reptimes = 10) plot(cvfit) }"},{"path":"https://nanx.me/enpls/reference/plot.enpls.ad.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot enpls.ad object ‚Äî plot.enpls.ad","title":"Plot enpls.ad object ‚Äî plot.enpls.ad","text":"Plot enpls.ad object","code":""},{"path":"https://nanx.me/enpls/reference/plot.enpls.ad.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot enpls.ad object ‚Äî plot.enpls.ad","text":"","code":"# S3 method for enpls.ad plot(x, type = c(\"static\", \"interactive\"), main = NULL, ...)"},{"path":"https://nanx.me/enpls/reference/plot.enpls.ad.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot enpls.ad object ‚Äî plot.enpls.ad","text":"x object class enpls.ad. type Plot type. Can \"static\" \"interactive\". main Plot title, used currently. ... Additional graphical parameters, used currently.","code":""},{"path":[]},{"path":"https://nanx.me/enpls/reference/plot.enpls.ad.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot enpls.ad object ‚Äî plot.enpls.ad","text":"Nan Xiao <https://nanx.>","code":""},{"path":"https://nanx.me/enpls/reference/plot.enpls.ad.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot enpls.ad object ‚Äî plot.enpls.ad","text":"","code":"data(\"alkanes\") x <- alkanes$x y <- alkanes$y  # training set x.tr <- x[1:100, ] y.tr <- y[1:100]  # two test sets x.te <- list(   \"test.1\" = x[101:150, ],   \"test.2\" = x[151:207, ] ) y.te <- list(   \"test.1\" = y[101:150],   \"test.2\" = y[151:207] )  set.seed(42) ad <- enpls.ad(   x.tr, y.tr, x.te, y.te,   space = \"variable\", method = \"mc\",   ratio = 0.9, reptimes = 50 ) plot(ad)  # the interactive plot requires a HTML viewer if (FALSE) { plot(ad, type = \"interactive\") }"},{"path":"https://nanx.me/enpls/reference/plot.enpls.fs.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot enpls.fs object ‚Äî plot.enpls.fs","title":"Plot enpls.fs object ‚Äî plot.enpls.fs","text":"Plot enpls.fs object","code":""},{"path":"https://nanx.me/enpls/reference/plot.enpls.fs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot enpls.fs object ‚Äî plot.enpls.fs","text":"","code":"# S3 method for enpls.fs plot(   x,   nvar = NULL,   type = c(\"dotplot\", \"boxplot\"),   limits = c(0, 1),   main = NULL,   ... )"},{"path":"https://nanx.me/enpls/reference/plot.enpls.fs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot enpls.fs object ‚Äî plot.enpls.fs","text":"x object class enpls.fs. nvar Number top variables show. Ignored sort = FALSE. type Plot type. \"dotplot\" \"boxplot\". limits Vector length 2. Set boxplot limits (quantile) remove extreme outlier coefficients. main Plot title, used currently. ... Additional graphical parameters, used currently.","code":""},{"path":[]},{"path":"https://nanx.me/enpls/reference/plot.enpls.fs.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot enpls.fs object ‚Äî plot.enpls.fs","text":"Nan Xiao <https://nanx.>","code":""},{"path":"https://nanx.me/enpls/reference/plot.enpls.fs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot enpls.fs object ‚Äî plot.enpls.fs","text":"","code":"data(\"alkanes\") x <- alkanes$x y <- alkanes$y  set.seed(42) fs <- enpls.fs(x, y, reptimes = 50) plot(fs)  plot(fs, nvar = 10)  plot(fs, type = \"boxplot\")  plot(fs, type = \"boxplot\", limits = c(0.05, 0.95)) #> Warning: Removed 106 rows containing non-finite values (stat_boxplot)."},{"path":"https://nanx.me/enpls/reference/plot.enpls.od.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot enpls.od object ‚Äî plot.enpls.od","title":"Plot enpls.od object ‚Äî plot.enpls.od","text":"Plot enpls.od object","code":""},{"path":"https://nanx.me/enpls/reference/plot.enpls.od.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot enpls.od object ‚Äî plot.enpls.od","text":"","code":"# S3 method for enpls.od plot(   x,   criterion = c(\"quantile\", \"sd\"),   prob = 0.05,   sdtimes = 3L,   alpha = 1,   main = NULL,   ... )"},{"path":"https://nanx.me/enpls/reference/plot.enpls.od.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot enpls.od object ‚Äî plot.enpls.od","text":"x object class enpls.od. criterion Criterion classified outlier, can \"quantile\" \"sd\". prob Quantile probability cut-value. sdtimes Times standard deviation cut-value. alpha alpha transparency value points, real number (0, 1]. main Plot title. ... Additional graphical parameters plot.","code":""},{"path":[]},{"path":"https://nanx.me/enpls/reference/plot.enpls.od.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot enpls.od object ‚Äî plot.enpls.od","text":"Nan Xiao <https://nanx.>","code":""},{"path":"https://nanx.me/enpls/reference/plot.enpls.od.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot enpls.od object ‚Äî plot.enpls.od","text":"","code":"data(\"alkanes\") x <- alkanes$x y <- alkanes$y  set.seed(42) od <- enpls.od(x, y, reptimes = 50) plot(od, criterion = \"quantile\")  plot(od, criterion = \"sd\")"},{"path":"https://nanx.me/enpls/reference/plot.enspls.ad.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot enspls.ad object ‚Äî plot.enspls.ad","title":"Plot enspls.ad object ‚Äî plot.enspls.ad","text":"Plot enspls.ad object","code":""},{"path":"https://nanx.me/enpls/reference/plot.enspls.ad.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot enspls.ad object ‚Äî plot.enspls.ad","text":"","code":"# S3 method for enspls.ad plot(x, type = c(\"static\", \"interactive\"), main = NULL, ...)"},{"path":"https://nanx.me/enpls/reference/plot.enspls.ad.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot enspls.ad object ‚Äî plot.enspls.ad","text":"x object class enspls.ad. type Plot type. Can \"static\" \"interactive\". main Plot title. ... Additional graphical parameters plot.","code":""},{"path":[]},{"path":"https://nanx.me/enpls/reference/plot.enspls.ad.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot enspls.ad object ‚Äî plot.enspls.ad","text":"Nan Xiao <https://nanx.>","code":""},{"path":"https://nanx.me/enpls/reference/plot.enspls.ad.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot enspls.ad object ‚Äî plot.enspls.ad","text":"","code":"data(\"logd1k\") # remove low variance variables x <- logd1k$x[, -c(17, 52, 59)] y <- logd1k$y  # training set x.tr <- x[1:300, ] y.tr <- y[1:300]  # two test sets x.te <- list(   \"test.1\" = x[301:400, ],   \"test.2\" = x[401:500, ] ) y.te <- list(   \"test.1\" = y[301:400],   \"test.2\" = y[401:500] )  set.seed(42) ad <- enspls.ad(   x.tr, y.tr, x.te, y.te,   maxcomp = 3, alpha = c(0.3, 0.6, 0.9),   space = \"variable\", method = \"mc\",   ratio = 0.8, reptimes = 10 ) plot(ad)  # the interactive plot requires a HTML viewer if (FALSE) { plot(ad, type = \"interactive\") }"},{"path":"https://nanx.me/enpls/reference/plot.enspls.fs.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot enspls.fs object ‚Äî plot.enspls.fs","title":"Plot enspls.fs object ‚Äî plot.enspls.fs","text":"Plot enspls.fs object","code":""},{"path":"https://nanx.me/enpls/reference/plot.enspls.fs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot enspls.fs object ‚Äî plot.enspls.fs","text":"","code":"# S3 method for enspls.fs plot(   x,   nvar = NULL,   type = c(\"dotplot\", \"boxplot\"),   limits = c(0, 1),   main = NULL,   ... )"},{"path":"https://nanx.me/enpls/reference/plot.enspls.fs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot enspls.fs object ‚Äî plot.enspls.fs","text":"x object class enspls.fs. nvar Number top variables show. Ignored sort = FALSE. type Plot type, can \"dotplot\" \"boxplot\". limits Vector length 2. Set boxplot limits (quantile) remove extreme outlier coefficients. main Plot title, used currently. ... Additional graphical parameters, used currently.","code":""},{"path":[]},{"path":"https://nanx.me/enpls/reference/plot.enspls.fs.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot enspls.fs object ‚Äî plot.enspls.fs","text":"Nan Xiao <https://nanx.>","code":""},{"path":"https://nanx.me/enpls/reference/plot.enspls.fs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot enspls.fs object ‚Äî plot.enspls.fs","text":"","code":"data(\"logd1k\") x <- logd1k$x y <- logd1k$y  set.seed(42) fs <- enspls.fs(x, y, reptimes = 5, maxcomp = 2) plot(fs, nvar = 10)  plot(fs, type = \"boxplot\", limits = c(0.05, 0.95), nvar = 10) #> Warning: Removed 6 rows containing non-finite values (stat_boxplot)."},{"path":"https://nanx.me/enpls/reference/plot.enspls.od.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot enspls.od object ‚Äî plot.enspls.od","title":"Plot enspls.od object ‚Äî plot.enspls.od","text":"Plot enspls.od object","code":""},{"path":"https://nanx.me/enpls/reference/plot.enspls.od.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot enspls.od object ‚Äî plot.enspls.od","text":"","code":"# S3 method for enspls.od plot(   x,   criterion = c(\"quantile\", \"sd\"),   prob = 0.05,   sdtimes = 3L,   alpha = 1,   main = NULL,   ... )"},{"path":"https://nanx.me/enpls/reference/plot.enspls.od.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot enspls.od object ‚Äî plot.enspls.od","text":"x object class enspls.od. criterion Criterion classified outlier, can \"quantile\" \"sd\". prob Quantile probability cut-value. sdtimes Times standard deviation cut-value. alpha alpha transparency value points, real number (0, 1]. main Plot title. ... Additional graphical parameters plot.","code":""},{"path":[]},{"path":"https://nanx.me/enpls/reference/plot.enspls.od.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot enspls.od object ‚Äî plot.enspls.od","text":"Nan Xiao <https://nanx.>","code":""},{"path":"https://nanx.me/enpls/reference/plot.enspls.od.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot enspls.od object ‚Äî plot.enspls.od","text":"","code":"data(\"logd1k\") x <- logd1k$x y <- logd1k$y  set.seed(42) od <- enspls.od(x, y, reptimes = 4, maxcomp = 2) plot(od, criterion = \"quantile\", prob = 0.1)  plot(od, criterion = \"sd\", sdtimes = 1)"},{"path":"https://nanx.me/enpls/reference/predict.enpls.fit.html","id":null,"dir":"Reference","previous_headings":"","what":"Make Predictions from a Fitted Ensemble Partial Least Squares Model ‚Äî predict.enpls.fit","title":"Make Predictions from a Fitted Ensemble Partial Least Squares Model ‚Äî predict.enpls.fit","text":"Make predictions new data fitted enpls.fit object.","code":""},{"path":"https://nanx.me/enpls/reference/predict.enpls.fit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make Predictions from a Fitted Ensemble Partial Least Squares Model ‚Äî predict.enpls.fit","text":"","code":"# S3 method for enpls.fit predict(object, newx, method = c(\"mean\", \"median\"), ...)"},{"path":"https://nanx.me/enpls/reference/predict.enpls.fit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make Predictions from a Fitted Ensemble Partial Least Squares Model ‚Äî predict.enpls.fit","text":"object object class enpls.fit. newx New data predict . method Use \"mean\" \"median\" create final prediction. ... Additional parameters predict.","code":""},{"path":"https://nanx.me/enpls/reference/predict.enpls.fit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make Predictions from a Fitted Ensemble Partial Least Squares Model ‚Äî predict.enpls.fit","text":"numeric vector containing predicted values.","code":""},{"path":[]},{"path":"https://nanx.me/enpls/reference/predict.enpls.fit.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Make Predictions from a Fitted Ensemble Partial Least Squares Model ‚Äî predict.enpls.fit","text":"Nan Xiao <https://nanx.>","code":""},{"path":"https://nanx.me/enpls/reference/predict.enpls.fit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make Predictions from a Fitted Ensemble Partial Least Squares Model ‚Äî predict.enpls.fit","text":"","code":"data(\"alkanes\") x <- alkanes$x y <- alkanes$y  set.seed(42) fit <- enpls.fit(x, y, reptimes = 50) y.pred <- predict(fit, newx = x) plot(y, y.pred, xlim = range(y), ylim = range(y)) abline(a = 0L, b = 1L)  y.pred.med <- predict(fit, newx = x, method = \"median\") plot(y, y.pred.med, xlim = range(y), ylim = range(y)) abline(a = 0L, b = 1L)"},{"path":"https://nanx.me/enpls/reference/predict.enspls.fit.html","id":null,"dir":"Reference","previous_headings":"","what":"Make Predictions from a Fitted Sparse Ensemble Partial Least Squares Model ‚Äî predict.enspls.fit","title":"Make Predictions from a Fitted Sparse Ensemble Partial Least Squares Model ‚Äî predict.enspls.fit","text":"Make predictions new data fitted enspls.fit object.","code":""},{"path":"https://nanx.me/enpls/reference/predict.enspls.fit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make Predictions from a Fitted Sparse Ensemble Partial Least Squares Model ‚Äî predict.enspls.fit","text":"","code":"# S3 method for enspls.fit predict(object, newx, method = c(\"mean\", \"median\"), ...)"},{"path":"https://nanx.me/enpls/reference/predict.enspls.fit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make Predictions from a Fitted Sparse Ensemble Partial Least Squares Model ‚Äî predict.enspls.fit","text":"object object class enspls.fit. newx New data predict . method Use \"mean\" \"median\" create final prediction. ... Additional parameters predict.","code":""},{"path":"https://nanx.me/enpls/reference/predict.enspls.fit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make Predictions from a Fitted Sparse Ensemble Partial Least Squares Model ‚Äî predict.enspls.fit","text":"numeric vector containing predicted values.","code":""},{"path":[]},{"path":"https://nanx.me/enpls/reference/predict.enspls.fit.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Make Predictions from a Fitted Sparse Ensemble Partial Least Squares Model ‚Äî predict.enspls.fit","text":"Nan Xiao <https://nanx.>","code":""},{"path":"https://nanx.me/enpls/reference/predict.enspls.fit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make Predictions from a Fitted Sparse Ensemble Partial Least Squares Model ‚Äî predict.enspls.fit","text":"","code":"data(\"logd1k\") x <- logd1k$x y <- logd1k$y  set.seed(42) fit <- enspls.fit(x, y, reptimes = 5, maxcomp = 2) y.pred <- predict(fit, newx = x) plot(y, y.pred, xlim = range(y), ylim = range(y)) abline(a = 0L, b = 1L)  y.pred.med <- predict(fit, newx = x, method = \"median\") plot(y, y.pred.med, xlim = range(y), ylim = range(y)) abline(a = 0L, b = 1L)"},{"path":"https://nanx.me/enpls/reference/print.cv.enpls.html","id":null,"dir":"Reference","previous_headings":"","what":"Print cv.enpls Object ‚Äî print.cv.enpls","title":"Print cv.enpls Object ‚Äî print.cv.enpls","text":"Print cv.enpls object.","code":""},{"path":"https://nanx.me/enpls/reference/print.cv.enpls.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print cv.enpls Object ‚Äî print.cv.enpls","text":"","code":"# S3 method for cv.enpls print(x, ...)"},{"path":"https://nanx.me/enpls/reference/print.cv.enpls.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print cv.enpls Object ‚Äî print.cv.enpls","text":"x object class cv.enpls. ... Additional parameters print.","code":""},{"path":[]},{"path":"https://nanx.me/enpls/reference/print.cv.enpls.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Print cv.enpls Object ‚Äî print.cv.enpls","text":"Nan Xiao <https://nanx.>","code":""},{"path":"https://nanx.me/enpls/reference/print.cv.enpls.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print cv.enpls Object ‚Äî print.cv.enpls","text":"","code":"data(\"alkanes\") x <- alkanes$x y <- alkanes$y  set.seed(42) cvfit <- cv.enpls(x, y, reptimes = 10) #> Beginning fold 1  #> Beginning fold 2  #> Beginning fold 3  #> Beginning fold 4  #> Beginning fold 5  cvfit #> Cross Validation Result for Ensemble Partial Least Squares #> --- #> RMSE = 3.6481 #> MAE = 2.515792 #> Rsquare = 0.999961"},{"path":"https://nanx.me/enpls/reference/print.cv.enspls.html","id":null,"dir":"Reference","previous_headings":"","what":"Print cv.enspls Object ‚Äî print.cv.enspls","title":"Print cv.enspls Object ‚Äî print.cv.enspls","text":"Print cv.enspls object.","code":""},{"path":"https://nanx.me/enpls/reference/print.cv.enspls.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print cv.enspls Object ‚Äî print.cv.enspls","text":"","code":"# S3 method for cv.enspls print(x, ...)"},{"path":"https://nanx.me/enpls/reference/print.cv.enspls.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print cv.enspls Object ‚Äî print.cv.enspls","text":"x object class cv.enspls. ... Additional parameters print.","code":""},{"path":[]},{"path":"https://nanx.me/enpls/reference/print.cv.enspls.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Print cv.enspls Object ‚Äî print.cv.enspls","text":"Nan Xiao <https://nanx.>","code":""},{"path":"https://nanx.me/enpls/reference/print.cv.enspls.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print cv.enspls Object ‚Äî print.cv.enspls","text":"","code":"# This example takes one minute to run if (FALSE) { data(\"logd1k\") x <- logd1k$x y <- logd1k$y  set.seed(42) cvfit <- cv.enspls(x, y, reptimes = 10) print(cvfit) }"},{"path":"https://nanx.me/enpls/reference/print.enpls.ad.html","id":null,"dir":"Reference","previous_headings":"","what":"Print enpls.ad Object ‚Äî print.enpls.ad","title":"Print enpls.ad Object ‚Äî print.enpls.ad","text":"Print enpls.ad object.","code":""},{"path":"https://nanx.me/enpls/reference/print.enpls.ad.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print enpls.ad Object ‚Äî print.enpls.ad","text":"","code":"# S3 method for enpls.ad print(x, ...)"},{"path":"https://nanx.me/enpls/reference/print.enpls.ad.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print enpls.ad Object ‚Äî print.enpls.ad","text":"x object class enpls.ad. ... Additional parameters print.","code":""},{"path":[]},{"path":"https://nanx.me/enpls/reference/print.enpls.ad.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Print enpls.ad Object ‚Äî print.enpls.ad","text":"Nan Xiao <https://nanx.>","code":""},{"path":"https://nanx.me/enpls/reference/print.enpls.ad.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print enpls.ad Object ‚Äî print.enpls.ad","text":"","code":"data(\"alkanes\") x <- alkanes$x y <- alkanes$y  # training set x.tr <- x[1:100, ] y.tr <- y[1:100]  # two test sets x.te <- list(   \"test.1\" = x[101:150, ],   \"test.2\" = x[151:207, ] ) y.te <- list(   \"test.1\" = y[101:150],   \"test.2\" = y[151:207] )  set.seed(42) ad <- enpls.ad(   x.tr, y.tr, x.te, y.te,   space = \"variable\", method = \"mc\",   ratio = 0.9, reptimes = 50 ) ad #> Model Applicability Domain Evaluation by ENPLS #> --- #> Absolute mean prediction error for each training set sample: #>   [1]  1.143535290  0.266577478  0.075668338  1.131416799  0.103337151 #>   [6]  1.062594738  0.023209713  0.700521215  0.468235064  0.673075458 #>  [11]  0.089540802  0.401803647  3.489442389  0.627893821  0.222504312 #>  [16]  3.221940312  0.894591039  0.096840929  0.792751494  1.236641601 #>  [21]  0.001584416  0.339331094  0.609968357  0.286792550  0.471706657 #>  [26]  0.691666512  0.219584091  0.687592096  0.737439448  0.692377554 #>  [31]  1.577144836  0.747749279  1.237863334  0.791600110  0.830273570 #>  [36]  1.187375782  0.416252943  1.386693400  1.209712475  1.110794824 #>  [41]  2.140243438  2.399984105  1.428537318  1.055821644  1.517716920 #>  [46]  1.590342977  0.706991956  0.914251843  1.973206057  1.939137967 #>  [51]  1.671019536  0.091573195  3.972970145  0.955507259  0.415111831 #>  [56]  0.931788087  2.508476277  2.759110197  1.600821991  0.404102398 #>  [61]  0.963920649  3.568594663 14.075284215  5.965384961  0.849943296 #>  [66]  1.141524697  2.287166025  1.359689933  1.504079464  2.344010556 #>  [71]  0.629486701  1.049468037  1.268353928  2.135248556  1.616434750 #>  [76]  2.119979067  0.269447046  1.830802524  1.784506205  0.637978496 #>  [81]  1.039257790  0.413567656  5.704702300  0.307698959  2.670416866 #>  [86]  0.691503674  2.185178349  2.001917127  1.529464596  0.374889846 #>  [91]  1.283773190  3.774151143  2.857702789  4.220121496  6.504020855 #>  [96]  1.762052847  3.572747930  1.679601429  1.776315457  1.140765375 #> --- #> Prediction error SD for each training set sample: #>   [1] 0.6632510 1.0747613 0.6228398 0.3909717 0.6276894 0.2926764 0.4835952 #>   [8] 0.2839815 0.3790893 0.2795853 0.2936881 0.2066487 0.7131719 0.3041280 #>  [15] 0.1152717 0.5529949 0.2850841 0.1779433 0.4157889 0.3811892 0.2819642 #>  [22] 0.2720929 0.4005652 0.3226532 0.2209190 0.4454591 0.3876323 0.2040831 #>  [29] 0.4670555 0.4136547 0.3290377 0.1708938 0.4155863 0.1579950 0.1666879 #>  [36] 0.2073140 0.5295909 0.4394888 0.3281213 0.2408321 0.4505811 0.1982922 #>  [43] 0.2434650 0.6775080 0.5017698 0.4212760 0.5761228 0.3315790 0.2303946 #>  [50] 0.2397685 0.3025108 0.1862496 0.3459049 0.3907732 0.2002375 0.3334323 #>  [57] 0.2800619 0.2489747 0.4342413 0.3122039 0.3108747 0.1818030 0.3497313 #>  [64] 0.1975296 0.2514031 0.5769985 0.2638713 0.2774563 0.3553371 0.3684134 #>  [71] 0.2015989 0.2458771 0.2710750 0.2248169 0.3510436 0.4010946 0.5246710 #>  [78] 0.5445661 0.2722141 0.3716945 0.3971595 0.1601688 0.2975253 0.2694639 #>  [85] 0.1819710 0.3799211 0.1644366 0.4944335 0.1960038 0.3795414 0.3421108 #>  [92] 0.3548105 0.6303994 0.5065287 0.2099194 0.1725128 0.2470902 0.4008990 #>  [99] 0.1955731 0.4749818 #> --- #> Absolute mean prediction error for each test set sample: #> [[1]] #>  [1]  1.65850329  0.38377988  1.67378051  0.05017774  4.39395510  0.10970090 #>  [7]  0.80312305  2.00112429  3.30352901  2.39702103  2.49110746  2.57201965 #> [13]  3.40522658  1.66881500  0.18343101  2.68753476  3.38755741  0.45423958 #> [19]  2.05966181 11.37567054 12.46448491 10.29298124 13.73648078  7.69634489 #> [25]  9.60840997 61.52340940 12.87208410 11.51112678 11.74810709  6.98371976 #> [31]  3.21827472 12.00306032 12.10550647 12.84024755  4.05105088 12.90499545 #> [37] 11.90523171  4.25191528  2.50046794 12.77903509  6.03664168 11.53383212 #> [43]  4.61455483  2.44420160 12.70236566  7.43903336  3.71605764  2.86329295 #> [49]  7.64329131  7.18551395 #>  #> [[2]] #>  [1]  3.4543176  2.4871241 11.3411211 10.5407448  0.6383966  2.5794987 #>  [7]  1.3770894  7.8395977  1.2465770  0.4117513 36.6052600 31.2661905 #> [13] 35.1483035 31.4823204 35.0510448 29.4380334 40.1687529 34.5458973 #> [19] 23.2587832 77.0500127 28.5465786 23.0528668 25.4344415 34.8137632 #> [25] 30.6215780 22.2266004 19.7494606  0.2107381  0.8672154  3.3958982 #> [31]  2.7987705  2.3278965  1.7741967  0.7847005  6.0851973  1.5202727 #> [37]  5.0502711 46.4425419  0.7740034  1.3427991  3.9044839  1.0792567 #> [43]  4.9727341  0.7154980  3.8805581 15.7410126  3.2326191 14.0260989 #> [49]  2.5844449  6.2848282 12.2295047 10.8379296 11.2892066 12.5826622 #> [55]  7.0478476 12.8170478 11.4202239 #>  #> --- #> Prediction error SD for each test set sample: #> [[1]] #>  [1]   0.3435652   0.4202025   0.2808564   0.4494669   0.5071351   0.6865988 #>  [7]   0.2336136   0.4024350   0.4419844   0.6074236   0.4874105   0.6118569 #> [13]   0.5662671   0.7046519   0.5319585   0.6922911   0.6478133   0.7873733 #> [19]   0.9220921   9.1907515   8.9865306   8.7179049   8.6820109   7.3214560 #> [25]   6.3265450 100.7454688   8.0020688   8.0038258   7.6711559   8.0594401 #> [31]   7.9284787   7.0233280   7.5094411   7.8319137   7.8441271   7.8257605 #> [37]   7.4775638   7.7852585   7.7400842   6.8966159   7.6805341   7.6719323 #> [43]   7.7588242   7.7021805   7.6900458   7.6252742   7.6487169   7.5851825 #> [49]   7.6648408   7.4873894 #>  #> [[2]] #>  [1]   7.6684654   7.5798389   7.6259424   7.2935751   7.9845870   7.5090642 #>  [7]   7.5267845   6.6601347   7.4769873   7.5602014  23.1031563  19.9672830 #> [13]  20.0716499  21.5910269  20.7678312  21.0867461  21.3929124  21.3106238 #> [19]  21.2005159  88.4988937  21.1606533  21.1062933  20.6057930  20.9342275 #> [25]  20.9589177  20.7578514  20.7028630   0.2224852   0.6708101   0.5494225 #> [31]   0.3928201   0.5017335   0.3570617   0.3469072   0.5381546   0.1064181 #> [37]   0.3604482 105.9905919   0.2603238   0.3310628   0.2514998   0.1795206 #> [43]   0.3312007   0.3384145   0.7288403   8.9270759   7.4587752   8.2109699 #> [49]   7.9356333   7.9803569   7.9508740   6.9278026   7.8746692   7.7807236 #> [55]   7.9334114   7.9810786   7.7136865 #>"},{"path":"https://nanx.me/enpls/reference/print.enpls.fit.html","id":null,"dir":"Reference","previous_headings":"","what":"Print Fitted Ensemble Partial Least Squares Object ‚Äî print.enpls.fit","title":"Print Fitted Ensemble Partial Least Squares Object ‚Äî print.enpls.fit","text":"Print coefficients model enpls.fit object.","code":""},{"path":"https://nanx.me/enpls/reference/print.enpls.fit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print Fitted Ensemble Partial Least Squares Object ‚Äî print.enpls.fit","text":"","code":"# S3 method for enpls.fit print(x, ...)"},{"path":"https://nanx.me/enpls/reference/print.enpls.fit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print Fitted Ensemble Partial Least Squares Object ‚Äî print.enpls.fit","text":"x object class enpls.fit. ... Additional parameters print.","code":""},{"path":[]},{"path":"https://nanx.me/enpls/reference/print.enpls.fit.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Print Fitted Ensemble Partial Least Squares Object ‚Äî print.enpls.fit","text":"Nan Xiao <https://nanx.>","code":""},{"path":"https://nanx.me/enpls/reference/print.enpls.fit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print Fitted Ensemble Partial Least Squares Object ‚Äî print.enpls.fit","text":"","code":"data(\"alkanes\") x <- alkanes$x y <- alkanes$y  set.seed(42) fit <- enpls.fit(x, y, reptimes = 50) fit #> Coefficients of the Models by Ensemble Partial Least Squares #> --- #>                      [,1]          [,2]          [,3]        [,4]         [,5] #> (Intercept)  1.901653e-02 -7.461177e-02     0.1320574    0.105323    0.1189126 #> Chi.P.0     -5.302831e+02 -3.709869e+02  -852.3098957   68.358062  115.5502167 #> Chi.P.1     -9.877642e+02 -9.960761e+02 -1391.6437775   68.890118  124.8610935 #> Chi.P.2      3.344548e+03  3.392111e+03  4469.4736167   64.969199   84.1563591 #> Chi.P.3      2.250893e+03  1.993993e+03  2335.5658948  120.729705  399.2724789 #> Chi.P.4     -3.033318e+00 -3.401355e+00    -4.4700237  -11.705109   -6.1356472 #> Chi.P.5      4.320044e+02  3.237402e+02   425.8828099   52.259068  156.8700697 #> Chi.C.3      5.289307e+01  2.757648e+01    48.1259790   14.367189   34.1522027 #> Chi.PC.4    -2.427201e+02 -2.760505e+02  -256.4640646   -2.679697    6.0979538 #> Kappa.1      4.021214e+03  3.223933e+03  3323.0228511   18.537083 -120.2020096 #> Kappa.2     -1.007953e+03 -1.193883e+03 -1383.2809608   67.772246  170.0821127 #> Kappa.3     -3.481420e+03 -2.950207e+03 -3225.3498579   86.710334   54.4025624 #> Kappa.4     -5.171513e+02 -5.381593e+02  -809.0088168   69.178124  119.3115652 #> Estate.1    -8.626383e+00 -2.293245e+00   -56.1669690 -108.767493 -137.3001764 #> Estate.2    -6.626015e+01 -4.053109e+01   -18.9511325   86.858681  103.4123814 #> Estate.3     1.982168e+01  1.226001e+01    11.2770661  -14.105775    4.1117473 #> MEDV.11     -5.954853e+02 -4.625003e+02  -507.8391153  -26.291676  -32.0770690 #> MEDV.12     -1.913626e+03 -1.627944e+03 -1658.9580775 -107.150598 -229.1887505 #> MEDV.13      1.633341e+01  6.451224e+01    78.6593595   29.799666   -2.5664118 #> MEDV.22     -1.430168e+03 -1.059318e+03 -1136.3537020   83.880364 -414.7353433 #> MEDV.23     -4.781812e+01 -7.608106e+01   -59.3065681  -22.365890  -13.6481712 #> MEDV.33     -9.670372e+00 -1.087472e+01   -11.5639541   -3.741788   -2.2431504 #>                      [,6]         [,7]          [,8]         [,9]        [,10] #> (Intercept)    0.03354563    0.2194680     0.1318238   -0.1238766    0.1189771 #> Chi.P.0      152.51594055   76.2935918  -271.6383930  135.8188842  142.4976552 #> Chi.P.1      157.89242030   74.1248488  -352.9291993  153.0419860  151.8363758 #> Chi.P.2      164.76123871   89.9017062  1888.5211733  102.7181907  134.7081058 #> Chi.P.3      311.43613429   98.4000481  1115.1708338  400.8698614  293.3837575 #> Chi.P.4       -7.43031099   -9.8787666    -1.5474236   -1.0265474   -2.6639509 #> Chi.P.5       51.24075372   33.5967080   212.3279392  187.4589817  110.5862322 #> Chi.C.3        5.22832172    6.8638503    24.5017035   45.5075439   24.1973044 #> Chi.PC.4     -62.58063876  -18.9893023  -117.5357430   38.1971340    0.4366064 #> Kappa.1      -93.20302840   35.5258531  1826.3209926 -161.6731757 -122.6809025 #> Kappa.2      190.78503248   68.0676573  -391.9388244  209.8760516  197.2229879 #> Kappa.3      161.84747905  130.0452396 -1576.3636661   21.7825866   85.6109132 #> Kappa.4      154.31480015   75.9118023  -164.2766380  143.4737835  147.6716998 #> Estate.1    -102.96442325   28.6773102    14.4900076 -170.1389760 -136.3029164 #> Estate.2      98.90967769   -0.1341941   -35.1055226   84.6676107   68.1925770 #> Estate.3       6.06652442  -11.6677688    11.9044063    6.7164854    4.3325010 #> MEDV.11      -54.85072713  -45.4088533  -304.3559067  -29.0869020  -44.7684618 #> MEDV.12     -263.09492589 -141.7695808 -1038.2345297 -228.8659600 -230.9087996 #> MEDV.13       43.32322414   26.8189406    38.1057912  -11.3640530   18.1967704 #> MEDV.22     -446.95596221   41.1833829  -887.7129591 -493.2372538 -413.3501953 #> MEDV.23      -74.10718236  -48.9844523   -75.0260196  -12.1986668  -52.5774055 #> MEDV.33       -6.43703011   -3.7809051    -7.9963561   -2.0160682   -4.5386650 #>                     [,11]       [,12]         [,13]         [,14]         [,15] #> (Intercept) -7.643432e-02    0.051518  3.350597e-02    0.08848524     0.1284325 #> Chi.P.0     -4.116212e+02  146.268744 -3.435449e+02  127.99970884  -273.1087948 #> Chi.P.1     -7.236031e+02  154.901447 -8.154771e+02  138.59639383  -365.2667592 #> Chi.P.2      2.559073e+03  136.716347  3.007264e+03  137.91990555  1767.3773483 #> Chi.P.3      1.815325e+03  418.811367  2.000751e+03  288.06490943  1185.6428269 #> Chi.P.4     -4.476818e+00   -5.707532 -5.156540e+00   -5.33395282    -5.2439365 #> Chi.P.5      3.346375e+02  117.885176  3.823241e+02  134.38242799   233.2057308 #> Chi.C.3      3.912270e+01   15.290931  4.422413e+01   34.01411064    28.5858865 #> Chi.PC.4    -2.316692e+02  -28.684281 -2.278714e+02   29.39462668  -130.0577150 #> Kappa.1      2.872082e+03 -132.545491  3.634255e+03 -106.35470361  1566.4078526 #> Kappa.2     -7.856546e+02  201.890965 -1.080569e+03  185.05933052  -431.7394652 #> Kappa.3     -2.502155e+03  112.519798 -3.229675e+03   35.34741667 -1404.4409239 #> Kappa.4     -3.819997e+02  151.758179 -4.157862e+02  135.09796545  -224.4190382 #> Estate.1    -1.125852e+02  -29.764570 -5.722572e+01 -136.30243634  -117.4255687 #> Estate.2     3.495805e+01   56.027402 -1.381231e+01   79.63222542    39.8148369 #> Estate.3     1.241461e+01   13.298480  1.662167e+01    2.08002504     5.2295627 #> MEDV.11     -4.212482e+02  -48.284192 -5.166947e+02  -32.38769467  -257.2639863 #> MEDV.12     -1.463649e+03 -298.164431 -1.803602e+03 -213.55100205  -890.4181531 #> MEDV.13      4.219523e+01    3.442811  3.084466e+01    5.79929885    38.6255150 #> MEDV.22     -1.035321e+03 -568.830489 -1.233976e+03 -375.33599265  -712.2986375 #> MEDV.23     -5.808340e+01  -39.179169 -5.407151e+01  -22.60769702   -48.7117242 #> MEDV.33     -9.993100e+00   -3.168597 -9.068230e+00   -2.64988026    -7.0416908 #>                     [,16]         [,17]         [,18]         [,19] #> (Intercept) -4.991854e-02  2.601247e-02   -0.09039869  4.367108e-02 #> Chi.P.0     -4.341654e+02 -4.924402e+02   81.14663970 -2.574161e+02 #> Chi.P.1     -6.409553e+02 -4.526843e+02   83.60884568 -3.277260e+02 #> Chi.P.2      2.553823e+03  2.304648e+03   78.54165601  1.756612e+03 #> Chi.P.3      1.535934e+03  1.333460e+03  112.03394421  1.175520e+03 #> Chi.P.4     -5.022880e+00 -2.101812e+00   -9.36263740 -5.780914e+00 #> Chi.P.5      3.141161e+02  2.858129e+02   76.07400063  2.558095e+02 #> Chi.C.3      4.157769e+01  4.104962e+01   23.01252477  3.401404e+01 #> Chi.PC.4    -1.446678e+02 -1.121322e+02   24.29016951 -1.129551e+02 #> Kappa.1      2.247764e+03  1.646679e+03   -6.40544447  1.628363e+03 #> Kappa.2     -6.607715e+02 -5.340953e+02   93.87317748 -4.235058e+02 #> Kappa.3     -2.084942e+03 -1.606209e+03   58.51259336 -1.504202e+03 #> Kappa.4     -3.988112e+02 -3.842319e+02   82.73599653 -2.312067e+02 #> Estate.1    -6.575873e+01 -7.824256e+01 -136.68853849 -6.527305e+01 #> Estate.2    -5.145622e+00  1.153668e+01   82.16763336  2.975808e+01 #> Estate.3     1.070157e+01  1.037679e+01  -16.42751402  1.085370e+01 #> MEDV.11     -3.477124e+02 -2.828228e+02  -22.02353229 -2.641750e+02 #> MEDV.12     -1.217516e+03 -9.745938e+02 -106.22160136 -9.670463e+02 #> MEDV.13      3.597387e+01  3.976063e+01   24.73714010  2.644995e+01 #> MEDV.22     -9.124290e+02 -8.499219e+02   55.18230973 -7.856158e+02 #> MEDV.23     -4.586373e+01 -5.049032e+01  -19.48410665 -4.568809e+01 #> MEDV.33     -7.693331e+00 -7.341857e+00   -3.44978160 -6.629773e+00 #>                     [,20]         [,21]        [,22]         [,23]        [,24] #> (Intercept)    0.07608963     0.1268432    0.2193043    0.03993086    0.1151202 #> Chi.P.0      136.08033371  -236.4872021   67.7959782  134.28750485   91.8060002 #> Chi.P.1      147.26849243  -362.1264647   68.2608239  140.64879459   94.7497266 #> Chi.P.2      149.39618041  1835.4143630   64.2853437  164.36365115   84.4482703 #> Chi.P.3      357.85502107  1271.8572746  107.7377268  260.46107677  146.8735044 #> Chi.P.4       -5.22634122    -6.2140466   -9.2262272   -3.87709224   -8.1861056 #> Chi.P.5      122.70761000   220.0952008   89.5731290   65.85116570   76.4464716 #> Chi.C.3       25.36761761    20.0352556   28.2279553   12.74770710   21.6824053 #> Chi.PC.4      -4.04971398  -179.2277456   29.2218421  -36.08435183    9.8269785 #> Kappa.1     -103.56169959  2729.8666625    6.5300863  -51.41224230  -13.1993236 #> Kappa.2      189.87780241  -614.0901053   71.2124482  166.71688018  106.4157248 #> Kappa.3       63.90513075 -2179.7361913   82.9243958  128.78420443   72.3294097 #> Kappa.4      144.62007947  -260.9007862   68.2855444  140.94835574   93.5582262 #> Estate.1    -127.12874248    30.3059763  -87.1064986 -102.34615252 -163.2721306 #> Estate.2      85.87107169   -57.7260112   96.1044043   94.40004540   86.6134875 #> Estate.3       5.51792525     1.6496075  -16.8461025    1.14322489  -15.1374987 #> MEDV.11      -41.87856637  -387.1453439  -34.4860228  -59.50219916  -27.1793205 #> MEDV.12     -252.40302893 -1311.9102489 -114.1362380 -245.94779139 -114.2633168 #> MEDV.13       11.74808487    29.4948141   28.0588315   43.55815423   26.6112658 #> MEDV.22     -448.28052723  -688.9737556   66.4605354 -343.25929022   26.0039382 #> MEDV.23      -35.19028342   -64.3410135  -37.2308140  -76.16638073  -27.6305916 #> MEDV.33       -3.54817693    -8.0855337   -4.5710165   -6.24786444   -3.7583425 #>                     [,25]        [,26]         [,27]         [,28]        [,29] #> (Intercept) -5.375315e-02   -0.0449627    0.03942239 -3.752796e-02   -0.1994116 #> Chi.P.0     -1.670833e+02  146.4793729  114.72226632 -1.510953e+02  109.1627414 #> Chi.P.1     -4.532437e+02  158.4834983  123.50743419 -4.245698e+02  128.2261813 #> Chi.P.2      1.765803e+03  147.9203541  181.14999798  1.915456e+03   25.0600470 #> Chi.P.3      1.261962e+03  267.4913755  175.94274501  1.403486e+03  457.4328256 #> Chi.P.4     -6.106306e+00   -4.1527290  -11.35336397 -5.518653e+00   -4.9862781 #> Chi.P.5      2.375836e+02  118.8424075   68.75680634  2.556781e+02  211.2439748 #> Chi.C.3      2.425268e+01   32.9457368   13.65619640  2.614799e+01   46.7980473 #> Chi.PC.4    -1.542709e+02   25.1757332    7.51171960 -1.677435e+02   36.7668483 #> Kappa.1      1.910899e+03 -124.5072389  -19.41858108  2.533743e+03 -178.5083100 #> Kappa.2     -3.532323e+02  207.9404612  156.18365152 -5.249337e+02  175.7125712 #> Kappa.3     -1.648593e+03   57.6153248   48.78095331 -2.140056e+03   39.4844740 #> Kappa.4     -2.476681e+02  153.5139575  125.04458212 -1.317291e+02  116.0038207 #> Estate.1    -8.604113e+01 -135.2635859  -84.11353063 -7.889801e+01 -165.8274860 #> Estate.2     2.528057e+01   88.6586402   61.45326006  2.109762e+01  111.6618201 #> Estate.3     1.124319e+01    3.6644330   -0.20583020  1.384411e+01    4.9389289 #> MEDV.11     -3.013461e+02  -33.0503402  -40.71795309 -3.610983e+02  -17.9079383 #> MEDV.12     -1.058776e+03 -220.7011203 -211.53211454 -1.319715e+03 -202.5547298 #> MEDV.13      3.087850e+01   14.3895179   23.09839503  2.819285e+01  -25.6019070 #> MEDV.22     -8.796965e+02 -411.6846267 -254.34900979 -1.024807e+03 -434.9342519 #> MEDV.23     -5.343412e+01  -32.3829464  -34.58652188 -5.115407e+01   10.9854911 #> MEDV.33     -7.410050e+00   -3.3189365   -3.66737381 -7.907692e+00   -0.7316730 #>                     [,30]         [,31]         [,32]         [,33] #> (Intercept)  1.205334e-02  5.206024e-02 -4.029998e-02  8.297816e-02 #> Chi.P.0     -4.634144e+02 -5.330901e+02 -4.342028e+01 -3.882936e+02 #> Chi.P.1     -4.415865e+02 -9.738780e+02 -5.584459e+02 -1.038380e+03 #> Chi.P.2      2.144998e+03  3.433004e+03  1.896952e+03  3.721466e+03 #> Chi.P.3      1.306892e+03  1.850000e+03  1.280027e+03  2.429310e+03 #> Chi.P.4     -4.962519e+00 -3.853361e+00 -7.970297e+00 -4.122906e+00 #> Chi.P.5      2.707146e+02  3.313908e+02  2.645127e+02  4.529964e+02 #> Chi.C.3      3.897312e+01  3.648324e+01  3.500741e+01  5.180833e+01 #> Chi.PC.4    -1.224644e+02 -2.096124e+02 -1.359228e+02 -2.956173e+02 #> Kappa.1      1.936515e+03  2.542835e+03  1.779198e+03  4.286819e+03 #> Kappa.2     -4.595479e+02 -1.042065e+03 -5.175126e+02 -1.454575e+03 #> Kappa.3     -1.747948e+03 -2.409877e+03 -1.661253e+03 -3.902540e+03 #> Kappa.4     -3.482131e+02 -6.203178e+02 -3.063651e+02 -5.243137e+02 #> Estate.1    -9.431619e+01  1.130831e+01 -8.732116e+01 -3.850858e-01 #> Estate.2     2.884014e+01 -3.253993e+01  3.766083e+01 -7.734652e+01 #> Estate.3     8.134488e+00  1.051679e+01  1.389204e+01  2.340272e+01 #> MEDV.11     -3.091408e+02 -3.892365e+02 -3.039101e+02 -6.241240e+02 #> MEDV.12     -1.051120e+03 -1.363469e+03 -1.050406e+03 -2.101732e+03 #> MEDV.13      3.853810e+01  6.194110e+01  3.390729e+01  2.855113e+01 #> MEDV.22     -8.307962e+02 -1.007753e+03 -8.561366e+02 -1.448572e+03 #> MEDV.23     -4.587790e+01 -6.555470e+01 -5.249892e+01 -6.130511e+01 #> MEDV.33     -7.552957e+00 -1.001687e+01 -7.736238e+00 -1.041008e+01 #>                     [,34]         [,35]        [,36]         [,37] #> (Intercept)    0.02221307    -0.3743566    0.1868637     0.1816148 #> Chi.P.0      121.16337890  -168.1347140   98.2247544  -720.1937726 #> Chi.P.1      130.40375190  -204.5225018   97.6709673  -974.3077739 #> Chi.P.2      171.92842314  1510.6443630  109.7363999  3510.9894665 #> Chi.P.3      331.35543886  1115.0957904  111.4248478  2228.5777654 #> Chi.P.4       -6.74805243     3.8046037   -8.2033577    -7.6206994 #> Chi.P.5       77.70726546   208.1170949   22.3583753   412.7253829 #> Chi.C.3       14.39907636    24.0477014    4.9395397    44.2268910 #> Chi.PC.4     -46.49614954  -146.9644272  -26.6164129  -268.1127031 #> Kappa.1      -45.33624360  1735.0139499   11.0771130  4427.1500892 #> Kappa.2      153.99069737  -335.6724385  102.3780574 -1135.9936924 #> Kappa.3      100.08945981 -1491.8846153  111.7788657 -3817.0902260 #> Kappa.4      129.02591622  -219.1995442   98.8287649  -555.9617184 #> Estate.1    -111.88350870  -179.6770549 -152.9607189    27.3000461 #> Estate.2      94.03317072    96.3091709  100.7001979   -81.3413966 #> Estate.3       2.80217882     7.8257865  -13.9792355    13.3291088 #> MEDV.11      -53.24689114  -277.8874903  -35.6318866  -612.5467413 #> MEDV.12     -247.09542450  -975.9419476 -134.0221212 -2060.9465833 #> MEDV.13       32.06605113    53.3484174   50.8821432    27.0280334 #> MEDV.22     -386.38476179  -792.8119308   12.1947335 -1193.4903903 #> MEDV.23      -57.40787236   -74.0420858  -48.2582718   -48.3447863 #> MEDV.33       -5.01170623    -9.5648376   -5.7029333   -10.3127945 #>                     [,38]         [,39]         [,40]         [,41] #> (Intercept)  3.527491e-02 -9.760289e-02  7.941712e-02  4.096657e-02 #> Chi.P.0     -4.227759e+02 -3.978046e+02 -3.699562e+02 -3.074850e+02 #> Chi.P.1     -7.411680e+02 -5.925364e+02 -6.404063e+02 -5.835303e+02 #> Chi.P.2      2.648431e+03  2.376660e+03  2.701391e+03  2.163873e+03 #> Chi.P.3      1.667406e+03  1.424926e+03  1.851349e+03  1.420741e+03 #> Chi.P.4     -3.745816e+00 -5.903264e+00 -4.665849e+00 -6.401683e+00 #> Chi.P.5      3.241965e+02  2.690080e+02  3.650541e+02  2.994062e+02 #> Chi.C.3      3.922324e+01  2.994118e+01  4.572809e+01  3.840665e+01 #> Chi.PC.4    -1.819579e+02 -1.541339e+02 -1.934229e+02 -1.366766e+02 #> Kappa.1      2.746699e+03  2.000935e+03  3.461368e+03  1.845280e+03 #> Kappa.2     -7.207625e+02 -5.890575e+02 -8.406933e+02 -4.887910e+02 #> Kappa.3     -2.461550e+03 -1.835095e+03 -2.985926e+03 -1.684616e+03 #> Kappa.4     -3.841057e+02 -3.870069e+02 -4.248117e+02 -4.659561e+02 #> Estate.1    -9.878443e+01 -9.659795e+01 -6.338571e+01 -3.423596e+01 #> Estate.2     3.133129e+01  3.518980e+01 -1.041128e+01  3.336558e+00 #> Estate.3     1.206619e+01  8.475695e+00  1.516486e+01  1.016640e+01 #> MEDV.11     -4.092655e+02 -2.997993e+02 -4.948313e+02 -2.934326e+02 #> MEDV.12     -1.408074e+03 -1.087670e+03 -1.649829e+03 -1.036457e+03 #> MEDV.13      4.338935e+01  4.524277e+01  1.994096e+01  2.148198e+01 #> MEDV.22     -1.019764e+03 -8.419985e+02 -1.228476e+03 -8.738762e+02 #> MEDV.23     -5.230722e+01 -4.727508e+01 -4.633638e+01 -3.651183e+01 #> MEDV.33     -9.542370e+00 -8.082226e+00 -8.223452e+00 -6.552248e+00 #>                     [,42]        [,43]         [,44]        [,45]         [,46] #> (Intercept)     0.1216031    0.1317013   -0.03903687   -0.2069613   -0.04212005 #> Chi.P.0      -554.0727982   83.5302097  132.25660174  142.9079058   97.51323356 #> Chi.P.1     -1241.8190187   85.6522088  144.41968017  159.9175489   99.76738189 #> Chi.P.2      3811.3298809   80.7597311  103.71176709   91.3980818   92.53738158 #> Chi.P.3      2435.1196003  119.4689328  441.18333554  417.9325318  155.35375943 #> Chi.P.4        -6.0030112   -9.4376675   -8.10261829   -4.9608351   -7.02285328 #> Chi.P.5       475.1913451   70.5039245  114.99666033  128.6302818   53.67556282 #> Chi.C.3        56.0185456   23.1213803   16.47948997   22.6782570   12.44743781 #> Chi.PC.4     -260.1232103   13.2975313  -57.62289244  -21.7414287  -16.84900405 #> Kappa.1      4120.2977843   -3.9165062 -112.36741599 -147.1000565   -5.03928700 #> Kappa.2     -1258.4294538   93.1247361  179.74741977  203.5065532  108.43190729 #> Kappa.3     -3700.6441225   74.7131076  132.73316701  101.7659487   94.33536614 #> Kappa.4      -680.1030934   85.0561485  138.85943539  149.6674688   99.01366891 #> Estate.1       60.0984941 -166.5700152 -134.22408269 -155.4289264 -216.48099919 #> Estate.2      -67.5647734  112.7460363  119.06546398  131.3166826  155.21405035 #> Estate.3       19.9436698  -16.4353437    7.59081245    7.1592941  -13.97428918 #> MEDV.11      -575.8218639  -28.9239577  -46.69862600  -29.6025572  -29.57000136 #> MEDV.12     -2021.9304587 -113.2813889 -268.15892749 -224.9202971 -124.18715546 #> MEDV.13        20.4292162   34.7142759   24.44193465   12.4432428   53.18429378 #> MEDV.22     -1404.1473508   41.5492946 -482.28858016 -485.6606308    1.41904679 #> MEDV.23       -42.6534448  -32.1349590  -53.97834632  -26.1504743  -47.62323967 #> MEDV.33        -9.6933299   -4.3007451   -4.92915602   -3.4507635   -5.95598909 #>                   [,47]        [,48]         [,49]        [,50] #> (Intercept)    0.117542    0.2551899   -0.04864663    0.1748471 #> Chi.P.0       74.953564   60.0169813  122.49471068  149.1347606 #> Chi.P.1       74.798386   60.5046895  133.50509818  161.6015884 #> Chi.P.2       74.630060   60.0919291   96.32767441  155.4413408 #> Chi.P.3      106.962955   66.3098471  368.05040339  264.2659001 #> Chi.P.4      -12.217467   -8.0551736  -10.32921455   -4.5268018 #> Chi.P.5       45.973672  101.8648266  152.41618787   80.6692679 #> Chi.C.3       13.648245   31.3234341   35.67606030   15.1490422 #> Chi.PC.4      -6.070574   59.4203671   19.68266305  -10.5927961 #> Kappa.1       22.717928    1.3029197 -118.48230022  -98.1162282 #> Kappa.2       74.651180   65.5196268  176.30429739  201.9939400 #> Kappa.3       96.928180   57.1304842   44.81877690   83.1975941 #> Kappa.4       75.133121   60.6115372  128.79186017  157.6030483 #> Estate.1     -96.265517  -11.7552481 -157.38589996 -131.4041603 #> Estate.2      69.390787   29.4843640  109.41577468   88.3252735 #> Estate.3     -14.139688  -17.7399959    4.41274924    2.8043367 #> MEDV.11      -28.137706  -30.6633977  -28.25917074  -35.1421234 #> MEDV.12     -111.338575 -102.2684501 -222.79338286 -218.2584888 #> MEDV.13       31.515504    7.3295627   -3.17075462   24.7310368 #> MEDV.22       91.200513   92.4487648 -400.71699241 -398.5926321 #> MEDV.23      -27.640650  -22.0163460   -8.33051684  -40.4245643 #> MEDV.33       -3.902694   -2.3021959   -1.94837121   -4.9165147"},{"path":"https://nanx.me/enpls/reference/print.enpls.fs.html","id":null,"dir":"Reference","previous_headings":"","what":"Print enpls.fs Object ‚Äî print.enpls.fs","title":"Print enpls.fs Object ‚Äî print.enpls.fs","text":"Print enpls.fs object.","code":""},{"path":"https://nanx.me/enpls/reference/print.enpls.fs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print enpls.fs Object ‚Äî print.enpls.fs","text":"","code":"# S3 method for enpls.fs print(x, sort = TRUE, nvar = NULL, ...)"},{"path":"https://nanx.me/enpls/reference/print.enpls.fs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print enpls.fs Object ‚Äî print.enpls.fs","text":"x object class enpls.fs. sort variables sorted decreasing order importance? nvar Number top variables show. Ignored sort = FALSE. ... Additional parameters print.","code":""},{"path":[]},{"path":"https://nanx.me/enpls/reference/print.enpls.fs.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Print enpls.fs Object ‚Äî print.enpls.fs","text":"Nan Xiao <https://nanx.>","code":""},{"path":"https://nanx.me/enpls/reference/print.enpls.fs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print enpls.fs Object ‚Äî print.enpls.fs","text":"","code":"data(\"alkanes\") x <- alkanes$x y <- alkanes$y  set.seed(42) fs <- enpls.fs(x, y, reptimes = 100) print(fs) #> Variable Importance by Ensemble Partial Least Squares #> --- #>          Importance #> Chi.C.3   2.3709543 #> MEDV.23   2.0805190 #> MEDV.33   2.0263261 #> Chi.P.4   1.9926551 #> Chi.P.5   1.5626623 #> Estate.1  1.4482609 #> MEDV.13   1.3793226 #> MEDV.22   1.2299934 #> Chi.P.3   1.1104510 #> MEDV.12   1.0635508 #> MEDV.11   0.9492159 #> Estate.2  0.8926518 #> Chi.P.2   0.8470757 #> Chi.PC.4  0.7459319 #> Kappa.1   0.7190082 #> Kappa.3   0.7063439 #> Chi.P.1   0.4901006 #> Kappa.2   0.4518056 #> Kappa.4   0.3671246 #> Chi.P.0   0.3355310 #> Estate.3  0.2590686 print(fs, nvar = 10L) #> Variable Importance by Ensemble Partial Least Squares #> --- #>          Importance #> Chi.C.3    2.370954 #> MEDV.23    2.080519 #> MEDV.33    2.026326 #> Chi.P.4    1.992655 #> Chi.P.5    1.562662 #> Estate.1   1.448261 #> MEDV.13    1.379323 #> MEDV.22    1.229993 #> Chi.P.3    1.110451 #> MEDV.12    1.063551"},{"path":"https://nanx.me/enpls/reference/print.enpls.od.html","id":null,"dir":"Reference","previous_headings":"","what":"Print enpls.od Object ‚Äî print.enpls.od","title":"Print enpls.od Object ‚Äî print.enpls.od","text":"Print enpls.od object.","code":""},{"path":"https://nanx.me/enpls/reference/print.enpls.od.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print enpls.od Object ‚Äî print.enpls.od","text":"","code":"# S3 method for enpls.od print(x, ...)"},{"path":"https://nanx.me/enpls/reference/print.enpls.od.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print enpls.od Object ‚Äî print.enpls.od","text":"x object class enpls.od. ... Additional parameters print.","code":""},{"path":[]},{"path":"https://nanx.me/enpls/reference/print.enpls.od.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Print enpls.od Object ‚Äî print.enpls.od","text":"Nan Xiao <https://nanx.>","code":""},{"path":"https://nanx.me/enpls/reference/print.enpls.od.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print enpls.od Object ‚Äî print.enpls.od","text":"","code":"data(\"alkanes\") x <- alkanes$x y <- alkanes$y  set.seed(42) od <- enpls.od(x, y, reptimes = 40) od #> Outlier Detection by Ensemble Partial Least Squares #> --- #> Mean residual for each sample: #>   [1]  1.92330900 10.89021255  3.27046898  3.44664155  2.78719736  1.00721093 #>   [7]  2.32621585  0.15516618  1.49258397  0.50951677  0.19598423  0.37894319 #>  [13]  4.43421626  0.48301514  0.46327275  4.53530921  1.58350187  0.22256084 #>  [19]  1.82285515  2.19105280  0.14492503  0.11669131  2.37152147  0.41554215 #>  [25]  0.24372355  3.03750326  0.11900180  0.49344478  3.58562713  0.75971852 #>  [31]  2.50370236  0.18596822  0.62717089  0.22202733  0.95571546  1.31467423 #>  [37]  1.69682775  1.75866125  1.74541520  0.59886200  0.15590344  2.52512176 #>  [43]  0.94597983  2.01631116  2.00243170  1.25466867  1.43118935  2.10773058 #>  [49]  2.37800560  2.09036202  1.08161933  1.18210080  6.31361052  2.38609257 #>  [55]  1.50573384  0.91316064  3.07453404  3.91117478  1.05337202  0.08206764 #>  [61]  0.19754492  3.19042773 17.31570083  6.37110043  0.40148348  2.38478712 #>  [67]  2.69960493  0.42132555  1.69524072  1.54012000  0.11009454  1.20152745 #>  [73]  0.65641423  1.61667859  0.68379966  3.31536455  1.22339435  1.41000966 #>  [79]  2.24609395  1.51285921  0.10342766  0.30636847  6.66882111  0.58845492 #>  [85]  2.63725148  1.65695792  1.63390152  1.61835598  0.57600256  0.72731511 #>  [91]  1.05198101  4.36533755  1.05663524  3.08473948  7.43305443  2.09063428 #>  [97]  3.55520392  1.65515761  1.61513447  0.63884967  1.58664742  1.67695751 #> [103]  1.27496896  0.40203138  0.50182230  1.63273307  0.14090982  0.65288976 #> [109]  3.11853398  2.36473487  2.11093608  3.53194269  3.08191944  2.69316941 #> [115]  0.90240623  0.02872732  3.70403651  1.29183732  2.23125273  3.85398723 #> [121]  1.84217151  3.66076738  0.10484361  2.54633226  0.46617427  1.16805320 #> [127]  0.39139204  0.16443923  0.08003652  4.42158712  5.73478695  4.16317725 #> [133]  1.49768800  0.84443803  3.48408280  0.04720127  1.15212362  4.71514260 #> [139]  4.78587567  7.08535845  3.01501307  0.28435017  2.45823906  3.83891306 #> [145]  0.74162634  0.81445493  4.13218270  3.24855964  0.14203270  4.18057865 #> [151]  2.78935621  2.43358909  0.15734928  1.74646711 11.01319565  2.62325287 #> [157]  2.24596141  0.82329103  3.26220014  3.77020529  1.18146477  0.75000697 #> [163]  5.42889310  0.97793800  5.53820064  1.10714760 13.35689245  8.10495666 #> [169]  5.08334965  3.59961335  1.44661616  3.31217366  3.63769784  9.21946333 #> [175]  5.36676320  4.14898335  5.07866592  1.06404762  0.85409149  3.01818476 #> [181]  3.09981869  1.82048171  4.08481150  0.81430555  4.86950932  1.30042868 #> [187]  3.04547591  2.36659361  1.30922974  0.67546767  4.83813159  0.76363716 #> [193]  4.85278793  1.42203141  3.29097215  0.22473577 11.03793378  4.04759625 #> [199]  8.66377110  3.56129270  4.11964350  2.27536705  0.79659843  5.18525972 #> [205]  2.02486439  2.61653055  5.50770355 #> --- #> Residual SD for each sample: #>   [1] 3.2833878 3.8273794 1.0560186 2.0025722 1.1289381 0.8097269 1.3784385 #>   [8] 0.7644119 1.7038686 0.6949922 0.6511539 0.8188688 0.7642990 0.9576901 #>  [15] 0.5493217 0.3829378 0.3262016 0.5612040 0.5585085 0.5914671 0.3469040 #>  [22] 0.6198233 0.3967101 0.4385455 0.4501116 0.6626386 0.5248715 0.4872178 #>  [29] 0.9541322 0.4900806 0.7301441 0.7965155 0.5781910 0.2309336 0.6417451 #>  [36] 0.4647038 2.4019232 0.5483285 0.8192984 0.4314438 0.3179872 0.3312354 #>  [43] 0.3733198 1.4769004 0.2945059 0.4482088 0.9344860 0.6220916 0.7005594 #>  [50] 0.4662778 0.4220982 0.6338109 0.2638589 0.5120856 0.4077683 0.3573461 #>  [57] 0.4410739 0.5874401 0.5968931 0.6777397 0.4197461 0.4003001 0.4686458 #>  [64] 0.4263087 1.0492434 0.7580662 0.4304740 0.9193812 0.3237159 0.3706392 #>  [71] 0.3702639 0.6251546 0.6000215 0.5021201 1.7171270 0.4327897 1.3029738 #>  [78] 0.1964857 0.1818725 0.3704031 0.3831923 0.2224975 0.2599175 0.5383308 #>  [85] 0.3500381 0.2374213 0.3201375 0.6122773 0.4425255 0.3409247 0.3270531 #>  [92] 0.4027017 0.6982817 0.4485474 0.3433372 0.1496763 0.3733111 0.6743161 #>  [99] 0.3734439 0.3823817 0.4611125 0.4078577 0.3041751 0.5314541 0.6941926 #> [106] 0.4185355 0.6356265 0.4368110 0.3118178 0.9631201 0.6241170 0.8467951 #> [113] 0.5370068 0.8182740 1.0267493 0.6014406 0.7439188 1.0417452 0.9159984 #> [120] 1.0912602 1.2090378 0.2448170 0.3614916 0.7161885 0.8897647 1.3832014 #> [127] 0.5998433 0.4049862 0.5840936 0.3372879 0.5792705 2.5575032 0.8360641 #> [134] 0.6016499 0.5772573 0.3279032 0.7315307 0.3090083 0.9269372 2.3859418 #> [141] 0.5067978 0.7311754 0.3569741 0.7275507 0.6003814 0.1884859 0.2617410 #> [148] 0.7306165 0.3746068 1.2490920 0.4336852 0.5923654 0.9873645 0.3988957 #> [155] 1.3101247 0.6287461 0.5560878 1.3617496 0.9841517 1.3764557 0.7021863 #> [162] 0.4625153 0.6237591 0.8036729 0.7978216 0.9488726 0.9800277 1.0070299 #> [169] 1.0055290 4.2708204 1.1540947 0.9365893 0.6317219 1.3354158 0.4766210 #> [176] 0.6604796 0.5105765 0.6308363 0.1133016 0.5834894 0.5800087 0.7344611 #> [183] 0.1725119 0.3842890 0.6562976 0.4601188 0.1435015 1.6094283 0.5524734 #> [190] 0.4649504 0.5169569 0.2957184 0.6396079 0.7796620 0.9774836 0.3619579 #> [197] 0.7784514 0.6964077 0.4218187 0.2469681 0.6395878 0.6537583 0.2377910 #> [204] 0.8467404 0.4538872 0.7481834 0.4360923"},{"path":"https://nanx.me/enpls/reference/print.enspls.ad.html","id":null,"dir":"Reference","previous_headings":"","what":"Print enspls.ad Object ‚Äî print.enspls.ad","title":"Print enspls.ad Object ‚Äî print.enspls.ad","text":"Print enspls.ad object.","code":""},{"path":"https://nanx.me/enpls/reference/print.enspls.ad.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print enspls.ad Object ‚Äî print.enspls.ad","text":"","code":"# S3 method for enspls.ad print(x, ...)"},{"path":"https://nanx.me/enpls/reference/print.enspls.ad.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print enspls.ad Object ‚Äî print.enspls.ad","text":"x object class enspls.ad. ... Additional parameters print.","code":""},{"path":[]},{"path":"https://nanx.me/enpls/reference/print.enspls.ad.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Print enspls.ad Object ‚Äî print.enspls.ad","text":"Nan Xiao <https://nanx.>","code":""},{"path":"https://nanx.me/enpls/reference/print.enspls.ad.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print enspls.ad Object ‚Äî print.enspls.ad","text":"","code":"data(\"logd1k\") # remove low variance variables x <- logd1k$x[, -c(17, 52, 59)] y <- logd1k$y  # training set x.tr <- x[1:300, ] y.tr <- y[1:300]  # two test sets x.te <- list(   \"test.1\" = x[301:400, ],   \"test.2\" = x[401:500, ] ) y.te <- list(   \"test.1\" = y[301:400],   \"test.2\" = y[401:500] )  set.seed(42) ad <- enspls.ad(   x.tr, y.tr, x.te, y.te,   maxcomp = 3, alpha = c(0.3, 0.6, 0.9),   space = \"variable\", method = \"mc\",   ratio = 0.8, reptimes = 10 ) print(ad) #> Model Applicability Domain Evaluation by ENSPLS #> --- #> Absolute mean prediction error for each training set sample: #>   [1] 0.422632298 0.815523615 0.648213606 0.870831328 0.257203074 0.490832846 #>   [7] 0.701719681 0.429048791 0.749324907 0.638404365 0.843665524 0.687892385 #>  [13] 1.017169872 0.763573955 0.759053761 0.871500956 0.236640925 0.088100279 #>  [19] 0.472965624 0.634421708 0.735632351 0.091059839 1.594026249 1.189337666 #>  [25] 0.340769966 0.604866100 1.303871973 0.961142660 0.092884283 0.100520976 #>  [31] 0.059779983 0.412777313 0.135195202 2.478026712 0.397403818 0.005011676 #>  [37] 0.877181685 0.145017597 0.023745363 0.280530155 0.058398364 0.568238661 #>  [43] 0.251556521 0.494641002 0.163135341 0.263345408 0.331201449 0.257333694 #>  [49] 0.210855050 0.221268755 0.057240160 0.384076723 1.179395348 0.390537444 #>  [55] 0.726689121 0.528659319 0.212638767 0.161500350 0.362637352 0.256825754 #>  [61] 0.732640202 2.477624629 0.191345044 0.378929068 1.560290268 1.490810969 #>  [67] 0.296412512 1.550013282 0.055909397 0.480447843 0.022057600 0.205219974 #>  [73] 0.533021269 0.061863659 0.325187195 0.792693950 0.171503502 1.268409310 #>  [79] 0.095289006 0.145745742 0.258202295 0.186118843 0.072360285 0.001806612 #>  [85] 0.053576611 0.542751777 0.122393517 0.701052137 0.336353318 0.176058594 #>  [91] 0.684119003 1.427365586 0.699280144 0.406684185 0.611234923 0.156924933 #>  [97] 0.562503385 1.119304806 0.471931939 0.291409291 1.002496298 0.915919886 #> [103] 1.371940567 0.159471334 0.458710686 0.352588032 0.662182370 0.092416830 #> [109] 0.381089817 0.777267167 0.723549214 0.086011861 0.504880794 0.442446365 #> [115] 2.068971171 0.677454033 0.275265965 0.146845629 0.145894573 0.380305366 #> [121] 0.175955943 0.495523895 0.095822143 0.108049721 0.421334995 0.406392115 #> [127] 0.427064993 0.475260473 0.390757565 0.386203722 0.389891939 0.638576864 #> [133] 0.514533894 0.702536133 1.016492859 0.036428252 0.068006633 0.158541714 #> [139] 0.358508958 0.126570666 0.383104094 0.316770984 0.315860883 0.367288327 #> [145] 0.005705279 0.511450671 0.776060683 0.717761225 1.248239275 0.315547146 #> [151] 0.678562080 0.436041833 0.302940412 0.333968661 0.335712517 0.490020503 #> [157] 0.027968631 0.131459236 1.330434909 0.534146052 0.054247912 0.470021073 #> [163] 0.230859468 1.113192328 0.934546316 0.167146638 1.009885792 0.124310929 #> [169] 1.056397529 1.023604883 0.225133982 0.442940412 0.583332596 0.126985869 #> [175] 0.069347790 0.653485515 0.970596830 0.195304683 0.801994753 1.199706935 #> [181] 0.864077011 0.954600519 0.260503102 1.575187384 0.241392038 0.640383510 #> [187] 0.281017068 0.421082178 0.252594496 0.580144400 0.215357014 0.462556069 #> [193] 0.224788390 0.029300831 0.277304150 0.320589756 0.214429238 0.237467730 #> [199] 0.235394840 0.414850699 0.719519720 0.354494279 0.072602051 0.007889332 #> [205] 0.390031470 0.789599200 0.266620727 0.428384211 1.065651077 0.372088798 #> [211] 0.937549606 0.090203048 0.090203048 0.256837822 1.342746701 0.574286923 #> [217] 0.789007735 0.426308453 0.412019834 0.713326957 0.394331204 0.857297967 #> [223] 0.843878184 0.347792353 0.039652246 0.200532641 0.096114491 0.544931258 #> [229] 0.337727332 0.401999859 0.059209044 1.022239155 1.165625666 0.685192754 #> [235] 0.007973348 0.462237983 1.251230872 0.166910524 0.257766196 0.709494592 #> [241] 1.283898665 0.724810413 0.141464864 1.025924894 0.848892347 0.710976980 #> [247] 0.315861373 0.185796431 0.270266859 0.106863048 0.951448651 0.890710089 #> [253] 0.900610648 1.294977014 0.980769268 0.238059821 0.849570466 0.035763040 #> [259] 1.324239041 1.380289181 0.400634228 0.560836939 1.519693134 0.926202509 #> [265] 0.911714531 0.877294549 0.059123701 1.193649120 0.360798335 0.837650147 #> [271] 1.082083058 0.422692742 0.417876957 0.839002022 0.944522512 0.136016291 #> [277] 0.965552453 1.197557941 0.999223117 1.102941147 0.749923726 1.160063450 #> [283] 1.995596507 0.876923724 0.527334455 1.275112467 0.126439904 1.522104432 #> [289] 0.730701343 0.652148077 0.484660849 1.146757330 0.118813278 0.802484059 #> [295] 1.043295173 1.189620988 0.894921760 1.299672426 0.025476701 0.518866931 #> --- #> Prediction error SD for each training set sample: #>   [1] 0.17682492 0.13442655 0.10556516 0.11149364 0.14528873 0.12758414 #>   [7] 0.12065164 0.07926194 0.08193757 0.06919434 0.15949739 0.11983705 #>  [13] 0.11835357 0.20540697 0.10198030 0.11554543 0.13944593 0.15980624 #>  [19] 0.08477330 0.13461282 0.23612843 0.15600606 0.21791446 0.19736729 #>  [25] 0.15016986 0.09344745 0.21864433 0.21790961 0.25336042 0.15941805 #>  [31] 0.09284126 0.16197923 0.09572618 0.08856759 0.17542166 0.14772163 #>  [37] 0.19002387 0.09668287 0.14297462 0.11884520 0.18137131 0.09604546 #>  [43] 0.13793796 0.19055507 0.11347154 0.07725716 0.12906606 0.07764695 #>  [49] 0.08125217 0.07245476 0.06363757 0.11119898 0.16865215 0.10577447 #>  [55] 0.21110265 0.09781289 0.11084679 0.14933465 0.07757903 0.22813192 #>  [61] 0.09875702 0.10747134 0.13641438 0.16742019 0.27061775 0.23712666 #>  [67] 0.13959506 0.28623757 0.13528523 0.12462349 0.05603801 0.09715490 #>  [73] 0.10030104 0.08554512 0.16769181 0.10523460 0.09182054 0.25599278 #>  [79] 0.19716493 0.14627301 0.15356982 0.09900334 0.08128891 0.20611741 #>  [85] 0.17204179 0.25688856 0.12334344 0.09244068 0.20538923 0.10928922 #>  [91] 0.29713211 0.34794542 0.13578921 0.12893068 0.15385871 0.09169239 #>  [97] 0.13315023 0.21538582 0.18799248 0.13418807 0.19680767 0.19982114 #> [103] 0.26388690 0.19550901 0.20320043 0.06773431 0.17550233 0.21529091 #> [109] 0.13784328 0.20284702 0.19120467 0.15362606 0.16542940 0.18575542 #> [115] 0.23085802 0.15447198 0.11138301 0.09840187 0.25844855 0.17223314 #> [121] 0.15344701 0.13833191 0.14289706 0.13234967 0.11556001 0.11592906 #> [127] 0.10315136 0.08660667 0.09449550 0.16854420 0.18856090 0.15430410 #> [133] 0.09661260 0.28032529 0.21735301 0.12557330 0.20184812 0.09335452 #> [139] 0.18736053 0.19047223 0.20598213 0.14763848 0.13510977 0.12023468 #> [145] 0.20625454 0.18448368 0.14956688 0.16068554 0.10170993 0.18631713 #> [151] 0.15860217 0.09685768 0.31021140 0.07256171 0.18358676 0.11571334 #> [157] 0.11897874 0.28213843 0.17354708 0.54050221 0.21115082 0.16023562 #> [163] 0.21092455 0.15063153 0.16800965 0.25836353 0.20453967 0.20524870 #> [169] 0.18909853 0.15239066 0.19057706 0.31021140 0.17806749 0.18825405 #> [175] 0.23845054 0.16207528 0.14468703 0.22773153 0.09435823 0.20591807 #> [181] 0.09285024 0.14829706 0.18164147 0.11016136 0.12613775 0.13083017 #> [187] 0.15856212 0.14654668 0.11192022 0.09052024 0.18558041 0.14932045 #> [193] 0.19117145 0.16532975 0.23524530 0.17242759 0.16421283 0.15853904 #> [199] 0.18032470 0.27398573 0.21185651 0.08873293 0.17034044 0.20631894 #> [205] 0.17913107 0.27390014 0.14980278 0.10650226 0.12233789 0.15860333 #> [211] 0.07790451 0.17097513 0.17097513 0.16639106 0.13218349 0.19943419 #> [217] 0.14607979 0.09014777 0.16541099 0.21108869 0.21867079 0.13422304 #> [223] 0.15043220 0.27229967 0.14221377 0.22646860 0.12034653 0.12950380 #> [229] 0.12548953 0.45557358 0.11447949 0.12563839 0.22438920 0.25630906 #> [235] 0.09629856 0.13508804 0.16355792 0.18598939 0.36341332 0.18273404 #> [241] 0.12908144 0.11288943 0.19083150 0.16612828 0.11700099 0.13332849 #> [247] 0.12906516 0.24467925 0.17511908 0.19636436 0.13706344 0.09350376 #> [253] 0.11156260 0.07681448 0.10086700 0.18217069 0.08211883 0.18818291 #> [259] 0.12189647 0.12451514 0.28735398 0.14521698 0.23059541 0.04790616 #> [265] 0.06013623 0.22800985 0.18774418 0.27971046 0.13806851 0.03846176 #> [271] 0.14729532 0.24749122 0.21319807 0.18974506 0.20515873 0.22254970 #> [277] 0.13604209 0.22385117 0.09036809 0.08643619 0.17599821 0.11058212 #> [283] 0.22266788 0.90792902 0.25203713 0.09633983 0.21948222 0.14396076 #> [289] 0.26004314 0.21105243 0.25559727 0.18210567 0.13009828 0.38864150 #> [295] 0.16652945 0.11959406 0.36849624 0.19887907 0.24674728 0.18786913 #> --- #> Absolute mean prediction error for each test set sample: #> [[1]] #>   [1] 0.639812710 1.728652076 0.802728738 1.068664782 0.509884475 0.443834120 #>   [7] 1.778795719 1.707951484 0.581364417 1.779236657 0.486854157 0.376468936 #>  [13] 0.715406535 1.634078337 0.054522076 1.161650799 1.740578337 0.389893595 #>  [19] 1.538714709 0.031311347 0.865520787 1.488199902 0.731535368 0.111052248 #>  [25] 0.104213904 0.920199720 1.072970056 1.557923146 1.589685511 1.981304775 #>  [31] 1.790737280 1.535657507 2.257757940 0.805144341 1.425035142 1.489361200 #>  [37] 0.855622407 1.129081107 1.986525920 1.243347015 0.498346851 0.748741536 #>  [43] 0.880363834 1.199213789 0.218156034 1.496401694 2.301150689 0.904462346 #>  [49] 0.622586100 0.027112612 0.143570274 1.441423599 1.224283639 0.109178041 #>  [55] 1.073204962 0.088209298 1.315967949 2.806981476 1.963810759 1.595818003 #>  [61] 0.119306515 1.890562369 1.068519090 2.586166344 0.104238944 1.284283639 #>  [67] 2.502535164 0.714377910 0.361077210 0.004964891 1.190182265 0.269064444 #>  [73] 0.522665841 0.287735142 0.334417859 1.651955323 1.872898952 1.710504262 #>  [79] 0.860576242 0.312156724 2.056917661 1.268912438 1.552370417 1.492865920 #>  [85] 1.423811794 0.304902997 0.943973923 1.007302003 0.268239164 0.077852604 #>  [91] 0.397227200 1.574999201 2.439927322 1.469443326 0.268010248 0.082140833 #>  [97] 1.652266880 1.309732275 2.231149721 0.002849509 #>  #> [[2]] #>   [1] 0.3761254 1.0686362 0.9822736 0.1525924 0.8961379 2.2723739 2.0714944 #>   [8] 1.4591463 1.7583215 1.2206085 1.7216143 2.1029318 0.9041916 1.9164734 #>  [15] 1.6555303 1.5212896 0.1713064 1.6826830 0.4845723 1.0504444 0.5601090 #>  [22] 0.5565668 2.0394634 1.7641510 1.1248075 2.1042120 1.1213167 1.3636992 #>  [29] 0.3338557 1.8086985 1.3070499 1.9044063 0.1954925 2.1071527 0.2531252 #>  [36] 1.8888268 1.5903581 2.2373363 2.1912922 2.2373363 2.4847163 1.7504916 #>  [43] 0.8062721 0.9878200 1.8567469 1.6537348 1.8232545 1.8941021 2.0012004 #>  [50] 2.0299914 2.0463856 6.8750855 2.0265552 2.1496461 2.0326761 2.0341021 #>  [57] 2.2483376 2.2209414 1.4387582 2.1071983 2.2770486 2.3744691 1.9340489 #>  [64] 2.2387601 0.3949453 2.3930403 2.9662227 1.7043344 1.9380597 2.2208547 #>  [71] 1.8652574 2.0613709 2.6124837 2.2107478 2.7153936 1.8238502 2.3515942 #>  [78] 0.4086407 2.4985282 2.5847385 1.7424177 1.9049894 0.8165998 1.1007456 #>  [85] 3.2720013 2.5444853 2.7490399 1.9278361 2.6088437 1.0389593 2.3979256 #>  [92] 2.1731800 2.3825046 6.6641455 2.7777074 2.7732829 0.8122010 9.6228069 #>  [99] 1.0692105 2.0402506 #>  #> --- #> Prediction error SD for each test set sample: #> [[1]] #>   [1] 0.22083328 0.17054322 0.24153236 0.10511800 0.18976851 0.15932889 #>   [7] 0.23968000 0.11121425 0.16555398 0.24991955 0.21038877 0.36450188 #>  [13] 0.27819462 0.14341038 0.23339580 0.06099678 0.11001288 0.25935198 #>  [19] 0.27807784 0.12768484 0.39398892 0.13011395 0.25895425 0.41446740 #>  [25] 0.43185608 0.14108293 0.06591888 0.14312233 0.15275010 0.14042106 #>  [31] 0.13693109 0.25348023 0.12806220 0.17876048 0.17077105 1.34738600 #>  [37] 0.38800930 0.12158288 0.40278045 0.20050773 0.16542774 0.18043944 #>  [43] 0.19275518 0.10633509 0.13346924 0.25936149 0.13643158 0.21946839 #>  [49] 0.36433642 0.51283676 0.45020045 0.20389847 0.10552798 0.44284456 #>  [55] 0.22361746 0.28826144 0.31265941 0.28732216 0.21618896 0.22854181 #>  [61] 0.45194419 0.25694764 0.20225071 0.12415881 0.44521550 0.10552798 #>  [67] 0.30201059 0.21971458 0.43446870 0.30375351 0.38239730 0.53411721 #>  [73] 0.18460227 0.47744807 0.48077148 0.18288978 0.13848477 0.36567907 #>  [79] 0.28023087 0.46569848 0.15442597 0.42189035 0.18716995 0.26155751 #>  [85] 0.10627129 0.42819113 0.27761377 0.15701903 0.41389201 0.54313727 #>  [91] 0.22618794 0.33465260 0.12879614 1.58229002 0.25411121 0.20038697 #>  [97] 0.21076612 0.22063300 0.14627048 0.38272326 #>  #> [[2]] #>   [1] 0.49533369 0.21790280 0.21132863 0.50853899 0.12991737 0.21393065 #>   [7] 0.37625454 0.15044426 0.18557630 0.19134102 0.31622632 0.13592326 #>  [13] 0.31393839 0.18071248 0.16602440 0.12783851 0.41975925 0.24059637 #>  [19] 0.50266192 0.16308872 0.52542505 0.14443274 0.11613127 0.21903495 #>  [25] 0.22144174 0.10634338 0.23837872 0.87641235 0.26053470 0.16830009 #>  [31] 0.26533128 0.23475609 0.19978981 0.14754964 0.38769917 0.20811497 #>  [37] 0.19311046 0.21805196 0.11777125 0.21805196 0.20156731 0.22503077 #>  [43] 0.16719951 0.18271725 0.36899922 0.19970142 0.22984328 0.16888852 #>  [49] 0.15772463 0.14029879 0.38300912 6.37876528 0.19456094 0.05585043 #>  [55] 0.36750728 0.16888852 0.16055091 0.18454729 0.15758583 0.21966845 #>  [61] 0.19576505 0.36832384 0.29600309 0.15629316 0.11750815 0.14283549 #>  [67] 0.34619970 0.28154974 0.21481076 0.20259712 0.21311527 0.28408400 #>  [73] 0.31254966 0.15693373 0.14694409 0.21384984 0.14189051 0.15298061 #>  [79] 0.16228782 0.19340977 2.36340422 0.19607719 1.25635858 0.15177587 #>  [85] 0.32172107 0.11149303 0.07074771 0.21218978 0.21013675 0.14548796 #>  [91] 0.18829682 0.20021486 0.29721012 6.70765888 0.16740331 0.17198017 #>  [97] 0.25960303 7.99712131 0.16270696 0.10508260 #>"},{"path":"https://nanx.me/enpls/reference/print.enspls.fit.html","id":null,"dir":"Reference","previous_headings":"","what":"Print Fitted Ensemble Sparse Partial Least Squares Object ‚Äî print.enspls.fit","title":"Print Fitted Ensemble Sparse Partial Least Squares Object ‚Äî print.enspls.fit","text":"Print coefficients model enspls.fit object.","code":""},{"path":"https://nanx.me/enpls/reference/print.enspls.fit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print Fitted Ensemble Sparse Partial Least Squares Object ‚Äî print.enspls.fit","text":"","code":"# S3 method for enspls.fit print(x, ...)"},{"path":"https://nanx.me/enpls/reference/print.enspls.fit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print Fitted Ensemble Sparse Partial Least Squares Object ‚Äî print.enspls.fit","text":"x object class enspls.fit. ... Additional parameters print.","code":""},{"path":[]},{"path":"https://nanx.me/enpls/reference/print.enspls.fit.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Print Fitted Ensemble Sparse Partial Least Squares Object ‚Äî print.enspls.fit","text":"Nan Xiao <https://nanx.>","code":""},{"path":"https://nanx.me/enpls/reference/print.enspls.fit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print Fitted Ensemble Sparse Partial Least Squares Object ‚Äî print.enspls.fit","text":"","code":"data(\"logd1k\") x <- logd1k$x y <- logd1k$y  set.seed(42) fit <- enspls.fit(   x, y,   reptimes = 5, maxcomp = 3,   alpha = c(0.3, 0.6, 0.9) ) print(fit) #> Coefficients of the Models by Ensemble Sparse Partial Least Squares #> --- #>                             [,1]         [,2]         [,3]          [,4] #> BalabanJ            -0.043615048 -0.070476160 -0.061234111 -0.0641194287 #> BertzCT             -0.010797407 -0.010380918 -0.014190111 -0.0198473677 #> Chi0                 0.034719388  0.031396910  0.031244743  0.0305194922 #> Chi0n                0.053961369  0.051389288  0.054495519  0.0524801055 #> Chi0v                0.053701577  0.051940514  0.053866466  0.0534589673 #> Chi1                 0.051776232  0.049156542  0.049348357  0.0492213616 #> Chi1n                0.070459184  0.069096237  0.072714905  0.0727060040 #> Chi1v                0.044723121  0.043485995  0.047373453  0.0501593866 #> Chi2n                0.044969369  0.049246878  0.053608909  0.0505554796 #> Chi2v               -0.007655968 -0.004618584 -0.001476135  0.0001540116 #> Chi3n                0.032584667  0.042587170  0.046107374  0.0415386369 #> Chi3v               -0.028277116 -0.022984653 -0.021257238 -0.0203092032 #> Chi4n                0.025069486  0.035056020  0.037250699  0.0377062265 #> Chi4v               -0.032725942 -0.028311655 -0.028345799 -0.0254204075 #> EState_VSA1         -0.145952322 -0.151990047 -0.160770607 -0.1525700022 #> EState_VSA10        -0.156900443 -0.168802906 -0.175239253 -0.1722320471 #> EState_VSA11        -0.127792171 -0.135963476 -0.143448807 -0.1529079518 #> EState_VSA2         -0.088764258 -0.081331379 -0.090132085 -0.0733057615 #> EState_VSA3          0.056790068  0.028421271  0.053648385  0.0386607294 #> EState_VSA4          0.063669587  0.074797750  0.074053361  0.0699041874 #> EState_VSA5          0.076840942  0.113331436  0.116703240  0.1013286787 #> EState_VSA6         -0.039520870 -0.054418432 -0.060441879 -0.0391363977 #> EState_VSA7          0.167588096  0.158416601  0.168272101  0.1618998057 #> EState_VSA8          0.009235939  0.004258386 -0.006701922 -0.0011150675 #> EState_VSA9          0.160639733  0.170068653  0.176254590  0.1714440988 #> ExactMolWt           0.050748220  0.048487236  0.047997890  0.0454753788 #> FractionCSP3        -0.002537413  0.016775756  0.014177552  0.0000000000 #> HallKierAlpha        0.019451372  0.000000000  0.000000000  0.0329693176 #> HeavyAtomCount       0.041665347  0.039779625  0.039215273  0.0389117918 #> HeavyAtomMolWt       0.049142955  0.047099309  0.045859934  0.0431088851 #> Ipc                  0.057240507  0.060688810  0.069024848  0.0694421064 #> Kappa1               0.038204987  0.032402483  0.032511070  0.0348008587 #> Kappa2               0.073454618  0.061351458  0.062538464  0.0699833246 #> Kappa3               0.068769152  0.053787212  0.048842217  0.0663792137 #> LabuteASA            0.050468473  0.048957140  0.047963605  0.0492392904 #> MaxAbsEStateIndex   -0.058201076 -0.046954270 -0.035764073 -0.0459235492 #> MaxEStateIndex      -0.058201076 -0.046954270 -0.035764073 -0.0459235492 #> MinAbsEStateIndex    0.050724276  0.044527421  0.044215313  0.0353840523 #> MinEStateIndex       0.080735399  0.074187812  0.072888633  0.0724654251 #> MolMR                0.064441013  0.060992387  0.061907090  0.0617893424 #> MolWt                0.050700489  0.048453503  0.047956295  0.0454522770 #> NumValenceElectrons  0.041901095  0.039028411  0.040413395  0.0398859275 #> PEOE_VSA1           -0.123885717 -0.111986458 -0.128388290 -0.1335502496 #> PEOE_VSA10           0.060135647  0.072095820  0.042111810  0.0611046246 #> PEOE_VSA11           0.027518533  0.000000000  0.054256529  0.0593889088 #> PEOE_VSA12          -0.070409371 -0.085305819 -0.078339953 -0.0775848326 #> PEOE_VSA13           0.071124088  0.073838570  0.087264498  0.0780882742 #> PEOE_VSA14          -0.059283402 -0.052884362 -0.059018175 -0.0639531460 #> PEOE_VSA2           -0.135631007 -0.136699485 -0.158100226 -0.1453559333 #> PEOE_VSA3           -0.015399543 -0.030536558 -0.023616048 -0.0258053476 #> PEOE_VSA4            0.089159585  0.082572159  0.101865179  0.1083556038 #> PEOE_VSA5            0.000000000  0.000000000  0.000000000  0.0000000000 #> PEOE_VSA6            0.252455157  0.257218113  0.264862957  0.3016795122 #> PEOE_VSA7            0.131757300  0.126559513  0.126970928  0.1081498903 #> PEOE_VSA8           -0.251591255 -0.244659553 -0.247195649 -0.2892456024 #> PEOE_VSA9            0.093581834  0.074355909  0.075437882  0.0803304497 #> SMR_VSA1            -0.045809417 -0.040299095 -0.050701107 -0.0532047159 #> SMR_VSA10            0.025671513  0.036747988  0.020329048  0.0236814814 #> SMR_VSA2             0.000000000  0.000000000  0.000000000  0.0000000000 #> SMR_VSA3            -0.196156845 -0.207343129 -0.205718468 -0.1978050051 #> SMR_VSA4             0.086514311  0.092000949  0.090979644  0.1135589734 #> SMR_VSA5             0.144746921  0.144103173  0.158124866  0.1643202372 #> SMR_VSA6            -0.086355302 -0.087439103 -0.084443620 -0.0980728660 #> SMR_VSA7             0.021803034  0.011365422 -0.006054515  0.0030932243 #> SMR_VSA9             0.164334759  0.153864976  0.180528755  0.1579959854 #> SlogP_VSA1          -0.045042683 -0.031673412 -0.087011109 -0.0688301411 #> SlogP_VSA10          0.119767503  0.115394919  0.103222595  0.0843745870 #> SlogP_VSA11          0.114675123  0.110717941  0.114633271  0.0846142758 #> SlogP_VSA12          0.103280911  0.095740332  0.101496317  0.1105220578 #> SlogP_VSA2          -0.207711269 -0.202806412 -0.200423733 -0.2013781453 #> SlogP_VSA3          -0.153164458 -0.151392486 -0.134059624 -0.1516867090 #> SlogP_VSA4           0.080989430  0.078481646  0.076140508  0.0736978562 #> SlogP_VSA5           0.174022630  0.173399624  0.191735830  0.2059561988 #> SlogP_VSA6           0.136169116  0.133023697  0.110695001  0.1313060684 #> SlogP_VSA7           0.077780951  0.068859412  0.083787537  0.0846865586 #> SlogP_VSA8           0.000000000  0.000000000  0.067225424  0.0563976493 #> TPSA                -0.220618737 -0.215277058 -0.233074352 -0.2170641606 #> VSA_EState10         0.093743521  0.084141143  0.095789368  0.1014189884 #> VSA_EState8          0.089001823  0.076620959  0.083263325  0.0777088146 #> VSA_EState9         -0.089786907 -0.081994686 -0.094262874 -0.0921319769 #>                             [,5] #> BalabanJ            -0.073894883 #> BertzCT             -0.007687107 #> Chi0                 0.032319300 #> Chi0n                0.052919408 #> Chi0v                0.056854869 #> Chi1                 0.048305879 #> Chi1n                0.069904194 #> Chi1v                0.051215760 #> Chi2n                0.048557618 #> Chi2v                0.005050211 #> Chi3n                0.038590608 #> Chi3v               -0.016430846 #> Chi4n                0.028264216 #> Chi4v               -0.022830716 #> EState_VSA1         -0.151918402 #> EState_VSA10        -0.163913222 #> EState_VSA11        -0.114487283 #> EState_VSA2         -0.074990673 #> EState_VSA3          0.027238867 #> EState_VSA4          0.081673528 #> EState_VSA5          0.119173308 #> EState_VSA6         -0.062270377 #> EState_VSA7          0.169929249 #> EState_VSA8         -0.008508467 #> EState_VSA9          0.169614152 #> ExactMolWt           0.053132588 #> FractionCSP3         0.000000000 #> HallKierAlpha        0.000000000 #> HeavyAtomCount       0.039291679 #> HeavyAtomMolWt       0.051773716 #> Ipc                  0.040666065 #> Kappa1               0.035993825 #> Kappa2               0.066238470 #> Kappa3               0.056805777 #> LabuteASA            0.050833015 #> MaxAbsEStateIndex   -0.039681288 #> MaxEStateIndex      -0.039681288 #> MinAbsEStateIndex    0.058219064 #> MinEStateIndex       0.090836706 #> MolMR                0.065637066 #> MolWt                0.053101413 #> NumValenceElectrons  0.038876330 #> PEOE_VSA1           -0.131939533 #> PEOE_VSA10           0.063132746 #> PEOE_VSA11           0.000000000 #> PEOE_VSA12          -0.064913191 #> PEOE_VSA13           0.062907184 #> PEOE_VSA14          -0.053503851 #> PEOE_VSA2           -0.123394883 #> PEOE_VSA3           -0.021138001 #> PEOE_VSA4            0.044285049 #> PEOE_VSA5            0.000000000 #> PEOE_VSA6            0.269371381 #> PEOE_VSA7            0.118261626 #> PEOE_VSA8           -0.241824460 #> PEOE_VSA9            0.084102621 #> SMR_VSA1            -0.042033373 #> SMR_VSA10            0.054396319 #> SMR_VSA2             0.000000000 #> SMR_VSA3            -0.223644660 #> SMR_VSA4             0.086073286 #> SMR_VSA5             0.152844318 #> SMR_VSA6            -0.100483543 #> SMR_VSA7             0.017135164 #> SMR_VSA9             0.142266776 #> SlogP_VSA1          -0.055774803 #> SlogP_VSA10          0.082997064 #> SlogP_VSA11          0.088648633 #> SlogP_VSA12          0.112241959 #> SlogP_VSA2          -0.204690587 #> SlogP_VSA3          -0.156349706 #> SlogP_VSA4           0.077452104 #> SlogP_VSA5           0.198178112 #> SlogP_VSA6           0.127587128 #> SlogP_VSA7           0.000000000 #> SlogP_VSA8           0.000000000 #> TPSA                -0.214509241 #> VSA_EState10         0.084382079 #> VSA_EState8          0.077845374 #> VSA_EState9         -0.085217775"},{"path":"https://nanx.me/enpls/reference/print.enspls.fs.html","id":null,"dir":"Reference","previous_headings":"","what":"Print enspls.fs Object ‚Äî print.enspls.fs","title":"Print enspls.fs Object ‚Äî print.enspls.fs","text":"Print enspls.fs object.","code":""},{"path":"https://nanx.me/enpls/reference/print.enspls.fs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print enspls.fs Object ‚Äî print.enspls.fs","text":"","code":"# S3 method for enspls.fs print(x, sort = TRUE, nvar = NULL, ...)"},{"path":"https://nanx.me/enpls/reference/print.enspls.fs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print enspls.fs Object ‚Äî print.enspls.fs","text":"x object class enspls.fs. sort variables sorted decreasing order importance? nvar Number top variables show. Ignored sort = FALSE. ... Additional parameters print.","code":""},{"path":[]},{"path":"https://nanx.me/enpls/reference/print.enspls.fs.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Print enspls.fs Object ‚Äî print.enspls.fs","text":"Nan Xiao <https://nanx.>","code":""},{"path":"https://nanx.me/enpls/reference/print.enspls.fs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print enspls.fs Object ‚Äî print.enspls.fs","text":"","code":"data(\"logd1k\") x <- logd1k$x y <- logd1k$y  set.seed(42) fs <- enspls.fs(   x, y,   reptimes = 5, maxcomp = 3,   alpha = c(0.3, 0.6, 0.9) ) print(fs, nvar = 10L) #> Variable Importance by Ensemble Sparse Partial Least Squares #> --- #>                     Importance #> SlogP_VSA2            70.23155 #> Chi0n                 43.24274 #> Chi1n                 42.86634 #> LabuteASA             42.44808 #> Chi1                  37.99326 #> HeavyAtomCount        36.06243 #> EState_VSA7           34.00841 #> NumValenceElectrons   32.67029 #> MolMR                 31.76546 #> Chi0v                 30.18469"},{"path":"https://nanx.me/enpls/reference/print.enspls.od.html","id":null,"dir":"Reference","previous_headings":"","what":"Print enspls.od Object ‚Äî print.enspls.od","title":"Print enspls.od Object ‚Äî print.enspls.od","text":"Print enspls.od object.","code":""},{"path":"https://nanx.me/enpls/reference/print.enspls.od.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print enspls.od Object ‚Äî print.enspls.od","text":"","code":"# S3 method for enspls.od print(x, ...)"},{"path":"https://nanx.me/enpls/reference/print.enspls.od.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print enspls.od Object ‚Äî print.enspls.od","text":"x object class enspls.od. ... Additional parameters print.","code":""},{"path":[]},{"path":"https://nanx.me/enpls/reference/print.enspls.od.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Print enspls.od Object ‚Äî print.enspls.od","text":"Nan Xiao <https://nanx.>","code":""},{"path":"https://nanx.me/enpls/reference/print.enspls.od.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print enspls.od Object ‚Äî print.enspls.od","text":"","code":"data(\"logd1k\") x <- logd1k$x y <- logd1k$y  set.seed(42) od <- enspls.od(   x, y,   reptimes = 5, maxcomp = 3,   alpha = c(0.3, 0.6, 0.9) ) print(od) #> Outlier Detection by Ensemble Sparse Partial Least Squares #> --- #> Mean residual for each sample: #>    [1] 0.889121733 0.944360826 0.659919009 1.553359661 0.182007600 0.103156639 #>    [7] 1.417750727 0.352269534         NaN 0.719662935 1.577285950 0.886322164 #>   [13]         NaN         NaN 1.433002200         NaN         NaN 0.064964882 #>   [19] 0.539024511 1.176465464 1.763616725 0.974383861 2.331544675 1.630412989 #>   [25]         NaN         NaN 1.673855981 1.194823202 0.609043502 0.118995773 #>   [31] 0.231153502         NaN         NaN 2.421392582 1.134705028 0.957769118 #>   [37]         NaN 0.094996185         NaN         NaN 0.097428381 1.216057246 #>   [43] 0.971779788 0.226682459 0.282579507         NaN 0.692736216 0.469417129 #>   [49]         NaN 0.313170859 0.128881705 0.216733915         NaN         NaN #>   [55] 0.291863057 0.349740790 0.223591786         NaN         NaN 0.056414599 #>   [61] 1.770617522 2.284076930 1.234920930 1.819103641         NaN 1.390692387 #>   [67] 0.643625414         NaN 0.763738234         NaN 0.016056496         NaN #>   [73] 0.599938756         NaN 0.663375161 0.914730913         NaN 1.935630167 #>   [79] 0.096602297 0.069842632 0.352693984         NaN         NaN 0.123930557 #>   [85] 0.311745819 1.314340167         NaN 1.708970278 1.180007758         NaN #>   [91]         NaN         NaN 1.579447754         NaN         NaN 0.281984167 #>   [97] 0.060650979 2.732753776 1.152030762 0.253437216 1.717650681 2.011554407 #>  [103] 1.977305919 0.194234295         NaN 0.118712476 2.072159010 0.553563404 #>  [109]         NaN         NaN 1.459538398 0.511281186         NaN 0.992045431 #>  [115]         NaN         NaN 0.221214989         NaN 1.580490769 1.446729817 #>  [121] 1.656232570 0.369288929 0.837888998 1.480998570         NaN         NaN #>  [127] 0.098582723 0.128043546         NaN         NaN         NaN 0.195128286 #>  [133]         NaN 0.270711947         NaN 0.857320137 1.297781170 0.070377432 #>  [139] 1.126602946 0.460243074 1.094722824         NaN 1.490142858 1.630840006 #>  [145]         NaN         NaN         NaN 0.737775583 1.652322724 0.678973654 #>  [151] 1.414790571 0.129581004 0.896753588 0.213962544         NaN         NaN #>  [157] 0.439816134 0.285847939 2.290168529 0.990984196 0.555090130 0.774571025 #>  [163]         NaN 1.219505707         NaN 1.286094435 2.219361601 0.626655805 #>  [169] 1.005622001         NaN         NaN         NaN 1.088345100 0.317735454 #>  [175]         NaN 0.689005195 0.545596165         NaN         NaN 0.480418746 #>  [181] 0.168736326 0.010145151 1.436185967 2.408683417         NaN 0.558905504 #>  [187] 1.841942682 0.732790582         NaN         NaN 1.149961226         NaN #>  [193] 0.028770610 1.532850521 1.576432607 2.156655302 1.040067058         NaN #>  [199] 1.058475402 0.570634445 1.149078843 0.702105268         NaN         NaN #>  [205] 1.115525243 0.793220335         NaN         NaN 1.345724107         NaN #>  [211]         NaN 0.869600908         NaN 0.281147228         NaN 0.405879046 #>  [217] 0.521041463         NaN 0.413674419         NaN 0.363111176 0.365489147 #>  [223] 0.217843304 1.276426230 1.191550796         NaN         NaN 1.876500803 #>  [229] 0.088590815 0.906359502         NaN         NaN 1.008005220 0.283200082 #>  [235] 1.558498243         NaN 1.080852369         NaN 0.776890361 0.475878079 #>  [241] 1.573078120         NaN 0.949479466 0.488440570         NaN 0.048343089 #>  [247]         NaN         NaN 0.414286926 0.906356830         NaN         NaN #>  [253] 0.032632836 1.159515501 0.534709654 0.971118936 1.253389821 1.524358278 #>  [259]         NaN 0.569959319 1.853973432         NaN 1.173961689 0.276757854 #>  [265] 0.241206860         NaN         NaN         NaN         NaN 0.135967659 #>  [271] 1.273815333 0.046457258         NaN         NaN 0.670052256 1.540170371 #>  [277]         NaN 1.320332581 0.041564471 1.427902458 0.269918556 1.187784737 #>  [283] 0.862655827         NaN         NaN 0.934391823 0.774834378         NaN #>  [289] 0.402762650 0.079473869 0.156520023 1.196766845 1.295931423         NaN #>  [295] 0.961821513         NaN         NaN         NaN         NaN 0.893040267 #>  [301]         NaN 1.672844357 1.002939556         NaN 1.608028459 0.832135003 #>  [307] 1.065516657 1.312642514         NaN 0.555743321         NaN 0.836312722 #>  [313] 0.535248289         NaN 1.688946252 0.312212656 0.479838094         NaN #>  [319] 0.566169633 1.080450017 0.583447847 0.516467687 0.094813394 0.861557239 #>  [325] 0.825045402         NaN         NaN 1.070656044 1.134164374 1.482067733 #>  [331]         NaN 0.111390801 0.519191023 0.132553505 0.598799453 1.372497616 #>  [337] 0.277210614 0.837258848         NaN 0.818766683 0.789880594 0.468123381 #>  [343] 0.876508803 1.096420770         NaN 0.775037361         NaN 0.321514522 #>  [349]         NaN 0.886729995 0.694851482 1.964856593 0.396132928 0.535395672 #>  [355]         NaN 2.086231981 1.033324752         NaN 0.792485875 0.944716574 #>  [361] 0.894271036         NaN 0.801878460         NaN 0.512540561         NaN #>  [367] 2.598707769 0.584592030 1.047018835         NaN 0.422394331         NaN #>  [373] 0.755021996 0.400154769 0.625964672 0.905916845 1.071740384 0.127448438 #>  [379] 1.721015195 0.745159150 1.432592077         NaN         NaN 1.137288893 #>  [385] 0.603406947 0.991520680         NaN 0.462590258 0.771887497         NaN #>  [391] 1.214943201 1.302642256 0.946353322 1.325401667         NaN 0.645200567 #>  [397]         NaN         NaN 0.980416479 1.465888454 0.729989341 0.286766317 #>  [403] 0.122443413         NaN 0.635150504 2.142414312 1.012259307 0.458178922 #>  [409] 0.060061351 0.716867781 0.100756003         NaN 0.695854819 1.295969137 #>  [415] 0.998155453         NaN         NaN 1.598963139 0.926077738         NaN #>  [421] 0.595597484 1.519789409 1.185741392 1.109245377         NaN 1.386481486 #>  [427]         NaN 2.490837067 3.006938970         NaN         NaN         NaN #>  [433] 1.625206063         NaN 0.644101361 1.272698016 0.993550170         NaN #>  [439]         NaN         NaN         NaN         NaN 0.424785045 0.161529040 #>  [445]         NaN         NaN 0.898400118         NaN 1.051996487         NaN #>  [451] 0.610528729 1.127516889 0.659074100 0.975614403 0.055617691 0.923693645 #>  [457] 0.971582029 0.952299043 0.078955611 1.562751374 1.119696022 0.424752754 #>  [463] 0.046338817 0.687959963 0.197995284 1.617971638         NaN 0.698119158 #>  [469]         NaN 1.392474603         NaN 0.606025362 0.881819395 0.262556755 #>  [475]         NaN 0.753419030 0.808474332 0.258946651 0.840082413 1.624401439 #>  [481]         NaN         NaN         NaN 0.644013253 1.867102685         NaN #>  [487] 1.852717929 2.254930342 1.304587557         NaN         NaN 0.638667441 #>  [493]         NaN 1.655597980 2.132984898 1.519443392 1.531975949 0.116968951 #>  [499]         NaN 0.080934549 0.397074085 1.056379183 0.703089012         NaN #>  [505] 1.218775208 1.044693223 2.924048892         NaN 0.681920898         NaN #>  [511] 1.221983772 1.266622008 0.510747480         NaN         NaN 0.456115076 #>  [517] 1.530109110 0.386849563 0.757385436 1.570582044 1.509668982 1.011794548 #>  [523]         NaN 0.330201354 0.298411071 2.317700890 0.378604239 1.398732071 #>  [529]         NaN 0.365165387 1.573258405         NaN         NaN 1.818667781 #>  [535] 1.391597843 1.399797587 0.019630909 1.179066421 1.492879699 1.358508008 #>  [541] 0.330710226 0.744572268 1.155996724         NaN         NaN         NaN #>  [547]         NaN         NaN 0.238233190 0.018784830         NaN 0.356666754 #>  [553] 0.193799819 1.421897111 0.973698304 0.618269287         NaN 0.783762314 #>  [559]         NaN         NaN         NaN 0.499748377 0.386027422         NaN #>  [565] 1.513945276         NaN 1.365802843 0.150388023         NaN 0.468691605 #>  [571] 0.241295904         NaN 0.574934123 0.287859665 0.461039522 0.001883107 #>  [577] 1.242989289         NaN         NaN 2.117274716 1.037715031         NaN #>  [583]         NaN 0.554811599 0.895104230 0.699153575 0.610816385 0.235249981 #>  [589] 1.504591325 0.863417804 0.860892111         NaN 2.387297624         NaN #>  [595] 0.898968540         NaN 0.904413132 0.682276362 0.386684345 0.814938482 #>  [601] 0.361291720         NaN 0.474088917 0.765948520         NaN 0.828926949 #>  [607] 0.021218181 1.094737587 1.293079594 1.199076433 0.413616266         NaN #>  [613] 0.632479678         NaN 0.754830144 0.742184744 0.817123503         NaN #>  [619] 0.318466001 1.508187267         NaN 0.863206515         NaN 0.545346286 #>  [625] 0.111979266         NaN 2.837550703 1.767622432 1.508860017         NaN #>  [631]         NaN 1.515081597         NaN 0.365109729 1.829633121 1.727458585 #>  [637]         NaN 1.127976332 0.272496381 1.286697848         NaN 0.651124971 #>  [643] 0.720110977         NaN         NaN         NaN 0.051068368         NaN #>  [649] 1.109970409 0.616008922 0.176933217 1.323149777 0.761473888 0.183538550 #>  [655] 0.716881147 0.656803729 1.067466415 0.940825294         NaN 0.549232695 #>  [661] 1.614139557 0.060761880 0.694762467         NaN 1.085414996         NaN #>  [667]         NaN         NaN 0.915713149         NaN 0.230962285         NaN #>  [673] 0.311562307         NaN 0.926984951 0.672030060 0.128247226 1.488651878 #>  [679] 0.553740558         NaN         NaN         NaN         NaN 0.202215475 #>  [685] 0.180367456 0.233586192         NaN         NaN 0.809580454 1.124948522 #>  [691] 0.122641907         NaN 0.597631339 0.034949035         NaN         NaN #>  [697] 0.688848048 0.635412009         NaN 0.450892984 0.813173279 0.902711488 #>  [703] 0.249044675 0.137800852 0.386376048 0.786642705 0.903477125 0.216080483 #>  [709] 0.014651591 0.735636648 0.701216006         NaN         NaN 2.465594821 #>  [715] 0.588547450 0.040694861 0.352552949 0.679686057 0.743833681         NaN #>  [721] 0.122006435 0.393127277         NaN         NaN         NaN         NaN #>  [727] 0.912823335 4.184469047         NaN 0.757030346 0.318163031 0.685837077 #>  [733]         NaN         NaN 0.357544003 0.297223534 0.643235747         NaN #>  [739] 0.300901402         NaN 0.182745803         NaN 0.510631958 0.031533879 #>  [745]         NaN 0.102039700 0.521467707         NaN 1.108066826 0.862878347 #>  [751] 0.618123836 2.713071087         NaN         NaN 1.257488104 0.347694882 #>  [757]         NaN 0.671025873         NaN 1.041396478 1.029374635         NaN #>  [763]         NaN 2.300672856 0.482595721 0.450810298         NaN 1.185960680 #>  [769] 1.210930131         NaN         NaN 1.368892890 1.687557017 1.418929624 #>  [775] 0.883943015 0.262111490 1.416563234         NaN 1.303967343         NaN #>  [781] 3.147505982 0.893403597         NaN         NaN 2.860234025 1.333476480 #>  [787] 1.233268379         NaN 3.528281123         NaN         NaN 1.292243755 #>  [793]         NaN         NaN 0.566939766 1.218527593         NaN 0.201362102 #>  [799]         NaN 2.026458667 0.998412750 1.491381918 1.825939297 1.436330472 #>  [805] 1.116603535         NaN 0.293999592         NaN 1.015628206 1.272347589 #>  [811] 0.635667270         NaN         NaN 1.467943963 0.392398241 1.728591113 #>  [817]         NaN 2.430438151 0.756188671 0.269307189         NaN 0.192204824 #>  [823] 2.457672251 0.692905057         NaN 0.375798779 0.860661226         NaN #>  [829] 1.485683857 1.476233121         NaN 2.648569316 1.383836862 0.057024154 #>  [835]         NaN         NaN 0.549859674 1.779883702 1.138157172 1.209073015 #>  [841] 1.321466096 0.280636644 1.439958535 1.221713293 1.967879197         NaN #>  [847]         NaN 1.069356359         NaN         NaN 1.098596886         NaN #>  [853] 0.687430828         NaN 1.000235746 1.400486043 0.236954519         NaN #>  [859] 0.914405581         NaN 1.259206614 0.794161851 1.256842341         NaN #>  [865] 1.366014331 0.879832242         NaN         NaN 1.544511359 1.591463861 #>  [871] 0.518727100         NaN         NaN 0.177724741         NaN 0.234378886 #>  [877] 2.241913564 0.129369477 0.159444807         NaN 0.675447679 0.726056561 #>  [883] 0.981752461         NaN 1.999637645 1.039604413         NaN         NaN #>  [889]         NaN 2.303551994 2.359265931 2.270094509         NaN 2.006101743 #>  [895] 1.695833968         NaN 2.460051563         NaN         NaN 0.138207520 #>  [901] 0.153878106         NaN         NaN 0.258691348 0.294262461 0.824086847 #>  [907] 2.639493118 0.358718206 0.408682886 2.547364419         NaN 2.675683007 #>  [913]         NaN 2.327956549         NaN 1.029259855 0.393054231         NaN #>  [919] 0.165790452         NaN 0.572882526 0.328206384 0.587336218 0.693326231 #>  [925] 0.618988570 0.505129224 0.626951636         NaN         NaN         NaN #>  [931] 0.982948927         NaN 1.544821633 0.173672536 2.499904710 1.032958846 #>  [937] 0.066482059         NaN 0.078067234         NaN 0.449616334 0.283202310 #>  [943]         NaN 0.642993737 4.125357088 1.225440021         NaN 1.072436367 #>  [949]         NaN 1.311723872 0.366665981         NaN 0.814938703 2.355315761 #>  [955] 1.621426197 1.446749751 0.910032391         NaN 0.575421592 0.560139241 #>  [961]         NaN 0.302311720 0.289879300 1.357201643         NaN         NaN #>  [967]         NaN 4.546449618         NaN 4.663657917         NaN         NaN #>  [973] 0.141249293 1.884298976 2.036564743 0.343153509 1.711775447         NaN #>  [979]         NaN 0.400716933 1.007394298 0.172583071 0.189177567         NaN #>  [985]         NaN 0.828668006 1.245164156 0.816523789 0.024226635 0.375541533 #>  [991] 0.370036865 0.315830989 1.322978398 0.965509038         NaN 1.431423085 #>  [997] 0.752657875 1.332284336 1.222697228         NaN #> --- #> Residual SD for each sample: #>    [1]           NA           NA           NA           NA 0.0171154723 #>    [6] 0.0158473391           NA           NA           NA           NA #>   [11]           NA           NA           NA           NA           NA #>   [16]           NA           NA           NA 0.0623670808 0.0501413952 #>   [21] 0.0671928676           NA           NA 0.1055195529           NA #>   [26]           NA           NA 0.0196944447           NA 0.0632390513 #>   [31] 0.0837910396           NA           NA           NA 0.0505388581 #>   [36]           NA           NA 0.0475580210           NA           NA #>   [41]           NA           NA 0.1094034557 0.0526312036           NA #>   [46]           NA           NA           NA           NA 0.2178361758 #>   [51]           NA           NA           NA           NA 0.0154160685 #>   [56]           NA 0.3101330462           NA           NA           NA #>   [61]           NA           NA           NA 0.1885055385           NA #>   [66]           NA           NA           NA           NA           NA #>   [71] 0.0083771373           NA 0.0027088134           NA           NA #>   [76]           NA           NA           NA           NA 0.0618274331 #>   [81]           NA           NA           NA           NA           NA #>   [86] 0.1196798517           NA           NA           NA           NA #>   [91]           NA           NA 0.1009323734           NA           NA #>   [96] 0.2305763428           NA           NA 0.1835951837           NA #>  [101] 0.1952629170 0.1376454754           NA 0.0220325751           NA #>  [106]           NA           NA           NA           NA           NA #>  [111]           NA 0.0081745657           NA           NA           NA #>  [116]           NA           NA           NA 0.0229768280 0.2596122947 #>  [121] 0.1751606596 0.0527573615 0.0072092244 0.1612628944           NA #>  [126]           NA 0.0786339326 0.0045126985           NA           NA #>  [131]           NA           NA           NA 0.1334887227           NA #>  [136] 0.1014512696 0.0145410115 0.0372047972           NA           NA #>  [141] 0.0415691574           NA           NA           NA           NA #>  [146]           NA           NA 0.1562482194 0.0112419368 0.0354181931 #>  [151]           NA           NA 0.0373514754           NA           NA #>  [156]           NA 0.2341555621           NA           NA           NA #>  [161] 0.1407962621           NA           NA           NA           NA #>  [166] 0.0073109838 0.0287425869 0.1464108088 0.0004577004           NA #>  [171]           NA           NA 0.0602280554           NA           NA #>  [176]           NA 0.0384398684           NA           NA           NA #>  [181]           NA 0.1582426586 0.1577204890           NA           NA #>  [186] 0.0652438555 0.0147384664 0.1327604673           NA           NA #>  [191] 0.1018241647           NA 0.0032141976 0.2134807632           NA #>  [196]           NA           NA           NA           NA           NA #>  [201]           NA           NA           NA           NA 0.0712228246 #>  [206] 0.2060761475           NA           NA           NA           NA #>  [211]           NA           NA           NA           NA           NA #>  [216] 0.0145987275           NA           NA           NA           NA #>  [221]           NA           NA           NA 0.1302122009 0.1111612343 #>  [226]           NA           NA           NA           NA 0.1092072376 #>  [231]           NA           NA           NA 0.0696269931           NA #>  [236]           NA           NA           NA 0.2127770831 0.0533701324 #>  [241]           NA           NA 0.0878473935           NA           NA #>  [246]           NA           NA           NA           NA           NA #>  [251]           NA           NA           NA           NA           NA #>  [256]           NA           NA           NA           NA 0.0779699860 #>  [261] 0.2098673451           NA 0.0509910778           NA           NA #>  [266]           NA           NA           NA           NA 0.0082187469 #>  [271]           NA           NA           NA           NA 0.0316879019 #>  [276]           NA           NA           NA           NA 0.0995218266 #>  [281]           NA           NA 0.0777723554           NA           NA #>  [286]           NA 0.0345191142           NA           NA           NA #>  [291]           NA           NA           NA           NA 0.0755677859 #>  [296]           NA           NA           NA           NA           NA #>  [301]           NA           NA           NA           NA 0.0974811430 #>  [306] 0.2473969937 0.1070282596           NA           NA 0.2501080376 #>  [311]           NA           NA 0.1030179130           NA 0.0614973215 #>  [316]           NA           NA           NA 0.0468138281 0.1264319869 #>  [321]           NA 0.0938245596           NA           NA           NA #>  [326]           NA           NA           NA           NA 0.0218556368 #>  [331]           NA           NA 0.1805464823           NA           NA #>  [336]           NA           NA           NA           NA 0.0218421390 #>  [341]           NA           NA 0.0315638020 0.0795907997           NA #>  [346]           NA           NA           NA           NA           NA #>  [351]           NA           NA 0.0076599618           NA           NA #>  [356] 0.1897475357 0.0107889322           NA 0.0903125289           NA #>  [361]           NA           NA 0.0919528110           NA           NA #>  [366]           NA           NA 0.0683112453           NA           NA #>  [371]           NA           NA           NA           NA           NA #>  [376]           NA           NA 0.0536573986           NA 0.1567149491 #>  [381] 0.0182879143           NA           NA           NA           NA #>  [386]           NA           NA           NA 0.1066057426           NA #>  [391] 0.2201342341 0.0951902925           NA           NA           NA #>  [396]           NA           NA           NA           NA           NA #>  [401]           NA           NA           NA           NA           NA #>  [406]           NA           NA           NA           NA           NA #>  [411]           NA           NA 0.0895035848 0.1050829623 0.1774045437 #>  [416]           NA           NA 0.0376346002           NA           NA #>  [421]           NA 0.0243164313           NA 0.0698986349           NA #>  [426] 0.0400186158           NA           NA           NA           NA #>  [431]           NA           NA 0.1036875821           NA 0.0412060448 #>  [436]           NA           NA           NA           NA           NA #>  [441]           NA           NA 0.0272994371           NA           NA #>  [446]           NA           NA           NA 0.0997877475           NA #>  [451]           NA           NA           NA           NA           NA #>  [456] 0.0256287314 0.0433296573           NA 0.0112333470           NA #>  [461]           NA           NA 0.0193224073 0.0462379471           NA #>  [466] 0.0908316305           NA 0.1068107672           NA           NA #>  [471]           NA 0.1128441006           NA           NA           NA #>  [476]           NA           NA 0.0914857907           NA 0.0473929680 #>  [481]           NA           NA           NA           NA           NA #>  [486]           NA 0.0513497468 0.1030234453 0.0303100265           NA #>  [491]           NA           NA           NA           NA 0.0001835705 #>  [496]           NA 0.0214282806 0.2375034180           NA           NA #>  [501] 0.2607610345           NA 0.1058833917           NA 0.2106705660 #>  [506]           NA           NA           NA           NA           NA #>  [511] 0.0994688989 0.0383744629           NA           NA           NA #>  [516]           NA           NA 0.0720512361 0.0401027529           NA #>  [521] 0.0480609858           NA           NA           NA           NA #>  [526]           NA           NA 0.0517415914           NA 0.0179497038 #>  [531]           NA           NA           NA 0.0218446282           NA #>  [536]           NA           NA           NA           NA           NA #>  [541] 0.0206326084           NA           NA           NA           NA #>  [546]           NA           NA           NA 0.0308707100 0.0886034444 #>  [551]           NA 0.1305748956           NA           NA 0.1572416857 #>  [556] 0.0809145362           NA           NA           NA           NA #>  [561]           NA           NA 0.0948822833           NA           NA #>  [566]           NA           NA           NA           NA           NA #>  [571] 0.0381776769           NA           NA           NA           NA #>  [576]           NA 0.0658491386           NA           NA           NA #>  [581] 0.1055279054           NA           NA           NA 0.0655905098 #>  [586]           NA           NA 0.1255736831           NA 0.0492012308 #>  [591]           NA           NA           NA           NA           NA #>  [596]           NA           NA           NA 0.0947584203           NA #>  [601]           NA           NA 0.0032752950 0.1482277903           NA #>  [606] 0.0843463328           NA           NA 0.0178256680 0.1718526588 #>  [611]           NA           NA           NA           NA 0.0220050718 #>  [616] 0.2402639354           NA           NA           NA           NA #>  [621]           NA 0.0164261129           NA 0.0381759889           NA #>  [626]           NA 0.1645839828           NA           NA           NA #>  [631]           NA 0.0822951220           NA 0.2428995995           NA #>  [636]           NA           NA           NA 0.0530087025 0.1153917819 #>  [641]           NA           NA           NA           NA           NA #>  [646]           NA           NA           NA           NA           NA #>  [651] 0.0342214667           NA           NA 0.0625078644           NA #>  [656] 0.0453761886 0.0154623254           NA           NA           NA #>  [661] 0.0718482525           NA           NA           NA 0.0831091485 #>  [666]           NA           NA           NA           NA           NA #>  [671]           NA           NA 0.0307869892           NA 0.0270529471 #>  [676]           NA           NA           NA           NA           NA #>  [681]           NA           NA           NA 0.0402544249           NA #>  [686]           NA           NA           NA           NA 0.0892174913 #>  [691] 0.0391950871           NA 0.0753923797           NA           NA #>  [696]           NA           NA 0.0711444378           NA 0.0384711960 #>  [701]           NA           NA           NA 0.0072219404           NA #>  [706]           NA 0.0090293655 0.0629643779           NA           NA #>  [711]           NA           NA           NA 0.0114785858 0.1263871569 #>  [716]           NA           NA           NA           NA           NA #>  [721]           NA 0.1641248663           NA           NA           NA #>  [726]           NA           NA           NA           NA 0.2860518487 #>  [731]           NA           NA           NA           NA 0.1026633050 #>  [736]           NA           NA           NA 0.2194112273           NA #>  [741]           NA           NA 0.1427785232           NA           NA #>  [746]           NA           NA           NA 0.1032520952           NA #>  [751] 0.0551147057           NA           NA           NA 0.0579656031 #>  [756]           NA           NA           NA           NA           NA #>  [761] 0.0011014079           NA           NA           NA 0.0758199206 #>  [766]           NA           NA           NA           NA           NA #>  [771]           NA 0.0383555093           NA           NA           NA #>  [776]           NA 0.0670658064           NA           NA           NA #>  [781]           NA 0.1193936223           NA           NA           NA #>  [786] 0.0951916506 0.0760853373           NA           NA           NA #>  [791]           NA           NA           NA           NA           NA #>  [796] 0.0586987033           NA           NA           NA           NA #>  [801]           NA 0.0343150273           NA 0.0562114547           NA #>  [806]           NA           NA           NA 0.0256030545           NA #>  [811] 0.0354468836           NA           NA 0.0680229430           NA #>  [816]           NA           NA           NA           NA           NA #>  [821]           NA           NA           NA           NA           NA #>  [826]           NA 0.0373107092           NA           NA           NA #>  [831]           NA           NA 0.0293420962 0.1469296756           NA #>  [836]           NA 0.0589767098           NA           NA           NA #>  [841] 0.0702147232           NA 0.1002308404           NA           NA #>  [846]           NA           NA           NA           NA           NA #>  [851]           NA           NA 0.0658603060           NA 0.1556921582 #>  [856]           NA 0.0747929557           NA 0.1366661999           NA #>  [861] 0.1049839386 0.0281475178           NA           NA           NA #>  [866] 0.0581785289           NA           NA 0.1844665397           NA #>  [871]           NA           NA           NA 0.0607447703           NA #>  [876]           NA 0.0113536171           NA           NA           NA #>  [881]           NA           NA           NA           NA           NA #>  [886] 0.1586546030           NA           NA           NA           NA #>  [891] 0.0461022831           NA           NA           NA           NA #>  [896]           NA           NA           NA           NA           NA #>  [901] 0.0448467737           NA           NA           NA           NA #>  [906] 0.0356350998           NA 0.0421612190           NA 0.0411326094 #>  [911]           NA           NA           NA           NA           NA #>  [916] 0.0892377011           NA           NA 0.0288050769           NA #>  [921] 0.0052520574 0.0444277521           NA 0.0641534856           NA #>  [926]           NA 0.0428396078           NA           NA           NA #>  [931]           NA           NA 0.0774072302           NA           NA #>  [936]           NA           NA           NA 0.1730317926           NA #>  [941] 0.1329752242 0.0757036052           NA           NA           NA #>  [946] 0.0422357717           NA           NA           NA 0.0713975658 #>  [951] 0.3086777665           NA           NA 0.0510624786           NA #>  [956]           NA           NA           NA 0.0832205547           NA #>  [961]           NA 0.0816891075           NA 0.1778644632           NA #>  [966]           NA           NA           NA           NA 0.0345896713 #>  [971]           NA           NA           NA           NA 0.1400977251 #>  [976]           NA           NA           NA           NA 0.0361165793 #>  [981] 0.0199215171           NA           NA           NA           NA #>  [986] 0.0526988376           NA           NA           NA           NA #>  [991]           NA 0.1091467964           NA 0.0984162103           NA #>  [996] 0.0887187260 0.0258248632 0.1057815133           NA           NA"},{"path":"https://nanx.me/enpls/reference/rgb2alpha.html","id":null,"dir":"Reference","previous_headings":"","what":"Add transparency level to hex colors ‚Äî rgb2alpha","title":"Add transparency level to hex colors ‚Äî rgb2alpha","text":"Add transparency level hex colors","code":""},{"path":"https://nanx.me/enpls/reference/rgb2alpha.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add transparency level to hex colors ‚Äî rgb2alpha","text":"","code":"rgb2alpha(raw_col, alpha)"},{"path":"https://nanx.me/enpls/reference/rgb2alpha.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add transparency level to hex colors ‚Äî rgb2alpha","text":"Color hex value (transparency)","code":""},{"path":"https://nanx.me/enpls/news/index.html","id":"enpls-61-2019-05-17","dir":"Changelog","previous_headings":"","what":"enpls 6.1 (2019-05-17)","title":"enpls 6.1 (2019-05-17)","text":"CRAN release: 2019-05-18","code":""},{"path":"https://nanx.me/enpls/news/index.html","id":"improvements-6-1","dir":"Changelog","previous_headings":"","what":"Improvements","title":"enpls 6.1 (2019-05-17)","text":"Switched tidyverse code style. Updated vignette style. Updated GitHub repository links due handle change.","code":""},{"path":"https://nanx.me/enpls/news/index.html","id":"enpls-60-2018-05-13","dir":"Changelog","previous_headings":"","what":"enpls 6.0 (2018-05-13)","title":"enpls 6.0 (2018-05-13)","text":"CRAN release: 2018-05-13","code":""},{"path":"https://nanx.me/enpls/news/index.html","id":"improvements-6-0","dir":"Changelog","previous_headings":"","what":"Improvements","title":"enpls 6.0 (2018-05-13)","text":"New URL documentation website: https://nanx./enpls/.","code":""},{"path":"https://nanx.me/enpls/news/index.html","id":"enpls-59-2017-09-27","dir":"Changelog","previous_headings":"","what":"enpls 5.9 (2017-09-27)","title":"enpls 5.9 (2017-09-27)","text":"CRAN release: 2017-09-27","code":""},{"path":"https://nanx.me/enpls/news/index.html","id":"improvements-5-9","dir":"Changelog","previous_headings":"","what":"Improvements","title":"enpls 5.9 (2017-09-27)","text":"Use system font stack instead Google Fonts vignettes avoid pandoc SSL issue.","code":""},{"path":"https://nanx.me/enpls/news/index.html","id":"enpls-58-2017-03-24","dir":"Changelog","previous_headings":"","what":"enpls 5.8 (2017-03-24)","title":"enpls 5.8 (2017-03-24)","text":"CRAN release: 2017-03-25","code":""},{"path":"https://nanx.me/enpls/news/index.html","id":"improvements-5-8","dir":"Changelog","previous_headings":"","what":"Improvements","title":"enpls 5.8 (2017-03-24)","text":"Updated gallery images README.md. Better code indentation style. HTTPS enabled website.","code":""},{"path":"https://nanx.me/enpls/news/index.html","id":"enpls-57-2017-01-05","dir":"Changelog","previous_headings":"","what":"enpls 5.7 (2017-01-05)","title":"enpls 5.7 (2017-01-05)","text":"CRAN release: 2017-01-05","code":""},{"path":"https://nanx.me/enpls/news/index.html","id":"improvements-5-7","dir":"Changelog","previous_headings":"","what":"Improvements","title":"enpls 5.7 (2017-01-05)","text":"New documentation website generated pkgdown, full set function documentation vignettes available. Added Windows continuous integration support using AppVeyor.","code":""},{"path":"https://nanx.me/enpls/news/index.html","id":"enpls-56-2016-11-25","dir":"Changelog","previous_headings":"","what":"enpls 5.6 (2016-11-25)","title":"enpls 5.6 (2016-11-25)","text":"CRAN release: 2016-11-26","code":""},{"path":"https://nanx.me/enpls/news/index.html","id":"new-features-5-6","dir":"Changelog","previous_headings":"","what":"New Features","title":"enpls 5.6 (2016-11-25)","text":"New argument cvfolds now available applicable functions finer control cross-validation folds automatic parameter selection PLS/SPLS model.","code":""},{"path":"https://nanx.me/enpls/news/index.html","id":"improvements-5-6","dir":"Changelog","previous_headings":"","what":"Improvements","title":"enpls 5.6 (2016-11-25)","text":"Critical implementation improvements processing case argument maxcomp = NULL (maximum number components specified explicitly) enpls. functions. Now correctly determine maximum number components use, considering cross-validation special cases n < p.¬†Thanks Dr.¬†-Wu Lin feedback.","code":""},{"path":"https://nanx.me/enpls/news/index.html","id":"enpls-50-2016-10-20","dir":"Changelog","previous_headings":"","what":"enpls 5.0 (2016-10-20)","title":"enpls 5.0 (2016-10-20)","text":"CRAN release: 2016-10-25","code":""},{"path":"https://nanx.me/enpls/news/index.html","id":"new-features-5-0","dir":"Changelog","previous_headings":"","what":"New Features","title":"enpls 5.0 (2016-10-20)","text":"New functions enpls.ad() enspls.ad() PLS sparse PLS model applicability domain evaluation. New plot functions plot.enpls.ad() plot.enpls.ad() exploring model applicability domain evaluation results traditional static plot support interactive plot support. New argument alpha available setting transparency level (reduce overplotting) plot.cv.enpls, plot.enpls.od, plot.cv.enspls, plot.enspls.od.","code":""},{"path":"https://nanx.me/enpls/news/index.html","id":"enpls-45-2016-09-15","dir":"Changelog","previous_headings":"","what":"enpls 4.5 (2016-09-15)","title":"enpls 4.5 (2016-09-15)","text":"CRAN release: 2016-09-15","code":""},{"path":"https://nanx.me/enpls/news/index.html","id":"improvements-4-5","dir":"Changelog","previous_headings":"","what":"Improvements","title":"enpls 4.5 (2016-09-15)","text":"Reduced memory footprints enpls.fit() enspls.fit().","code":""},{"path":"https://nanx.me/enpls/news/index.html","id":"new-features-4-5","dir":"Changelog","previous_headings":"","what":"New Features","title":"enpls 4.5 (2016-09-15)","text":"New functions enpls.rmse(), enpls.mae(), enpls.rmsle() computing RMSE, MAE, RMSLE.","code":""},{"path":"https://nanx.me/enpls/news/index.html","id":"enpls-40-2016-08-28","dir":"Changelog","previous_headings":"","what":"enpls 4.0 (2016-08-28)","title":"enpls 4.0 (2016-08-28)","text":"CRAN release: 2016-08-29","code":""},{"path":"https://nanx.me/enpls/news/index.html","id":"improvements-4-0","dir":"Changelog","previous_headings":"","what":"Improvements","title":"enpls 4.0 (2016-08-28)","text":"General improvements function documentation. Changing argument name MCtimes reptimes. Changing option name \"bootstrap\" \"boot\".","code":""},{"path":"https://nanx.me/enpls/news/index.html","id":"enpls-30-2016-06-22","dir":"Changelog","previous_headings":"","what":"enpls 3.0 (2016-06-22)","title":"enpls 3.0 (2016-06-22)","text":"CRAN release: 2016-06-29","code":""},{"path":"https://nanx.me/enpls/news/index.html","id":"new-features-3-0","dir":"Changelog","previous_headings":"","what":"New Features","title":"enpls 3.0 (2016-06-22)","text":"Add sparse partial least squares regression.","code":""},{"path":"https://nanx.me/enpls/news/index.html","id":"improvements-3-0","dir":"Changelog","previous_headings":"","what":"Improvements","title":"enpls 3.0 (2016-06-22)","text":"Improvements documentation; rewritten vignette.","code":""},{"path":[]},{"path":"https://nanx.me/enpls/news/index.html","id":"new-features-2-0","dir":"Changelog","previous_headings":"","what":"New Features","title":"enpls 2.0 (2016-06-19)","text":"New project website.","code":""},{"path":"https://nanx.me/enpls/news/index.html","id":"improvements-2-0","dir":"Changelog","previous_headings":"","what":"Improvements","title":"enpls 2.0 (2016-06-19)","text":"General improvements plotting functions.","code":""},{"path":"https://nanx.me/enpls/news/index.html","id":"bug-fixes-2-0","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"enpls 2.0 (2016-06-19)","text":"Fixed major bugs cv.enpls plotting functions. Many bug fixes.","code":""},{"path":"https://nanx.me/enpls/news/index.html","id":"enpls-11-2015-11-26","dir":"Changelog","previous_headings":"","what":"enpls 1.1 (2015-11-26)","title":"enpls 1.1 (2015-11-26)","text":"CRAN release: 2015-11-27","code":""},{"path":"https://nanx.me/enpls/news/index.html","id":"bug-fixes-1-1","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"enpls 1.1 (2015-11-26)","text":"Fixed bugs automatic component number selection make intercept-model rank best. Thanks test patch Max Kuhn <max.kuhn@pfizer.com>.","code":""},{"path":"https://nanx.me/enpls/news/index.html","id":"enpls-10-2014-10-03","dir":"Changelog","previous_headings":"","what":"enpls 1.0 (2014-10-03)","title":"enpls 1.0 (2014-10-03)","text":"CRAN release: 2014-10-03","code":""},{"path":"https://nanx.me/enpls/news/index.html","id":"new-features-1-0","dir":"Changelog","previous_headings":"","what":"New Features","title":"enpls 1.0 (2014-10-03)","text":"initial release","code":""}]
